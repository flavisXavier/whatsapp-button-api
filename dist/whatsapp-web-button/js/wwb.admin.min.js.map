{"version":3,"sources":["datatables.js","jquery.maskedinput.js","admin.js"],"names":["factory","define","amd","$","window","document","exports","module","root","require","jQuery","undefined","_empty","d","_intVal","s","integer","parseInt","isNaN","isFinite","_numToDecimal","num","decimalPoint","_re_dic","RegExp","_fnEscapeRegex","replace","_isNumber","formatted","strType","_re_formatted_numeric","parseFloat","_htmlNumeric","_isHtml","_stripHtml","_pluck_order","a","order","prop","prop2","out","i","ien","length","push","_range","len","start","end","_removeEmpty","_ext","_Api","_api_register","_api_registerPlural","DataTable","options","this","sSelector","oOpts","api","_","rows","data","traditional","_fnSettingsFromNode","iApiIndex","fnAddData","redraw","isArray","isPlainObject","add","row","draw","flatten","toArray","fnAdjustColumnSizing","bRedraw","columns","adjust","settings","scroll","oScroll","sX","sY","_fnScrollDraw","fnClearTable","clear","fnClose","nTr","child","hide","fnDeleteRow","target","callback","aoData","remove","call","fnDestroy","destroy","fnDraw","complete","fnFilter","sInput","iColumn","bRegex","bSmart","bShowGlobal","bCaseInsensitive","search","column","fnGetData","src","col","type","nodeName","toLowerCase","cell","fnGetNodes","iRow","node","nodes","fnGetPosition","toUpperCase","index","columnVisible","fnIsOpen","isShown","fnOpen","mHtml","sClass","show","fnPageChange","mAction","page","fnSetColumnVis","iCol","bShow","visible","fnSettings","fnSort","aaSort","fnSortListener","nNode","fnCallback","listener","fnUpdate","mData","mRow","bAction","fnVersionCheck","_that","emptyInit","fn","oApi","internal","ext","_fnExternApiFunc","each","iLen","oInit","_fnExtend","sId","getAttribute","bInitHandedOff","defaults","$this","_fnCompatOpts","_fnCompatCols","_fnCamelToHungarian","extend","allSettings","nTable","nTHead","parentNode","nTFoot","bRetrieve","bDestroy","oInstance","_fnLog","sTableId","id","splice","_unique","oSettings","models","sDestroyWidth","style","width","sInstance","dataTable","_fnLanguageCompat","oLanguage","aLengthMenu","iDisplayLength","_fnMap","oFeatures","_fnCallbackReg","fnDrawCallback","fnServerParams","fnStateSaveParams","fnStateLoadParams","fnStateLoaded","fnRowCallback","fnCreatedRow","fnHeaderCallback","fnFooterCallback","fnInitComplete","fnPreDrawCallback","rowIdFn","_fnGetObjectDataFn","rowId","_fnBrowserDetect","oClasses","classes","addClass","sTable","iInitDisplayStart","iDisplayStart","_iDisplayStart","iDeferLoading","bDeferLoading","tmp","_iRecordsDisplay","_iRecordsTotal","sUrl","ajax","dataType","url","success","json","_fnInitialise","error","asStripeClasses","sStripeOdd","sStripeEven","stripeClasses","rowOne","children","find","eq","inArray","map","el","hasClass","removeClass","join","asDestroyStripes","slice","aoColumnsInit","anThs","nThead","getElementsByTagName","_fnDetectHeader","aoHeader","_fnGetUniqueThs","aoColumns","_fnAddColumn","_fnApplyColumnDefs","aoColumnDefs","oDef","_fnColumnOptions","name","sort","filter","features","loadedInit","aaSorting","sorting","asSorting","_fnSortingClasses","bSort","bSorted","aSort","_fnSortFlatten","sortedColumns","val","dir","_fnCallbackFire","_fnSortAria","_fnDataSource","bDeferRender","captions","_captionSide","css","thead","appendTo","tbody","nTBody","tfoot","sNoFooter","aoFooter","aaData","_fnAddData","_fnAddTr","aiDisplay","aiDisplayMaster","bInitialised","bStateSave","_fnSaveState","_fnLoadState","_re_new_lines","_re_html","_re_date","_re_escape_regex","_pluck","sorted","last","_areAllUnique","j","k","again","_fnHungarianMap","o","match","newKey","key","indexOf","_hungarianMap","user","force","hungarianKey","charAt","lang","defaultDecimal","sDecimal","_addNumericSort","zeroRecords","sZeroRecords","sEmptyTable","sLoadingRecords","sInfoThousands","sThousands","decimal","util","throttle","freq","timer","frequency","that","now","Date","args","arguments","clearTimeout","setTimeout","apply","escapeRegex","_fnCompatMap","knew","old","init","sScrollX","scrollX","searchCols","aoSearchCols","oSearch","dataSort","aDataSort","__browser","browser","n","position","top","left","scrollLeft","height","overflow","append","outer","inner","barWidth","offsetWidth","clientWidth","bScrollOversize","bScrollbarLeft","Math","round","offset","bBounding","getBoundingClientRect","oBrowser","iBarWidth","_fnReduce","inc","value","isSet","hasOwnProperty","nTh","oDefaults","oCol","oColumn","createElement","sTitle","innerHTML","idx","aoPreSearchCols","oOptions","th","sWidthOrig","attr","t","mDataProp","sType","_sManualType","className","iDataSort","attrTest","mDataSrc","mRender","_bAttrSrc","_setter","rowData","meta","innerData","fnSetData","_fnSetObjectDataFn","_rowReadObject","bSortable","sSortableNone","bAsc","bDesc","sSortingClass","sSortableAsc","sSortingClassJUI","sSortJUIAscAllowed","sSortableDesc","sSortJUIDescAllowed","sSortable","sSortJUI","_fnAdjustColumnSizing","bAutoWidth","_fnCalculateColumnWidths","sWidth","_fnVisibleToColumnIndex","iMatch","aiVis","_fnGetColumns","_fnColumnIndexToVisible","iPos","_fnVisbleColumns","vis","bVisible","sParam","_fnColumnTypes","jen","ken","detectedType","cache","types","detect","_fnGetCellData","aoColDefs","aoCols","jLen","kLen","def","aTargets","targets","aDataIn","anTds","oData","oRow","_aData","aIds","_fnCreateTr","trs","_fnGetRowElements","cells","rowIdx","colIdx","iDraw","defaultContent","sDefaultContent","cellData","iDrawError","_fnSetCellData","__reArray","__reFn","_fnSplitObjNotation","str","mSource","fetchData","arrayNotation","funcNotation","innerSrc","substring","setData","b","aLast","_fnGetDataMaster","_fnClearTable","_fnDeleteIndex","iTarget","iTargetIndex","_fnInvalidate","cellWrite","childNodes","removeChild","firstChild","anCells","_aSortData","_aFilterData","cols","_fnRowAttributes","contents","tds","td","objectRead","setter","cellProcess","trim","nextSibling","rowNode","nTrIn","nTd","_DT_RowIndex","sCellType","_DT_CellIndex","appendChild","fnCreatedCell","setAttribute","tr","DT_RowClass","split","__rowc","concat","DT_RowAttr","DT_RowData","_fnBuildHead","createHeader","iTabIndex","_fnSortAttachListener","html","_fnRenderer","sHeaderTH","sFooterTH","nTf","_fnDrawHead","aoSource","bIncludeHidden","nLocalTr","iRowspan","iColspan","aoLocal","aApplied","iColumns","_fnDraw","aPreDraw","anRows","iRowCount","iStripes","oLang","aoOpenRows","bServerSide","bDrawing","fnRecordsDisplay","iDisplayEnd","fnDisplayEnd","_fnProcessingDisplay","bDestroying","_fnAjaxUpdate","iStart","iEnd","iDataIndex","nRow","sStripe","_sRowStripe","sZero","fnRecordsTotal","class","valign","colSpan","sRowEmpty","body","detach","bFiltered","_fnReDraw","holdPosition","bFilter","_fnSort","_fnFilterComplete","oPreviousSearch","_drawHold","_fnAddOptionsHtml","table","holding","insertBefore","insert","sWrapper","nHolding","nTableWrapper","nTableReinsertBefore","featureNode","cOption","nNewNode","cNext","sAttr","aDom","sDom","sJUIHeader","sJUIFooter","aSplit","substr","parent","bPaginate","bLengthChange","_fnFeatureHtmlLength","_fnFeatureHtmlFilter","bProcessing","_fnFeatureHtmlProcessing","_fnFeatureHtmlTable","bInfo","_fnFeatureHtmlInfo","_fnFeatureHtmlPaginate","feature","aoFeatures","cFeature","fnInit","aanFeatures","replaceWith","aLayout","fnShiftCol","nCell","l","iColShifted","bUnique","nTrs","unique","nHeader","aReturn","bSortCellsTop","_fnBuildAjax","rbracket","jqXHR","ajaxData","instance","newData","baseAjax","sError","sServerMethod","xhr","ret","readyState","oAjaxData","fnServerData","sAjaxSource","bAjaxDataGet","_fnAjaxParameters","_fnAjaxUpdateDraw","param","dataProp","columnSearch","columnCount","preSearch","preColSearch","displayStart","displayLength","_iDisplayLength","sSearch","regex","sName","searchable","bSearchable","orderable","legacy","compat","modern","_fnAjaxDataSrc","recordsTotal","recordsFiltered","_bInitComplete","_fnInitComplete","dataSrc","sAjaxDataProp","tableId","language","previousSearch","input","sFilterInput","searchFn","f","sFilter","searchDelay","jqFilter","sSearchPlaceholder","on","_fnThrottle","e","keyCode","ev","activeElement","oInput","iForce","fnSaveFilter","oFilter","oPrevSearch","fnRegex","bEscapeRegex","aoPrevSearch","_fnFilter","_fnFilterColumn","_fnFilterCustom","filters","displayRows","merge","searchStr","smart","caseInsensitive","display","rpSearch","_fnFilterCreateSearch","test","invalidated","prevSearch","displayMaster","filtered","_fnFilterData","_sFilterRow","word","m","__filter_div","__filter_div_textContent","textContent","filterData","fomatters","wasInvalidated","toString","innerText","_fnSearchToCamel","obj","_fnSearchToHung","tid","sInfo","aoDrawCallback","_fnUpdateInfo","max","total","sInfoEmpty","sInfoFiltered","_fnInfoMacros","sInfoPostFix","fnInfoCallback","formatter","fnFormatNumber","all","ceil","iAjaxStart","deferLoading","_fnStringToCss","aData","_fnLengthChange","_fnLengthOverflow","menu","d2","lengths","select","aria-controls","sLengthSelect","Option","div","sLength","sLengthMenu","outerHTML","sPaginationType","plugin","pager","sPaging","p","visRecords","pages","buttons","_fnPageChange","action","records","floor","changed","r","sProcessing","size","scrollY","caption","captionSide","headerClone","cloneNode","footerClone","footer","_div","scroller","sScrollWrapper","sScrollHead","border","sScrollHeadInner","box-sizing","sXInner","removeAttr","sScrollBody","sScrollFoot","sScrollFootInner","scrollHead","scrollBody","scrollFoot","bCollapse","nScrollHead","nScrollBody","nScrollFoot","zeroOut","nSizer","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","headerTrgEls","footerTrgEls","headerSrcEls","footerSrcEls","headerCopy","footerCopy","correction","sanityWidth","scrollXInner","divHeader","divHeaderStyle","divHeaderInner","divHeaderInnerStyle","divHeaderTable","divBodyEl","divBody","divBodyStyle","divFooterInner","divFooterTable","header","tableEl","tableStyle","ie67","dtHeaderCells","headerWidths","footerWidths","headerContent","footerContent","scrollBarVis","scrollHeight","clientHeight","clone","prependTo","_fnApplyToChildren","outerWidth","offsetHeight","nToSize","iOuterWidth","bScrolling","padding","scrollTop","an1","an2","nNode1","nNode2","nodeType","__re_html_remove","columnIdx","visibleColumns","headerCells","tableWidthAttr","tableContainer","userInputs","styleWidth","_fnConvertToWidth","tmpTable","margin","_fnGetWidestNode","sContentPadding","holder","right","bounding","_reszEvt","bindResize","_fnGetMaxLenString","maxIdx","nestedSort","srcCol","fixed","aaSortingFixed","fixedObj","pre","post","_idx","sortCol","aiOrig","oExtSort","formatters","_fnSortData","x","y","dataA","dataB","label","oAria","removeAttribute","sSortAscending","sSortDescending","_fnSortListener","next","nextSortIdx","bSortMulti","sortIdx","attachTo","_fnBindAction","shiftKey","oldSort","aLastSort","sortClass","sSortColumn","bSortClasses","customData","customSort","sSortDataType","state","time","oSavedState","fnStateSaveCallback","loaded","abStateLoad","duration","iStateDuration","oLoadedState","fnStateLoadCallback","level","msg","tn","console","log","sErrMode","errMode","alert","Error","mappedName","extender","breakRefs","blur","which","preventDefault","sStore","callbackArr","eventName","reverse","Event","trigger","result","renderer","host","__apiStruct","__arrayProto","Array","prototype","context","ctxSettings","mixed","jq","tables","_toSettings","selector","opts","Api","any","count","ctx","iterator","alwaysNew","items","item","apiInst","_selector_row_indexes","apiSelector","lastIndexOf","pluck","pop","reduce","reduceRight","shift","to$","toJQuery","unshift","scope","__dt_wrapper","struct","methodScoping","struc","methodExt","propExt","register","method","heir","registerPlural","pluralName","singularName","__table_selector","paging","info","recordsDisplay","serverSide","__reload","one","abort","resetPaging","_selector_run","selectFn","res","selectorType","_selector_opts","_selector_first","inst","displayFiltered","displayFilteredMap","sel","selInt","cellIdx","closest","rowObj","__row_selector","hash","thatIdx","loopRow","loopCells","newRows","modRows","__details_remove","_details","_detailsShow","__details_display","insertAfter","__details_events","namespace","drawEvent","colvisEvent","destroyEvent","off","_child_obj","_child_mth","klass","addRow","created","__details_add","__columnData","r1","r2","__re_column_selector","names","visColumns","jqResult","__column_selector","calc","__setColumnVis","rowSelector","columnSelector","allCells","fnSelector","__cell_selector","set","caseInsen","versionCheck","version","iThis","iThat","aThis","aThat","isDataTable","fnIsDataTable","get","is","head","foot","fnTables","camelToHungarian","jqRows","orig","jqTable","jqTbody","jqWrapper","removedMethod","arg1","arg2","arg3","arg4","token","plural","resolved","bScrollCollapse","toFormat","JSON","parse","sessionStorage","localStorage","getItem","location","pathname","setItem","stringify","oPaginate","sFirst","sLast","sNext","sPrevious","sScrollXInner","sScrollY","aoRowCallback","aoHeaderCallback","aoFooterCallback","aoRowCreatedCallback","aoPreDrawCallback","aoInitComplete","aoStateSaveParams","aoStateLoadParams","aoStateLoaded","aoStateSave","aoStateLoad","aoServerParams","aoDestroyCallback","paginate","min","oPlugins","build","pageButton","oJUIClasses","sVersion","afnFiltering","aTypes","ofnSearch","oSort","afnSortData","oStdClasses","oPagination","sPageButton","sPageButtonActive","sPageButtonDisabled","sSortAsc","sSortDesc","sSortJUIAsc","sSortJUIDesc","sSortJUIWrapper","sSortIcon","extPagination","_numbers","numbers","numbers_length","half","DT_el","simple","full","simple_numbers","full_numbers","first_last_numbers","btnDisplay","btnClass","activeEl","aria","counter","attach","container","clickHandler","button","aria-label","data-dt-idx","tabindex","empty","focus","parsed","string","__numericReplace","decimalPlace","re1","re2","Infinity","num-fmt","html-num","html-num-fmt","date-pre","ts","html-pre","string-pre","string-asc","string-desc","jqueryui","__htmlEscapeEntities","render","number","thousands","precision","prefix","postfix","negative","flo","toFixed","abs","intPart","floatPart","text","_fnNodeToDataIndex","_fnNodeToColumnIndex","_fnCalculateEnd","dataTableSettings","dataTableExt","_instance","AutoFill","dt","c","autoFill","scrollInterval","handle","enabled","dom","bottom","background","list","i18n","dtScroll","offsetParent","_constructor","enable","flag","disable","_focusListener","_mousedown","_focusListenerRemove","_attach","handleDim","indexes","outerHeight","_getPosition","attachedTo","_detach","_actionSelector","actions","available","alwaysAsk","execute","_update","option","btn","_drawSelection","startCell","vertical","horizontal","colIndx","endRow","endCell","_editor","editor","idValues","fields","fieldName","editField","field","bubble","multiSet","submit","_emitEvent","triggerHandler","keys","keytable","parents","relatedTarget","targetParent","currOffsetParent","currNode","_mousemove","_mouseup","scrollWrapper","windowHeight","windowWidth","dtTop","dtLeft","dtHeight","dtWidth","_shiftScroll","startDt","selected","dtSettings","dtColumns","cellIndex","clearInterval","windowVert","windowHoriz","dtVert","dtHoriz","runInterval","windowY","pageY","windowX","pageX","scrollSpeed","setInterval","update","increment","fill","fillHorizontal","fillVertical","cancel","Responsive","current","responsive","details","dtPrivateSettings","oldWindowWidth","_responsive","_resize","_setColumnVis","breakpoints","_classLogic","_resizeAuto","_detailsInit","_timer","_redrawChildren","rowIds","every","_detailsDisplay","_columnsVisiblity","breakpoint","priority","auto","minWidth","includeIn","requiredWidth","scrolling","bar","usedWidth","control","showControl","never","operator","matched","_find","responsivePriority","dataPriority","classNames","brokenPoint","re","_detailsObj","_tabIndexes","click","targetIdx","title","orthogonal","hidden","columnIndex","rowIndex","oldVis","columnsVis","collapsedClass","toggleClass","isEmptyObject","_childNodeStore","_childNodesRestore","clonedTable","clonedHeader","clonedBody","clonedFooter","footerCells","inserted","showHide","removeData","childRow","childRowImmediate","hasHidden","modal","close","stopPropagation","prepend","parentChildren","listHiddenNodes","ul","found","_childNodes","listHidden","tableAll","tableClass","li","caretTimeoutId","ua","navigator","userAgent","iPhone","chrome","android","mask","definitions","9","*","autoclear","dataName","placeholder","caret","begin","range","setSelectionRange","createTextRange","collapse","moveEnd","moveStart","selectionStart","selectionEnd","selection","createRange","duplicate","unmask","defs","tests","partialPosition","firstNonMaskPos","lastRequiredNonMaskPos","oldVal","completed","String","buffer","getPlaceholder","defaultBuffer","focusText","tryFireCompleted","seekNext","pos","shiftL","writeBuffer","blurEvent","checkVal","change","clearBuffer","allow","lastMatch","seekPrev","ctrlKey","altKey","metaKey","fromCharCode","shiftR","proxy","curVal","lastEnteredValue","ready","custom_uploader","wp","media","multiple","attachment","first","toJSON","open","multi_numbers","forEach","arr","labelExist","animate","registerNumberFalse","wwbtn_ajax_object","ajax_url","response","href","label_del"],"mappings":"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","file":"wwb.admin.min.js","sourcesContent":["/*\n * This combined file was created by the DataTables downloader builder:\n *   https://datatables.net/download\n *\n * To rebuild or modify this file with the latest versions of the included\n * software please visit:\n *   https://datatables.net/download/#dt/dt-1.10.18/af-2.3.2/r-2.2.2\n *\n * Included libraries:\n *   DataTables 1.10.18, AutoFill 2.3.2, Responsive 2.2.2\n */\n\n/*! DataTables 1.10.18\n * ©2008-2018 SpryMedia Ltd - datatables.net/license\n */\n\n/**\n * @summary     DataTables\n * @description Paginate, search and order HTML tables\n * @version     1.10.18\n * @file        jquery.dataTables.js\n * @author      SpryMedia Ltd\n * @contact     www.datatables.net\n * @copyright   Copyright 2008-2018 SpryMedia Ltd.\n *\n * This source file is free software, available under the following license:\n *   MIT license - http://datatables.net/license\n *\n * This source file is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n *\n * For details please refer to: http://www.datatables.net\n */\n\n/*jslint evil: true, undef: true, browser: true */\n/*globals $,require,jQuery,define,_selector_run,_selector_opts,_selector_first,_selector_row_indexes,_ext,_Api,_api_register,_api_registerPlural,_re_new_lines,_re_html,_re_formatted_numeric,_re_escape_regex,_empty,_intVal,_numToDecimal,_isNumber,_isHtml,_htmlNumeric,_pluck,_pluck_order,_range,_stripHtml,_unique,_fnBuildAjax,_fnAjaxUpdate,_fnAjaxParameters,_fnAjaxUpdateDraw,_fnAjaxDataSrc,_fnAddColumn,_fnColumnOptions,_fnAdjustColumnSizing,_fnVisibleToColumnIndex,_fnColumnIndexToVisible,_fnVisbleColumns,_fnGetColumns,_fnColumnTypes,_fnApplyColumnDefs,_fnHungarianMap,_fnCamelToHungarian,_fnLanguageCompat,_fnBrowserDetect,_fnAddData,_fnAddTr,_fnNodeToDataIndex,_fnNodeToColumnIndex,_fnGetCellData,_fnSetCellData,_fnSplitObjNotation,_fnGetObjectDataFn,_fnSetObjectDataFn,_fnGetDataMaster,_fnClearTable,_fnDeleteIndex,_fnInvalidate,_fnGetRowElements,_fnCreateTr,_fnBuildHead,_fnDrawHead,_fnDraw,_fnReDraw,_fnAddOptionsHtml,_fnDetectHeader,_fnGetUniqueThs,_fnFeatureHtmlFilter,_fnFilterComplete,_fnFilterCustom,_fnFilterColumn,_fnFilter,_fnFilterCreateSearch,_fnEscapeRegex,_fnFilterData,_fnFeatureHtmlInfo,_fnUpdateInfo,_fnInfoMacros,_fnInitialise,_fnInitComplete,_fnLengthChange,_fnFeatureHtmlLength,_fnFeatureHtmlPaginate,_fnPageChange,_fnFeatureHtmlProcessing,_fnProcessingDisplay,_fnFeatureHtmlTable,_fnScrollDraw,_fnApplyToChildren,_fnCalculateColumnWidths,_fnThrottle,_fnConvertToWidth,_fnGetWidestNode,_fnGetMaxLenString,_fnStringToCss,_fnSortFlatten,_fnSort,_fnSortAria,_fnSortListener,_fnSortAttachListener,_fnSortingClasses,_fnSortData,_fnSaveState,_fnLoadState,_fnSettingsFromNode,_fnLog,_fnMap,_fnBindAction,_fnCallbackReg,_fnCallbackFire,_fnLengthOverflow,_fnRenderer,_fnDataSource,_fnRowAttributes*/\n\n(function( factory ) {\n\t\"use strict\";\n\n\tif ( typeof define === 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( ['jquery'], function ( $ ) {\n\t\t\treturn factory( $, window, document );\n\t\t} );\n\t}\n\telse if ( typeof exports === 'object' ) {\n\t\t// CommonJS\n\t\tmodule.exports = function (root, $) {\n\t\t\tif ( ! root ) {\n\t\t\t\t// CommonJS environments without a window global must pass a\n\t\t\t\t// root. This will give an error otherwise\n\t\t\t\troot = window;\n\t\t\t}\n\n\t\t\tif ( ! $ ) {\n\t\t\t\t$ = typeof window !== 'undefined' ? // jQuery's factory checks for a global window\n\t\t\t\t\trequire('jquery') :\n\t\t\t\t\trequire('jquery')( root );\n\t\t\t}\n\n\t\t\treturn factory( $, root, root.document );\n\t\t};\n\t}\n\telse {\n\t\t// Browser\n\t\tfactory( jQuery, window, document );\n\t}\n}\n(function( $, window, document, undefined ) {\n\t\"use strict\";\n\n\t/**\n\t * DataTables is a plug-in for the jQuery Javascript library. It is a highly\n\t * flexible tool, based upon the foundations of progressive enhancement,\n\t * which will add advanced interaction controls to any HTML table. For a\n\t * full list of features please refer to\n\t * [DataTables.net](href=\"http://datatables.net).\n\t *\n\t * Note that the `DataTable` object is not a global variable but is aliased\n\t * to `jQuery.fn.DataTable` and `jQuery.fn.dataTable` through which it may\n\t * be  accessed.\n\t *\n\t *  @class\n\t *  @param {object} [init={}] Configuration object for DataTables. Options\n\t *    are defined by {@link DataTable.defaults}\n\t *  @requires jQuery 1.7+\n\t *\n\t *  @example\n\t *    // Basic initialisation\n\t *    $(document).ready( function {\n\t *      $('#example').dataTable();\n\t *    } );\n\t *\n\t *  @example\n\t *    // Initialisation with configuration options - in this case, disable\n\t *    // pagination and sorting.\n\t *    $(document).ready( function {\n\t *      $('#example').dataTable( {\n\t *        \"paginate\": false,\n\t *        \"sort\": false\n\t *      } );\n\t *    } );\n\t */\n\tvar DataTable = function ( options )\n\t{\n\t\t/**\n\t\t * Perform a jQuery selector action on the table's TR elements (from the tbody) and\n\t\t * return the resulting jQuery object.\n\t\t *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\n\t\t *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\n\t\t *  @param {string} [oOpts.filter=none] Select TR elements that meet the current filter\n\t\t *    criterion (\"applied\") or all TR elements (i.e. no filter).\n\t\t *  @param {string} [oOpts.order=current] Order of the TR elements in the processed array.\n\t\t *    Can be either 'current', whereby the current sorting of the table is used, or\n\t\t *    'original' whereby the original order the data was read into the table is used.\n\t\t *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\n\t\t *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be\n\t\t *    'current' and filter is 'applied', regardless of what they might be given as.\n\t\t *  @returns {object} jQuery object, filtered by the given selector.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Highlight every second row\n\t\t *      oTable.$('tr:odd').css('backgroundColor', 'blue');\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Filter to rows with 'Webkit' in them, add a background colour and then\n\t\t *      // remove the filter, thus highlighting the 'Webkit' rows only.\n\t\t *      oTable.fnFilter('Webkit');\n\t\t *      oTable.$('tr', {\"search\": \"applied\"}).css('backgroundColor', 'blue');\n\t\t *      oTable.fnFilter('');\n\t\t *    } );\n\t\t */\n\t\tthis.$ = function ( sSelector, oOpts )\n\t\t{\n\t\t\treturn this.api(true).$( sSelector, oOpts );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Almost identical to $ in operation, but in this case returns the data for the matched\n\t\t * rows - as such, the jQuery selector used should match TR row nodes or TD/TH cell nodes\n\t\t * rather than any descendants, so the data can be obtained for the row/cell. If matching\n\t\t * rows are found, the data returned is the original data array/object that was used to\n\t\t * create the row (or a generated array if from a DOM source).\n\t\t *\n\t\t * This method is often useful in-combination with $ where both functions are given the\n\t\t * same parameters and the array indexes will match identically.\n\t\t *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\n\t\t *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\n\t\t *  @param {string} [oOpts.filter=none] Select elements that meet the current filter\n\t\t *    criterion (\"applied\") or all elements (i.e. no filter).\n\t\t *  @param {string} [oOpts.order=current] Order of the data in the processed array.\n\t\t *    Can be either 'current', whereby the current sorting of the table is used, or\n\t\t *    'original' whereby the original order the data was read into the table is used.\n\t\t *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\n\t\t *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be\n\t\t *    'current' and filter is 'applied', regardless of what they might be given as.\n\t\t *  @returns {array} Data for the matched elements. If any elements, as a result of the\n\t\t *    selector, were not TR, TD or TH elements in the DataTable, they will have a null\n\t\t *    entry in the array.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Get the data from the first row in the table\n\t\t *      var data = oTable._('tr:first');\n\t\t *\n\t\t *      // Do something useful with the data\n\t\t *      alert( \"First cell is: \"+data[0] );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Filter to 'Webkit' and get all data for\n\t\t *      oTable.fnFilter('Webkit');\n\t\t *      var data = oTable._('tr', {\"search\": \"applied\"});\n\t\t *\n\t\t *      // Do something with the data\n\t\t *      alert( data.length+\" rows matched the search\" );\n\t\t *    } );\n\t\t */\n\t\tthis._ = function ( sSelector, oOpts )\n\t\t{\n\t\t\treturn this.api(true).rows( sSelector, oOpts ).data();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Create a DataTables Api instance, with the currently selected tables for\n\t\t * the Api's context.\n\t\t * @param {boolean} [traditional=false] Set the API instance's context to be\n\t\t *   only the table referred to by the `DataTable.ext.iApiIndex` option, as was\n\t\t *   used in the API presented by DataTables 1.9- (i.e. the traditional mode),\n\t\t *   or if all tables captured in the jQuery object should be used.\n\t\t * @return {DataTables.Api}\n\t\t */\n\t\tthis.api = function ( traditional )\n\t\t{\n\t\t\treturn traditional ?\n\t\t\t\tnew _Api(\n\t\t\t\t\t_fnSettingsFromNode( this[ _ext.iApiIndex ] )\n\t\t\t\t) :\n\t\t\t\tnew _Api( this );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Add a single new row or multiple rows of data to the table. Please note\n\t\t * that this is suitable for client-side processing only - if you are using\n\t\t * server-side processing (i.e. \"bServerSide\": true), then to add data, you\n\t\t * must add it to the data source, i.e. the server-side, through an Ajax call.\n\t\t *  @param {array|object} data The data to be added to the table. This can be:\n\t\t *    <ul>\n\t\t *      <li>1D array of data - add a single row with the data provided</li>\n\t\t *      <li>2D array of arrays - add multiple rows in a single call</li>\n\t\t *      <li>object - data object when using <i>mData</i></li>\n\t\t *      <li>array of objects - multiple data objects when using <i>mData</i></li>\n\t\t *    </ul>\n\t\t *  @param {bool} [redraw=true] redraw the table or not\n\t\t *  @returns {array} An array of integers, representing the list of indexes in\n\t\t *    <i>aoData</i> ({@link DataTable.models.oSettings}) that have been added to\n\t\t *    the table.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    // Global var for counter\n\t\t *    var giCount = 2;\n\t\t *\n\t\t *    $(document).ready(function() {\n\t\t *      $('#example').dataTable();\n\t\t *    } );\n\t\t *\n\t\t *    function fnClickAddRow() {\n\t\t *      $('#example').dataTable().fnAddData( [\n\t\t *        giCount+\".1\",\n\t\t *        giCount+\".2\",\n\t\t *        giCount+\".3\",\n\t\t *        giCount+\".4\" ]\n\t\t *      );\n\t\t *\n\t\t *      giCount++;\n\t\t *    }\n\t\t */\n\t\tthis.fnAddData = function( data, redraw )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\n\t\t\t/* Check if we want to add multiple rows or not */\n\t\t\tvar rows = $.isArray(data) && ( $.isArray(data[0]) || $.isPlainObject(data[0]) ) ?\n\t\t\t\tapi.rows.add( data ) :\n\t\t\t\tapi.row.add( data );\n\t\t\n\t\t\tif ( redraw === undefined || redraw ) {\n\t\t\t\tapi.draw();\n\t\t\t}\n\t\t\n\t\t\treturn rows.flatten().toArray();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * This function will make DataTables recalculate the column sizes, based on the data\n\t\t * contained in the table and the sizes applied to the columns (in the DOM, CSS or\n\t\t * through the sWidth parameter). This can be useful when the width of the table's\n\t\t * parent element changes (for example a window resize).\n\t\t *  @param {boolean} [bRedraw=true] Redraw the table or not, you will typically want to\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable( {\n\t\t *        \"sScrollY\": \"200px\",\n\t\t *        \"bPaginate\": false\n\t\t *      } );\n\t\t *\n\t\t *      $(window).on('resize', function () {\n\t\t *        oTable.fnAdjustColumnSizing();\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\tthis.fnAdjustColumnSizing = function ( bRedraw )\n\t\t{\n\t\t\tvar api = this.api( true ).columns.adjust();\n\t\t\tvar settings = api.settings()[0];\n\t\t\tvar scroll = settings.oScroll;\n\t\t\n\t\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\t\tapi.draw( false );\n\t\t\t}\n\t\t\telse if ( scroll.sX !== \"\" || scroll.sY !== \"\" ) {\n\t\t\t\t/* If not redrawing, but scrolling, we want to apply the new column sizes anyway */\n\t\t\t\t_fnScrollDraw( settings );\n\t\t\t}\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Quickly and simply clear a table\n\t\t *  @param {bool} [bRedraw=true] redraw the table or not\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Immediately 'nuke' the current rows (perhaps waiting for an Ajax callback...)\n\t\t *      oTable.fnClearTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnClearTable = function( bRedraw )\n\t\t{\n\t\t\tvar api = this.api( true ).clear();\n\t\t\n\t\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\t\tapi.draw();\n\t\t\t}\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * The exact opposite of 'opening' a row, this function will close any rows which\n\t\t * are currently 'open'.\n\t\t *  @param {node} nTr the table row to 'close'\n\t\t *  @returns {int} 0 on success, or 1 if failed (can't find the row)\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable;\n\t\t *\n\t\t *      // 'open' an information row when a row is clicked on\n\t\t *      $('#example tbody tr').click( function () {\n\t\t *        if ( oTable.fnIsOpen(this) ) {\n\t\t *          oTable.fnClose( this );\n\t\t *        } else {\n\t\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t\t *        }\n\t\t *      } );\n\t\t *\n\t\t *      oTable = $('#example').dataTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnClose = function( nTr )\n\t\t{\n\t\t\tthis.api( true ).row( nTr ).child.hide();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Remove a row for the table\n\t\t *  @param {mixed} target The index of the row from aoData to be deleted, or\n\t\t *    the TR element you want to delete\n\t\t *  @param {function|null} [callBack] Callback function\n\t\t *  @param {bool} [redraw=true] Redraw the table or not\n\t\t *  @returns {array} The row that was deleted\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Immediately remove the first row\n\t\t *      oTable.fnDeleteRow( 0 );\n\t\t *    } );\n\t\t */\n\t\tthis.fnDeleteRow = function( target, callback, redraw )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\tvar rows = api.rows( target );\n\t\t\tvar settings = rows.settings()[0];\n\t\t\tvar data = settings.aoData[ rows[0][0] ];\n\t\t\n\t\t\trows.remove();\n\t\t\n\t\t\tif ( callback ) {\n\t\t\t\tcallback.call( this, settings, data );\n\t\t\t}\n\t\t\n\t\t\tif ( redraw === undefined || redraw ) {\n\t\t\t\tapi.draw();\n\t\t\t}\n\t\t\n\t\t\treturn data;\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Restore the table to it's original state in the DOM by removing all of DataTables\n\t\t * enhancements, alterations to the DOM structure of the table and event listeners.\n\t\t *  @param {boolean} [remove=false] Completely remove the table from the DOM\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      // This example is fairly pointless in reality, but shows how fnDestroy can be used\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      oTable.fnDestroy();\n\t\t *    } );\n\t\t */\n\t\tthis.fnDestroy = function ( remove )\n\t\t{\n\t\t\tthis.api( true ).destroy( remove );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Redraw the table\n\t\t *  @param {bool} [complete=true] Re-filter and resort (if enabled) the table before the draw.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Re-draw the table - you wouldn't want to do it here, but it's an example :-)\n\t\t *      oTable.fnDraw();\n\t\t *    } );\n\t\t */\n\t\tthis.fnDraw = function( complete )\n\t\t{\n\t\t\t// Note that this isn't an exact match to the old call to _fnDraw - it takes\n\t\t\t// into account the new data, but can hold position.\n\t\t\tthis.api( true ).draw( complete );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Filter the input based on data\n\t\t *  @param {string} sInput String to filter the table on\n\t\t *  @param {int|null} [iColumn] Column to limit filtering to\n\t\t *  @param {bool} [bRegex=false] Treat as regular expression or not\n\t\t *  @param {bool} [bSmart=true] Perform smart filtering or not\n\t\t *  @param {bool} [bShowGlobal=true] Show the input global filter in it's input box(es)\n\t\t *  @param {bool} [bCaseInsensitive=true] Do case-insensitive matching (true) or not (false)\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Sometime later - filter...\n\t\t *      oTable.fnFilter( 'test string' );\n\t\t *    } );\n\t\t */\n\t\tthis.fnFilter = function( sInput, iColumn, bRegex, bSmart, bShowGlobal, bCaseInsensitive )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\n\t\t\tif ( iColumn === null || iColumn === undefined ) {\n\t\t\t\tapi.search( sInput, bRegex, bSmart, bCaseInsensitive );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tapi.column( iColumn ).search( sInput, bRegex, bSmart, bCaseInsensitive );\n\t\t\t}\n\t\t\n\t\t\tapi.draw();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Get the data for the whole table, an individual row or an individual cell based on the\n\t\t * provided parameters.\n\t\t *  @param {int|node} [src] A TR row node, TD/TH cell node or an integer. If given as\n\t\t *    a TR node then the data source for the whole row will be returned. If given as a\n\t\t *    TD/TH cell node then iCol will be automatically calculated and the data for the\n\t\t *    cell returned. If given as an integer, then this is treated as the aoData internal\n\t\t *    data index for the row (see fnGetPosition) and the data for that row used.\n\t\t *  @param {int} [col] Optional column index that you want the data of.\n\t\t *  @returns {array|object|string} If mRow is undefined, then the data for all rows is\n\t\t *    returned. If mRow is defined, just data for that row, and is iCol is\n\t\t *    defined, only data for the designated cell is returned.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    // Row data\n\t\t *    $(document).ready(function() {\n\t\t *      oTable = $('#example').dataTable();\n\t\t *\n\t\t *      oTable.$('tr').click( function () {\n\t\t *        var data = oTable.fnGetData( this );\n\t\t *        // ... do something with the array / object of data for the row\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Individual cell data\n\t\t *    $(document).ready(function() {\n\t\t *      oTable = $('#example').dataTable();\n\t\t *\n\t\t *      oTable.$('td').click( function () {\n\t\t *        var sData = oTable.fnGetData( this );\n\t\t *        alert( 'The cell clicked on had the value of '+sData );\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\tthis.fnGetData = function( src, col )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\n\t\t\tif ( src !== undefined ) {\n\t\t\t\tvar type = src.nodeName ? src.nodeName.toLowerCase() : '';\n\t\t\n\t\t\t\treturn col !== undefined || type == 'td' || type == 'th' ?\n\t\t\t\t\tapi.cell( src, col ).data() :\n\t\t\t\t\tapi.row( src ).data() || null;\n\t\t\t}\n\t\t\n\t\t\treturn api.data().toArray();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Get an array of the TR nodes that are used in the table's body. Note that you will\n\t\t * typically want to use the '$' API method in preference to this as it is more\n\t\t * flexible.\n\t\t *  @param {int} [iRow] Optional row index for the TR element you want\n\t\t *  @returns {array|node} If iRow is undefined, returns an array of all TR elements\n\t\t *    in the table's body, or iRow is defined, just the TR element requested.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Get the nodes from the table\n\t\t *      var nNodes = oTable.fnGetNodes( );\n\t\t *    } );\n\t\t */\n\t\tthis.fnGetNodes = function( iRow )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\n\t\t\treturn iRow !== undefined ?\n\t\t\t\tapi.row( iRow ).node() :\n\t\t\t\tapi.rows().nodes().flatten().toArray();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Get the array indexes of a particular cell from it's DOM element\n\t\t * and column index including hidden columns\n\t\t *  @param {node} node this can either be a TR, TD or TH in the table's body\n\t\t *  @returns {int} If nNode is given as a TR, then a single index is returned, or\n\t\t *    if given as a cell, an array of [row index, column index (visible),\n\t\t *    column index (all)] is given.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      $('#example tbody td').click( function () {\n\t\t *        // Get the position of the current data from the node\n\t\t *        var aPos = oTable.fnGetPosition( this );\n\t\t *\n\t\t *        // Get the data array for this row\n\t\t *        var aData = oTable.fnGetData( aPos[0] );\n\t\t *\n\t\t *        // Update the data array and return the value\n\t\t *        aData[ aPos[1] ] = 'clicked';\n\t\t *        this.innerHTML = 'clicked';\n\t\t *      } );\n\t\t *\n\t\t *      // Init DataTables\n\t\t *      oTable = $('#example').dataTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnGetPosition = function( node )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\tvar nodeName = node.nodeName.toUpperCase();\n\t\t\n\t\t\tif ( nodeName == 'TR' ) {\n\t\t\t\treturn api.row( node ).index();\n\t\t\t}\n\t\t\telse if ( nodeName == 'TD' || nodeName == 'TH' ) {\n\t\t\t\tvar cell = api.cell( node ).index();\n\t\t\n\t\t\t\treturn [\n\t\t\t\t\tcell.row,\n\t\t\t\t\tcell.columnVisible,\n\t\t\t\t\tcell.column\n\t\t\t\t];\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Check to see if a row is 'open' or not.\n\t\t *  @param {node} nTr the table row to check\n\t\t *  @returns {boolean} true if the row is currently open, false otherwise\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable;\n\t\t *\n\t\t *      // 'open' an information row when a row is clicked on\n\t\t *      $('#example tbody tr').click( function () {\n\t\t *        if ( oTable.fnIsOpen(this) ) {\n\t\t *          oTable.fnClose( this );\n\t\t *        } else {\n\t\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t\t *        }\n\t\t *      } );\n\t\t *\n\t\t *      oTable = $('#example').dataTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnIsOpen = function( nTr )\n\t\t{\n\t\t\treturn this.api( true ).row( nTr ).child.isShown();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * This function will place a new row directly after a row which is currently\n\t\t * on display on the page, with the HTML contents that is passed into the\n\t\t * function. This can be used, for example, to ask for confirmation that a\n\t\t * particular record should be deleted.\n\t\t *  @param {node} nTr The table row to 'open'\n\t\t *  @param {string|node|jQuery} mHtml The HTML to put into the row\n\t\t *  @param {string} sClass Class to give the new TD cell\n\t\t *  @returns {node} The row opened. Note that if the table row passed in as the\n\t\t *    first parameter, is not found in the table, this method will silently\n\t\t *    return.\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable;\n\t\t *\n\t\t *      // 'open' an information row when a row is clicked on\n\t\t *      $('#example tbody tr').click( function () {\n\t\t *        if ( oTable.fnIsOpen(this) ) {\n\t\t *          oTable.fnClose( this );\n\t\t *        } else {\n\t\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t\t *        }\n\t\t *      } );\n\t\t *\n\t\t *      oTable = $('#example').dataTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnOpen = function( nTr, mHtml, sClass )\n\t\t{\n\t\t\treturn this.api( true )\n\t\t\t\t.row( nTr )\n\t\t\t\t.child( mHtml, sClass )\n\t\t\t\t.show()\n\t\t\t\t.child()[0];\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Change the pagination - provides the internal logic for pagination in a simple API\n\t\t * function. With this function you can have a DataTables table go to the next,\n\t\t * previous, first or last pages.\n\t\t *  @param {string|int} mAction Paging action to take: \"first\", \"previous\", \"next\" or \"last\"\n\t\t *    or page number to jump to (integer), note that page 0 is the first page.\n\t\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      oTable.fnPageChange( 'next' );\n\t\t *    } );\n\t\t */\n\t\tthis.fnPageChange = function ( mAction, bRedraw )\n\t\t{\n\t\t\tvar api = this.api( true ).page( mAction );\n\t\t\n\t\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\t\tapi.draw(false);\n\t\t\t}\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Show a particular column\n\t\t *  @param {int} iCol The column whose display should be changed\n\t\t *  @param {bool} bShow Show (true) or hide (false) the column\n\t\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Hide the second column after initialisation\n\t\t *      oTable.fnSetColumnVis( 1, false );\n\t\t *    } );\n\t\t */\n\t\tthis.fnSetColumnVis = function ( iCol, bShow, bRedraw )\n\t\t{\n\t\t\tvar api = this.api( true ).column( iCol ).visible( bShow );\n\t\t\n\t\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\t\tapi.columns.adjust().draw();\n\t\t\t}\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Get the settings for a particular table for external manipulation\n\t\t *  @returns {object} DataTables settings object. See\n\t\t *    {@link DataTable.models.oSettings}\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      var oSettings = oTable.fnSettings();\n\t\t *\n\t\t *      // Show an example parameter from the settings\n\t\t *      alert( oSettings._iDisplayStart );\n\t\t *    } );\n\t\t */\n\t\tthis.fnSettings = function()\n\t\t{\n\t\t\treturn _fnSettingsFromNode( this[_ext.iApiIndex] );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Sort the table by a particular column\n\t\t *  @param {int} iCol the data index to sort on. Note that this will not match the\n\t\t *    'display index' if you have hidden data entries\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Sort immediately with columns 0 and 1\n\t\t *      oTable.fnSort( [ [0,'asc'], [1,'asc'] ] );\n\t\t *    } );\n\t\t */\n\t\tthis.fnSort = function( aaSort )\n\t\t{\n\t\t\tthis.api( true ).order( aaSort ).draw();\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Attach a sort listener to an element for a given column\n\t\t *  @param {node} nNode the element to attach the sort listener to\n\t\t *  @param {int} iColumn the column that a click on this node will sort on\n\t\t *  @param {function} [fnCallback] callback function when sort is run\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Sort on column 1, when 'sorter' is clicked on\n\t\t *      oTable.fnSortListener( document.getElementById('sorter'), 1 );\n\t\t *    } );\n\t\t */\n\t\tthis.fnSortListener = function( nNode, iColumn, fnCallback )\n\t\t{\n\t\t\tthis.api( true ).order.listener( nNode, iColumn, fnCallback );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Update a table cell or row - this method will accept either a single value to\n\t\t * update the cell with, an array of values with one element for each column or\n\t\t * an object in the same format as the original data source. The function is\n\t\t * self-referencing in order to make the multi column updates easier.\n\t\t *  @param {object|array|string} mData Data to update the cell/row with\n\t\t *  @param {node|int} mRow TR element you want to update or the aoData index\n\t\t *  @param {int} [iColumn] The column to update, give as null or undefined to\n\t\t *    update a whole row.\n\t\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t\t *  @param {bool} [bAction=true] Perform pre-draw actions or not\n\t\t *  @returns {int} 0 on success, 1 on error\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      oTable.fnUpdate( 'Example update', 0, 0 ); // Single cell\n\t\t *      oTable.fnUpdate( ['a', 'b', 'c', 'd', 'e'], $('tbody tr')[0] ); // Row\n\t\t *    } );\n\t\t */\n\t\tthis.fnUpdate = function( mData, mRow, iColumn, bRedraw, bAction )\n\t\t{\n\t\t\tvar api = this.api( true );\n\t\t\n\t\t\tif ( iColumn === undefined || iColumn === null ) {\n\t\t\t\tapi.row( mRow ).data( mData );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tapi.cell( mRow, iColumn ).data( mData );\n\t\t\t}\n\t\t\n\t\t\tif ( bAction === undefined || bAction ) {\n\t\t\t\tapi.columns.adjust();\n\t\t\t}\n\t\t\n\t\t\tif ( bRedraw === undefined || bRedraw ) {\n\t\t\t\tapi.draw();\n\t\t\t}\n\t\t\treturn 0;\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Provide a common method for plug-ins to check the version of DataTables being used, in order\n\t\t * to ensure compatibility.\n\t\t *  @param {string} sVersion Version string to check for, in the format \"X.Y.Z\". Note that the\n\t\t *    formats \"X\" and \"X.Y\" are also acceptable.\n\t\t *  @returns {boolean} true if this version of DataTables is greater or equal to the required\n\t\t *    version, or false if this version of DataTales is not suitable\n\t\t *  @method\n\t\t *  @dtopt API\n\t\t *  @deprecated Since v1.10\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      alert( oTable.fnVersionCheck( '1.9.0' ) );\n\t\t *    } );\n\t\t */\n\t\tthis.fnVersionCheck = _ext.fnVersionCheck;\n\t\t\n\n\t\tvar _that = this;\n\t\tvar emptyInit = options === undefined;\n\t\tvar len = this.length;\n\n\t\tif ( emptyInit ) {\n\t\t\toptions = {};\n\t\t}\n\n\t\tthis.oApi = this.internal = _ext.internal;\n\n\t\t// Extend with old style plug-in API methods\n\t\tfor ( var fn in DataTable.ext.internal ) {\n\t\t\tif ( fn ) {\n\t\t\t\tthis[fn] = _fnExternApiFunc(fn);\n\t\t\t}\n\t\t}\n\n\t\tthis.each(function() {\n\t\t\t// For each initialisation we want to give it a clean initialisation\n\t\t\t// object that can be bashed around\n\t\t\tvar o = {};\n\t\t\tvar oInit = len > 1 ? // optimisation for single table case\n\t\t\t\t_fnExtend( o, options, true ) :\n\t\t\t\toptions;\n\n\t\t\t/*global oInit,_that,emptyInit*/\n\t\t\tvar i=0, iLen, j, jLen, k, kLen;\n\t\t\tvar sId = this.getAttribute( 'id' );\n\t\t\tvar bInitHandedOff = false;\n\t\t\tvar defaults = DataTable.defaults;\n\t\t\tvar $this = $(this);\n\t\t\t\n\t\t\t\n\t\t\t/* Sanity check */\n\t\t\tif ( this.nodeName.toLowerCase() != 'table' )\n\t\t\t{\n\t\t\t\t_fnLog( null, 0, 'Non-table node initialisation ('+this.nodeName+')', 2 );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\t/* Backwards compatibility for the defaults */\n\t\t\t_fnCompatOpts( defaults );\n\t\t\t_fnCompatCols( defaults.column );\n\t\t\t\n\t\t\t/* Convert the camel-case defaults to Hungarian */\n\t\t\t_fnCamelToHungarian( defaults, defaults, true );\n\t\t\t_fnCamelToHungarian( defaults.column, defaults.column, true );\n\t\t\t\n\t\t\t/* Setting up the initialisation object */\n\t\t\t_fnCamelToHungarian( defaults, $.extend( oInit, $this.data() ) );\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t/* Check to see if we are re-initialising a table */\n\t\t\tvar allSettings = DataTable.settings;\n\t\t\tfor ( i=0, iLen=allSettings.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tvar s = allSettings[i];\n\t\t\t\n\t\t\t\t/* Base check on table node */\n\t\t\t\tif (\n\t\t\t\t\ts.nTable == this ||\n\t\t\t\t\t(s.nTHead && s.nTHead.parentNode == this) ||\n\t\t\t\t\t(s.nTFoot && s.nTFoot.parentNode == this)\n\t\t\t\t) {\n\t\t\t\t\tvar bRetrieve = oInit.bRetrieve !== undefined ? oInit.bRetrieve : defaults.bRetrieve;\n\t\t\t\t\tvar bDestroy = oInit.bDestroy !== undefined ? oInit.bDestroy : defaults.bDestroy;\n\t\t\t\n\t\t\t\t\tif ( emptyInit || bRetrieve )\n\t\t\t\t\t{\n\t\t\t\t\t\treturn s.oInstance;\n\t\t\t\t\t}\n\t\t\t\t\telse if ( bDestroy )\n\t\t\t\t\t{\n\t\t\t\t\t\ts.oInstance.fnDestroy();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t_fnLog( s, 0, 'Cannot reinitialise DataTable', 3 );\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t\t\t/* If the element we are initialising has the same ID as a table which was previously\n\t\t\t\t * initialised, but the table nodes don't match (from before) then we destroy the old\n\t\t\t\t * instance by simply deleting it. This is under the assumption that the table has been\n\t\t\t\t * destroyed by other methods. Anyone using non-id selectors will need to do this manually\n\t\t\t\t */\n\t\t\t\tif ( s.sTableId == this.id )\n\t\t\t\t{\n\t\t\t\t\tallSettings.splice( i, 1 );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/* Ensure the table has an ID - required for accessibility */\n\t\t\tif ( sId === null || sId === \"\" )\n\t\t\t{\n\t\t\t\tsId = \"DataTables_Table_\"+(DataTable.ext._unique++);\n\t\t\t\tthis.id = sId;\n\t\t\t}\n\t\t\t\n\t\t\t/* Create the settings object for this table and set some of the default parameters */\n\t\t\tvar oSettings = $.extend( true, {}, DataTable.models.oSettings, {\n\t\t\t\t\"sDestroyWidth\": $this[0].style.width,\n\t\t\t\t\"sInstance\":     sId,\n\t\t\t\t\"sTableId\":      sId\n\t\t\t} );\n\t\t\toSettings.nTable = this;\n\t\t\toSettings.oApi   = _that.internal;\n\t\t\toSettings.oInit  = oInit;\n\t\t\t\n\t\t\tallSettings.push( oSettings );\n\t\t\t\n\t\t\t// Need to add the instance after the instance after the settings object has been added\n\t\t\t// to the settings array, so we can self reference the table instance if more than one\n\t\t\toSettings.oInstance = (_that.length===1) ? _that : $this.dataTable();\n\t\t\t\n\t\t\t// Backwards compatibility, before we apply all the defaults\n\t\t\t_fnCompatOpts( oInit );\n\t\t\t_fnLanguageCompat( oInit.oLanguage );\n\t\t\t\n\t\t\t// If the length menu is given, but the init display length is not, use the length menu\n\t\t\tif ( oInit.aLengthMenu && ! oInit.iDisplayLength )\n\t\t\t{\n\t\t\t\toInit.iDisplayLength = $.isArray( oInit.aLengthMenu[0] ) ?\n\t\t\t\t\toInit.aLengthMenu[0][0] : oInit.aLengthMenu[0];\n\t\t\t}\n\t\t\t\n\t\t\t// Apply the defaults and init options to make a single init object will all\n\t\t\t// options defined from defaults and instance options.\n\t\t\toInit = _fnExtend( $.extend( true, {}, defaults ), oInit );\n\t\t\t\n\t\t\t\n\t\t\t// Map the initialisation options onto the settings object\n\t\t\t_fnMap( oSettings.oFeatures, oInit, [\n\t\t\t\t\"bPaginate\",\n\t\t\t\t\"bLengthChange\",\n\t\t\t\t\"bFilter\",\n\t\t\t\t\"bSort\",\n\t\t\t\t\"bSortMulti\",\n\t\t\t\t\"bInfo\",\n\t\t\t\t\"bProcessing\",\n\t\t\t\t\"bAutoWidth\",\n\t\t\t\t\"bSortClasses\",\n\t\t\t\t\"bServerSide\",\n\t\t\t\t\"bDeferRender\"\n\t\t\t] );\n\t\t\t_fnMap( oSettings, oInit, [\n\t\t\t\t\"asStripeClasses\",\n\t\t\t\t\"ajax\",\n\t\t\t\t\"fnServerData\",\n\t\t\t\t\"fnFormatNumber\",\n\t\t\t\t\"sServerMethod\",\n\t\t\t\t\"aaSorting\",\n\t\t\t\t\"aaSortingFixed\",\n\t\t\t\t\"aLengthMenu\",\n\t\t\t\t\"sPaginationType\",\n\t\t\t\t\"sAjaxSource\",\n\t\t\t\t\"sAjaxDataProp\",\n\t\t\t\t\"iStateDuration\",\n\t\t\t\t\"sDom\",\n\t\t\t\t\"bSortCellsTop\",\n\t\t\t\t\"iTabIndex\",\n\t\t\t\t\"fnStateLoadCallback\",\n\t\t\t\t\"fnStateSaveCallback\",\n\t\t\t\t\"renderer\",\n\t\t\t\t\"searchDelay\",\n\t\t\t\t\"rowId\",\n\t\t\t\t[ \"iCookieDuration\", \"iStateDuration\" ], // backwards compat\n\t\t\t\t[ \"oSearch\", \"oPreviousSearch\" ],\n\t\t\t\t[ \"aoSearchCols\", \"aoPreSearchCols\" ],\n\t\t\t\t[ \"iDisplayLength\", \"_iDisplayLength\" ]\n\t\t\t] );\n\t\t\t_fnMap( oSettings.oScroll, oInit, [\n\t\t\t\t[ \"sScrollX\", \"sX\" ],\n\t\t\t\t[ \"sScrollXInner\", \"sXInner\" ],\n\t\t\t\t[ \"sScrollY\", \"sY\" ],\n\t\t\t\t[ \"bScrollCollapse\", \"bCollapse\" ]\n\t\t\t] );\n\t\t\t_fnMap( oSettings.oLanguage, oInit, \"fnInfoCallback\" );\n\t\t\t\n\t\t\t/* Callback functions which are array driven */\n\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback',       oInit.fnDrawCallback,      'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoServerParams',       oInit.fnServerParams,      'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoStateSaveParams',    oInit.fnStateSaveParams,   'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoStateLoadParams',    oInit.fnStateLoadParams,   'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoStateLoaded',        oInit.fnStateLoaded,       'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoRowCallback',        oInit.fnRowCallback,       'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoRowCreatedCallback', oInit.fnCreatedRow,        'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoHeaderCallback',     oInit.fnHeaderCallback,    'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoFooterCallback',     oInit.fnFooterCallback,    'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoInitComplete',       oInit.fnInitComplete,      'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoPreDrawCallback',    oInit.fnPreDrawCallback,   'user' );\n\t\t\t\n\t\t\toSettings.rowIdFn = _fnGetObjectDataFn( oInit.rowId );\n\t\t\t\n\t\t\t/* Browser support detection */\n\t\t\t_fnBrowserDetect( oSettings );\n\t\t\t\n\t\t\tvar oClasses = oSettings.oClasses;\n\t\t\t\n\t\t\t$.extend( oClasses, DataTable.ext.classes, oInit.oClasses );\n\t\t\t$this.addClass( oClasses.sTable );\n\t\t\t\n\t\t\t\n\t\t\tif ( oSettings.iInitDisplayStart === undefined )\n\t\t\t{\n\t\t\t\t/* Display start point, taking into account the save saving */\n\t\t\t\toSettings.iInitDisplayStart = oInit.iDisplayStart;\n\t\t\t\toSettings._iDisplayStart = oInit.iDisplayStart;\n\t\t\t}\n\t\t\t\n\t\t\tif ( oInit.iDeferLoading !== null )\n\t\t\t{\n\t\t\t\toSettings.bDeferLoading = true;\n\t\t\t\tvar tmp = $.isArray( oInit.iDeferLoading );\n\t\t\t\toSettings._iRecordsDisplay = tmp ? oInit.iDeferLoading[0] : oInit.iDeferLoading;\n\t\t\t\toSettings._iRecordsTotal = tmp ? oInit.iDeferLoading[1] : oInit.iDeferLoading;\n\t\t\t}\n\t\t\t\n\t\t\t/* Language definitions */\n\t\t\tvar oLanguage = oSettings.oLanguage;\n\t\t\t$.extend( true, oLanguage, oInit.oLanguage );\n\t\t\t\n\t\t\tif ( oLanguage.sUrl )\n\t\t\t{\n\t\t\t\t/* Get the language definitions from a file - because this Ajax call makes the language\n\t\t\t\t * get async to the remainder of this function we use bInitHandedOff to indicate that\n\t\t\t\t * _fnInitialise will be fired by the returned Ajax handler, rather than the constructor\n\t\t\t\t */\n\t\t\t\t$.ajax( {\n\t\t\t\t\tdataType: 'json',\n\t\t\t\t\turl: oLanguage.sUrl,\n\t\t\t\t\tsuccess: function ( json ) {\n\t\t\t\t\t\t_fnLanguageCompat( json );\n\t\t\t\t\t\t_fnCamelToHungarian( defaults.oLanguage, json );\n\t\t\t\t\t\t$.extend( true, oLanguage, json );\n\t\t\t\t\t\t_fnInitialise( oSettings );\n\t\t\t\t\t},\n\t\t\t\t\terror: function () {\n\t\t\t\t\t\t// Error occurred loading language file, continue on as best we can\n\t\t\t\t\t\t_fnInitialise( oSettings );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\tbInitHandedOff = true;\n\t\t\t}\n\t\t\t\n\t\t\t/*\n\t\t\t * Stripes\n\t\t\t */\n\t\t\tif ( oInit.asStripeClasses === null )\n\t\t\t{\n\t\t\t\toSettings.asStripeClasses =[\n\t\t\t\t\toClasses.sStripeOdd,\n\t\t\t\t\toClasses.sStripeEven\n\t\t\t\t];\n\t\t\t}\n\t\t\t\n\t\t\t/* Remove row stripe classes if they are already on the table row */\n\t\t\tvar stripeClasses = oSettings.asStripeClasses;\n\t\t\tvar rowOne = $this.children('tbody').find('tr').eq(0);\n\t\t\tif ( $.inArray( true, $.map( stripeClasses, function(el, i) {\n\t\t\t\treturn rowOne.hasClass(el);\n\t\t\t} ) ) !== -1 ) {\n\t\t\t\t$('tbody tr', this).removeClass( stripeClasses.join(' ') );\n\t\t\t\toSettings.asDestroyStripes = stripeClasses.slice();\n\t\t\t}\n\t\t\t\n\t\t\t/*\n\t\t\t * Columns\n\t\t\t * See if we should load columns automatically or use defined ones\n\t\t\t */\n\t\t\tvar anThs = [];\n\t\t\tvar aoColumnsInit;\n\t\t\tvar nThead = this.getElementsByTagName('thead');\n\t\t\tif ( nThead.length !== 0 )\n\t\t\t{\n\t\t\t\t_fnDetectHeader( oSettings.aoHeader, nThead[0] );\n\t\t\t\tanThs = _fnGetUniqueThs( oSettings );\n\t\t\t}\n\t\t\t\n\t\t\t/* If not given a column array, generate one with nulls */\n\t\t\tif ( oInit.aoColumns === null )\n\t\t\t{\n\t\t\t\taoColumnsInit = [];\n\t\t\t\tfor ( i=0, iLen=anThs.length ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\taoColumnsInit.push( null );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\taoColumnsInit = oInit.aoColumns;\n\t\t\t}\n\t\t\t\n\t\t\t/* Add the columns */\n\t\t\tfor ( i=0, iLen=aoColumnsInit.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\t_fnAddColumn( oSettings, anThs ? anThs[i] : null );\n\t\t\t}\n\t\t\t\n\t\t\t/* Apply the column definitions */\n\t\t\t_fnApplyColumnDefs( oSettings, oInit.aoColumnDefs, aoColumnsInit, function (iCol, oDef) {\n\t\t\t\t_fnColumnOptions( oSettings, iCol, oDef );\n\t\t\t} );\n\t\t\t\n\t\t\t/* HTML5 attribute detection - build an mData object automatically if the\n\t\t\t * attributes are found\n\t\t\t */\n\t\t\tif ( rowOne.length ) {\n\t\t\t\tvar a = function ( cell, name ) {\n\t\t\t\t\treturn cell.getAttribute( 'data-'+name ) !== null ? name : null;\n\t\t\t\t};\n\t\t\t\n\t\t\t\t$( rowOne[0] ).children('th, td').each( function (i, cell) {\n\t\t\t\t\tvar col = oSettings.aoColumns[i];\n\t\t\t\n\t\t\t\t\tif ( col.mData === i ) {\n\t\t\t\t\t\tvar sort = a( cell, 'sort' ) || a( cell, 'order' );\n\t\t\t\t\t\tvar filter = a( cell, 'filter' ) || a( cell, 'search' );\n\t\t\t\n\t\t\t\t\t\tif ( sort !== null || filter !== null ) {\n\t\t\t\t\t\t\tcol.mData = {\n\t\t\t\t\t\t\t\t_:      i+'.display',\n\t\t\t\t\t\t\t\tsort:   sort !== null   ? i+'.@data-'+sort   : undefined,\n\t\t\t\t\t\t\t\ttype:   sort !== null   ? i+'.@data-'+sort   : undefined,\n\t\t\t\t\t\t\t\tfilter: filter !== null ? i+'.@data-'+filter : undefined\n\t\t\t\t\t\t\t};\n\t\t\t\n\t\t\t\t\t\t\t_fnColumnOptions( oSettings, i );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\t\n\t\t\tvar features = oSettings.oFeatures;\n\t\t\tvar loadedInit = function () {\n\t\t\t\t/*\n\t\t\t\t * Sorting\n\t\t\t\t * @todo For modularisation (1.11) this needs to do into a sort start up handler\n\t\t\t\t */\n\t\t\t\n\t\t\t\t// If aaSorting is not defined, then we use the first indicator in asSorting\n\t\t\t\t// in case that has been altered, so the default sort reflects that option\n\t\t\t\tif ( oInit.aaSorting === undefined ) {\n\t\t\t\t\tvar sorting = oSettings.aaSorting;\n\t\t\t\t\tfor ( i=0, iLen=sorting.length ; i<iLen ; i++ ) {\n\t\t\t\t\t\tsorting[i][1] = oSettings.aoColumns[ i ].asSorting[0];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t\t\t/* Do a first pass on the sorting classes (allows any size changes to be taken into\n\t\t\t\t * account, and also will apply sorting disabled classes if disabled\n\t\t\t\t */\n\t\t\t\t_fnSortingClasses( oSettings );\n\t\t\t\n\t\t\t\tif ( features.bSort ) {\n\t\t\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', function () {\n\t\t\t\t\t\tif ( oSettings.bSorted ) {\n\t\t\t\t\t\t\tvar aSort = _fnSortFlatten( oSettings );\n\t\t\t\t\t\t\tvar sortedColumns = {};\n\t\t\t\n\t\t\t\t\t\t\t$.each( aSort, function (i, val) {\n\t\t\t\t\t\t\t\tsortedColumns[ val.src ] = val.dir;\n\t\t\t\t\t\t\t} );\n\t\t\t\n\t\t\t\t\t\t\t_fnCallbackFire( oSettings, null, 'order', [oSettings, aSort, sortedColumns] );\n\t\t\t\t\t\t\t_fnSortAria( oSettings );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t\n\t\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', function () {\n\t\t\t\t\tif ( oSettings.bSorted || _fnDataSource( oSettings ) === 'ssp' || features.bDeferRender ) {\n\t\t\t\t\t\t_fnSortingClasses( oSettings );\n\t\t\t\t\t}\n\t\t\t\t}, 'sc' );\n\t\t\t\n\t\t\t\n\t\t\t\t/*\n\t\t\t\t * Final init\n\t\t\t\t * Cache the header, body and footer as required, creating them if needed\n\t\t\t\t */\n\t\t\t\n\t\t\t\t// Work around for Webkit bug 83867 - store the caption-side before removing from doc\n\t\t\t\tvar captions = $this.children('caption').each( function () {\n\t\t\t\t\tthis._captionSide = $(this).css('caption-side');\n\t\t\t\t} );\n\t\t\t\n\t\t\t\tvar thead = $this.children('thead');\n\t\t\t\tif ( thead.length === 0 ) {\n\t\t\t\t\tthead = $('<thead/>').appendTo($this);\n\t\t\t\t}\n\t\t\t\toSettings.nTHead = thead[0];\n\t\t\t\n\t\t\t\tvar tbody = $this.children('tbody');\n\t\t\t\tif ( tbody.length === 0 ) {\n\t\t\t\t\ttbody = $('<tbody/>').appendTo($this);\n\t\t\t\t}\n\t\t\t\toSettings.nTBody = tbody[0];\n\t\t\t\n\t\t\t\tvar tfoot = $this.children('tfoot');\n\t\t\t\tif ( tfoot.length === 0 && captions.length > 0 && (oSettings.oScroll.sX !== \"\" || oSettings.oScroll.sY !== \"\") ) {\n\t\t\t\t\t// If we are a scrolling table, and no footer has been given, then we need to create\n\t\t\t\t\t// a tfoot element for the caption element to be appended to\n\t\t\t\t\ttfoot = $('<tfoot/>').appendTo($this);\n\t\t\t\t}\n\t\t\t\n\t\t\t\tif ( tfoot.length === 0 || tfoot.children().length === 0 ) {\n\t\t\t\t\t$this.addClass( oClasses.sNoFooter );\n\t\t\t\t}\n\t\t\t\telse if ( tfoot.length > 0 ) {\n\t\t\t\t\toSettings.nTFoot = tfoot[0];\n\t\t\t\t\t_fnDetectHeader( oSettings.aoFooter, oSettings.nTFoot );\n\t\t\t\t}\n\t\t\t\n\t\t\t\t/* Check if there is data passing into the constructor */\n\t\t\t\tif ( oInit.aaData ) {\n\t\t\t\t\tfor ( i=0 ; i<oInit.aaData.length ; i++ ) {\n\t\t\t\t\t\t_fnAddData( oSettings, oInit.aaData[ i ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ( oSettings.bDeferLoading || _fnDataSource( oSettings ) == 'dom' ) {\n\t\t\t\t\t/* Grab the data from the page - only do this when deferred loading or no Ajax\n\t\t\t\t\t * source since there is no point in reading the DOM data if we are then going\n\t\t\t\t\t * to replace it with Ajax data\n\t\t\t\t\t */\n\t\t\t\t\t_fnAddTr( oSettings, $(oSettings.nTBody).children('tr') );\n\t\t\t\t}\n\t\t\t\n\t\t\t\t/* Copy the data index array */\n\t\t\t\toSettings.aiDisplay = oSettings.aiDisplayMaster.slice();\n\t\t\t\n\t\t\t\t/* Initialisation complete - table can be drawn */\n\t\t\t\toSettings.bInitialised = true;\n\t\t\t\n\t\t\t\t/* Check if we need to initialise the table (it might not have been handed off to the\n\t\t\t\t * language processor)\n\t\t\t\t */\n\t\t\t\tif ( bInitHandedOff === false ) {\n\t\t\t\t\t_fnInitialise( oSettings );\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t\t/* Must be done after everything which can be overridden by the state saving! */\n\t\t\tif ( oInit.bStateSave )\n\t\t\t{\n\t\t\t\tfeatures.bStateSave = true;\n\t\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', _fnSaveState, 'state_save' );\n\t\t\t\t_fnLoadState( oSettings, oInit, loadedInit );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tloadedInit();\n\t\t\t}\n\t\t\t\n\t\t} );\n\t\t_that = null;\n\t\treturn this;\n\t};\n\n\t\n\t/*\n\t * It is useful to have variables which are scoped locally so only the\n\t * DataTables functions can access them and they don't leak into global space.\n\t * At the same time these functions are often useful over multiple files in the\n\t * core and API, so we list, or at least document, all variables which are used\n\t * by DataTables as private variables here. This also ensures that there is no\n\t * clashing of variable names and that they can easily referenced for reuse.\n\t */\n\t\n\t\n\t// Defined else where\n\t//  _selector_run\n\t//  _selector_opts\n\t//  _selector_first\n\t//  _selector_row_indexes\n\t\n\tvar _ext; // DataTable.ext\n\tvar _Api; // DataTable.Api\n\tvar _api_register; // DataTable.Api.register\n\tvar _api_registerPlural; // DataTable.Api.registerPlural\n\t\n\tvar _re_dic = {};\n\tvar _re_new_lines = /[\\r\\n]/g;\n\tvar _re_html = /<.*?>/g;\n\t\n\t// This is not strict ISO8601 - Date.parse() is quite lax, although\n\t// implementations differ between browsers.\n\tvar _re_date = /^\\d{2,4}[\\.\\/\\-]\\d{1,2}[\\.\\/\\-]\\d{1,2}([T ]{1}\\d{1,2}[:\\.]\\d{2}([\\.:]\\d{2})?)?$/;\n\t\n\t// Escape regular expression special characters\n\tvar _re_escape_regex = new RegExp( '(\\\\' + [ '/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\', '$', '^', '-' ].join('|\\\\') + ')', 'g' );\n\t\n\t// http://en.wikipedia.org/wiki/Foreign_exchange_market\n\t// - \\u20BD - Russian ruble.\n\t// - \\u20a9 - South Korean Won\n\t// - \\u20BA - Turkish Lira\n\t// - \\u20B9 - Indian Rupee\n\t// - R - Brazil (R$) and South Africa\n\t// - fr - Swiss Franc\n\t// - kr - Swedish krona, Norwegian krone and Danish krone\n\t// - \\u2009 is thin space and \\u202F is narrow no-break space, both used in many\n\t// - Ƀ - Bitcoin\n\t// - Ξ - Ethereum\n\t//   standards as thousands separators.\n\tvar _re_formatted_numeric = /[',$£€¥%\\u2009\\u202F\\u20BD\\u20a9\\u20BArfkɃΞ]/gi;\n\t\n\t\n\tvar _empty = function ( d ) {\n\t\treturn !d || d === true || d === '-' ? true : false;\n\t};\n\t\n\t\n\tvar _intVal = function ( s ) {\n\t\tvar integer = parseInt( s, 10 );\n\t\treturn !isNaN(integer) && isFinite(s) ? integer : null;\n\t};\n\t\n\t// Convert from a formatted number with characters other than `.` as the\n\t// decimal place, to a Javascript number\n\tvar _numToDecimal = function ( num, decimalPoint ) {\n\t\t// Cache created regular expressions for speed as this function is called often\n\t\tif ( ! _re_dic[ decimalPoint ] ) {\n\t\t\t_re_dic[ decimalPoint ] = new RegExp( _fnEscapeRegex( decimalPoint ), 'g' );\n\t\t}\n\t\treturn typeof num === 'string' && decimalPoint !== '.' ?\n\t\t\tnum.replace( /\\./g, '' ).replace( _re_dic[ decimalPoint ], '.' ) :\n\t\t\tnum;\n\t};\n\t\n\t\n\tvar _isNumber = function ( d, decimalPoint, formatted ) {\n\t\tvar strType = typeof d === 'string';\n\t\n\t\t// If empty return immediately so there must be a number if it is a\n\t\t// formatted string (this stops the string \"k\", or \"kr\", etc being detected\n\t\t// as a formatted number for currency\n\t\tif ( _empty( d ) ) {\n\t\t\treturn true;\n\t\t}\n\t\n\t\tif ( decimalPoint && strType ) {\n\t\t\td = _numToDecimal( d, decimalPoint );\n\t\t}\n\t\n\t\tif ( formatted && strType ) {\n\t\t\td = d.replace( _re_formatted_numeric, '' );\n\t\t}\n\t\n\t\treturn !isNaN( parseFloat(d) ) && isFinite( d );\n\t};\n\t\n\t\n\t// A string without HTML in it can be considered to be HTML still\n\tvar _isHtml = function ( d ) {\n\t\treturn _empty( d ) || typeof d === 'string';\n\t};\n\t\n\t\n\tvar _htmlNumeric = function ( d, decimalPoint, formatted ) {\n\t\tif ( _empty( d ) ) {\n\t\t\treturn true;\n\t\t}\n\t\n\t\tvar html = _isHtml( d );\n\t\treturn ! html ?\n\t\t\tnull :\n\t\t\t_isNumber( _stripHtml( d ), decimalPoint, formatted ) ?\n\t\t\t\ttrue :\n\t\t\t\tnull;\n\t};\n\t\n\t\n\tvar _pluck = function ( a, prop, prop2 ) {\n\t\tvar out = [];\n\t\tvar i=0, ien=a.length;\n\t\n\t\t// Could have the test in the loop for slightly smaller code, but speed\n\t\t// is essential here\n\t\tif ( prop2 !== undefined ) {\n\t\t\tfor ( ; i<ien ; i++ ) {\n\t\t\t\tif ( a[i] && a[i][ prop ] ) {\n\t\t\t\t\tout.push( a[i][ prop ][ prop2 ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tfor ( ; i<ien ; i++ ) {\n\t\t\t\tif ( a[i] ) {\n\t\t\t\t\tout.push( a[i][ prop ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn out;\n\t};\n\t\n\t\n\t// Basically the same as _pluck, but rather than looping over `a` we use `order`\n\t// as the indexes to pick from `a`\n\tvar _pluck_order = function ( a, order, prop, prop2 )\n\t{\n\t\tvar out = [];\n\t\tvar i=0, ien=order.length;\n\t\n\t\t// Could have the test in the loop for slightly smaller code, but speed\n\t\t// is essential here\n\t\tif ( prop2 !== undefined ) {\n\t\t\tfor ( ; i<ien ; i++ ) {\n\t\t\t\tif ( a[ order[i] ][ prop ] ) {\n\t\t\t\t\tout.push( a[ order[i] ][ prop ][ prop2 ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tfor ( ; i<ien ; i++ ) {\n\t\t\t\tout.push( a[ order[i] ][ prop ] );\n\t\t\t}\n\t\t}\n\t\n\t\treturn out;\n\t};\n\t\n\t\n\tvar _range = function ( len, start )\n\t{\n\t\tvar out = [];\n\t\tvar end;\n\t\n\t\tif ( start === undefined ) {\n\t\t\tstart = 0;\n\t\t\tend = len;\n\t\t}\n\t\telse {\n\t\t\tend = start;\n\t\t\tstart = len;\n\t\t}\n\t\n\t\tfor ( var i=start ; i<end ; i++ ) {\n\t\t\tout.push( i );\n\t\t}\n\t\n\t\treturn out;\n\t};\n\t\n\t\n\tvar _removeEmpty = function ( a )\n\t{\n\t\tvar out = [];\n\t\n\t\tfor ( var i=0, ien=a.length ; i<ien ; i++ ) {\n\t\t\tif ( a[i] ) { // careful - will remove all falsy values!\n\t\t\t\tout.push( a[i] );\n\t\t\t}\n\t\t}\n\t\n\t\treturn out;\n\t};\n\t\n\t\n\tvar _stripHtml = function ( d ) {\n\t\treturn d.replace( _re_html, '' );\n\t};\n\t\n\t\n\t/**\n\t * Determine if all values in the array are unique. This means we can short\n\t * cut the _unique method at the cost of a single loop. A sorted array is used\n\t * to easily check the values.\n\t *\n\t * @param  {array} src Source array\n\t * @return {boolean} true if all unique, false otherwise\n\t * @ignore\n\t */\n\tvar _areAllUnique = function ( src ) {\n\t\tif ( src.length < 2 ) {\n\t\t\treturn true;\n\t\t}\n\t\n\t\tvar sorted = src.slice().sort();\n\t\tvar last = sorted[0];\n\t\n\t\tfor ( var i=1, ien=sorted.length ; i<ien ; i++ ) {\n\t\t\tif ( sorted[i] === last ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\tlast = sorted[i];\n\t\t}\n\t\n\t\treturn true;\n\t};\n\t\n\t\n\t/**\n\t * Find the unique elements in a source array.\n\t *\n\t * @param  {array} src Source array\n\t * @return {array} Array of unique items\n\t * @ignore\n\t */\n\tvar _unique = function ( src )\n\t{\n\t\tif ( _areAllUnique( src ) ) {\n\t\t\treturn src.slice();\n\t\t}\n\t\n\t\t// A faster unique method is to use object keys to identify used values,\n\t\t// but this doesn't work with arrays or objects, which we must also\n\t\t// consider. See jsperf.com/compare-array-unique-versions/4 for more\n\t\t// information.\n\t\tvar\n\t\t\tout = [],\n\t\t\tval,\n\t\t\ti, ien=src.length,\n\t\t\tj, k=0;\n\t\n\t\tagain: for ( i=0 ; i<ien ; i++ ) {\n\t\t\tval = src[i];\n\t\n\t\t\tfor ( j=0 ; j<k ; j++ ) {\n\t\t\t\tif ( out[j] === val ) {\n\t\t\t\t\tcontinue again;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tout.push( val );\n\t\t\tk++;\n\t\t}\n\t\n\t\treturn out;\n\t};\n\t\n\t\n\t/**\n\t * DataTables utility methods\n\t * \n\t * This namespace provides helper methods that DataTables uses internally to\n\t * create a DataTable, but which are not exclusively used only for DataTables.\n\t * These methods can be used by extension authors to save the duplication of\n\t * code.\n\t *\n\t *  @namespace\n\t */\n\tDataTable.util = {\n\t\t/**\n\t\t * Throttle the calls to a function. Arguments and context are maintained\n\t\t * for the throttled function.\n\t\t *\n\t\t * @param {function} fn Function to be called\n\t\t * @param {integer} freq Call frequency in mS\n\t\t * @return {function} Wrapped function\n\t\t */\n\t\tthrottle: function ( fn, freq ) {\n\t\t\tvar\n\t\t\t\tfrequency = freq !== undefined ? freq : 200,\n\t\t\t\tlast,\n\t\t\t\ttimer;\n\t\n\t\t\treturn function () {\n\t\t\t\tvar\n\t\t\t\t\tthat = this,\n\t\t\t\t\tnow  = +new Date(),\n\t\t\t\t\targs = arguments;\n\t\n\t\t\t\tif ( last && now < last + frequency ) {\n\t\t\t\t\tclearTimeout( timer );\n\t\n\t\t\t\t\ttimer = setTimeout( function () {\n\t\t\t\t\t\tlast = undefined;\n\t\t\t\t\t\tfn.apply( that, args );\n\t\t\t\t\t}, frequency );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlast = now;\n\t\t\t\t\tfn.apply( that, args );\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Escape a string such that it can be used in a regular expression\n\t\t *\n\t\t *  @param {string} val string to escape\n\t\t *  @returns {string} escaped string\n\t\t */\n\t\tescapeRegex: function ( val ) {\n\t\t\treturn val.replace( _re_escape_regex, '\\\\$1' );\n\t\t}\n\t};\n\t\n\t\n\t\n\t/**\n\t * Create a mapping object that allows camel case parameters to be looked up\n\t * for their Hungarian counterparts. The mapping is stored in a private\n\t * parameter called `_hungarianMap` which can be accessed on the source object.\n\t *  @param {object} o\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnHungarianMap ( o )\n\t{\n\t\tvar\n\t\t\thungarian = 'a aa ai ao as b fn i m o s ',\n\t\t\tmatch,\n\t\t\tnewKey,\n\t\t\tmap = {};\n\t\n\t\t$.each( o, function (key, val) {\n\t\t\tmatch = key.match(/^([^A-Z]+?)([A-Z])/);\n\t\n\t\t\tif ( match && hungarian.indexOf(match[1]+' ') !== -1 )\n\t\t\t{\n\t\t\t\tnewKey = key.replace( match[0], match[2].toLowerCase() );\n\t\t\t\tmap[ newKey ] = key;\n\t\n\t\t\t\tif ( match[1] === 'o' )\n\t\t\t\t{\n\t\t\t\t\t_fnHungarianMap( o[key] );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t\n\t\to._hungarianMap = map;\n\t}\n\t\n\t\n\t/**\n\t * Convert from camel case parameters to Hungarian, based on a Hungarian map\n\t * created by _fnHungarianMap.\n\t *  @param {object} src The model object which holds all parameters that can be\n\t *    mapped.\n\t *  @param {object} user The object to convert from camel case to Hungarian.\n\t *  @param {boolean} force When set to `true`, properties which already have a\n\t *    Hungarian value in the `user` object will be overwritten. Otherwise they\n\t *    won't be.\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCamelToHungarian ( src, user, force )\n\t{\n\t\tif ( ! src._hungarianMap ) {\n\t\t\t_fnHungarianMap( src );\n\t\t}\n\t\n\t\tvar hungarianKey;\n\t\n\t\t$.each( user, function (key, val) {\n\t\t\thungarianKey = src._hungarianMap[ key ];\n\t\n\t\t\tif ( hungarianKey !== undefined && (force || user[hungarianKey] === undefined) )\n\t\t\t{\n\t\t\t\t// For objects, we need to buzz down into the object to copy parameters\n\t\t\t\tif ( hungarianKey.charAt(0) === 'o' )\n\t\t\t\t{\n\t\t\t\t\t// Copy the camelCase options over to the hungarian\n\t\t\t\t\tif ( ! user[ hungarianKey ] ) {\n\t\t\t\t\t\tuser[ hungarianKey ] = {};\n\t\t\t\t\t}\n\t\t\t\t\t$.extend( true, user[hungarianKey], user[key] );\n\t\n\t\t\t\t\t_fnCamelToHungarian( src[hungarianKey], user[hungarianKey], force );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tuser[hungarianKey] = user[ key ];\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\t\n\t\n\t/**\n\t * Language compatibility - when certain options are given, and others aren't, we\n\t * need to duplicate the values over, in order to provide backwards compatibility\n\t * with older language files.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnLanguageCompat( lang )\n\t{\n\t\t// Note the use of the Hungarian notation for the parameters in this method as\n\t\t// this is called after the mapping of camelCase to Hungarian\n\t\tvar defaults = DataTable.defaults.oLanguage;\n\t\n\t\t// Default mapping\n\t\tvar defaultDecimal = defaults.sDecimal;\n\t\tif ( defaultDecimal ) {\n\t\t\t_addNumericSort( defaultDecimal );\n\t\t}\n\t\n\t\tif ( lang ) {\n\t\t\tvar zeroRecords = lang.sZeroRecords;\n\t\n\t\t\t// Backwards compatibility - if there is no sEmptyTable given, then use the same as\n\t\t\t// sZeroRecords - assuming that is given.\n\t\t\tif ( ! lang.sEmptyTable && zeroRecords &&\n\t\t\t\tdefaults.sEmptyTable === \"No data available in table\" )\n\t\t\t{\n\t\t\t\t_fnMap( lang, lang, 'sZeroRecords', 'sEmptyTable' );\n\t\t\t}\n\t\n\t\t\t// Likewise with loading records\n\t\t\tif ( ! lang.sLoadingRecords && zeroRecords &&\n\t\t\t\tdefaults.sLoadingRecords === \"Loading...\" )\n\t\t\t{\n\t\t\t\t_fnMap( lang, lang, 'sZeroRecords', 'sLoadingRecords' );\n\t\t\t}\n\t\n\t\t\t// Old parameter name of the thousands separator mapped onto the new\n\t\t\tif ( lang.sInfoThousands ) {\n\t\t\t\tlang.sThousands = lang.sInfoThousands;\n\t\t\t}\n\t\n\t\t\tvar decimal = lang.sDecimal;\n\t\t\tif ( decimal && defaultDecimal !== decimal ) {\n\t\t\t\t_addNumericSort( decimal );\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Map one parameter onto another\n\t *  @param {object} o Object to map\n\t *  @param {*} knew The new parameter name\n\t *  @param {*} old The old parameter name\n\t */\n\tvar _fnCompatMap = function ( o, knew, old ) {\n\t\tif ( o[ knew ] !== undefined ) {\n\t\t\to[ old ] = o[ knew ];\n\t\t}\n\t};\n\t\n\t\n\t/**\n\t * Provide backwards compatibility for the main DT options. Note that the new\n\t * options are mapped onto the old parameters, so this is an external interface\n\t * change only.\n\t *  @param {object} init Object to map\n\t */\n\tfunction _fnCompatOpts ( init )\n\t{\n\t\t_fnCompatMap( init, 'ordering',      'bSort' );\n\t\t_fnCompatMap( init, 'orderMulti',    'bSortMulti' );\n\t\t_fnCompatMap( init, 'orderClasses',  'bSortClasses' );\n\t\t_fnCompatMap( init, 'orderCellsTop', 'bSortCellsTop' );\n\t\t_fnCompatMap( init, 'order',         'aaSorting' );\n\t\t_fnCompatMap( init, 'orderFixed',    'aaSortingFixed' );\n\t\t_fnCompatMap( init, 'paging',        'bPaginate' );\n\t\t_fnCompatMap( init, 'pagingType',    'sPaginationType' );\n\t\t_fnCompatMap( init, 'pageLength',    'iDisplayLength' );\n\t\t_fnCompatMap( init, 'searching',     'bFilter' );\n\t\n\t\t// Boolean initialisation of x-scrolling\n\t\tif ( typeof init.sScrollX === 'boolean' ) {\n\t\t\tinit.sScrollX = init.sScrollX ? '100%' : '';\n\t\t}\n\t\tif ( typeof init.scrollX === 'boolean' ) {\n\t\t\tinit.scrollX = init.scrollX ? '100%' : '';\n\t\t}\n\t\n\t\t// Column search objects are in an array, so it needs to be converted\n\t\t// element by element\n\t\tvar searchCols = init.aoSearchCols;\n\t\n\t\tif ( searchCols ) {\n\t\t\tfor ( var i=0, ien=searchCols.length ; i<ien ; i++ ) {\n\t\t\t\tif ( searchCols[i] ) {\n\t\t\t\t\t_fnCamelToHungarian( DataTable.models.oSearch, searchCols[i] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Provide backwards compatibility for column options. Note that the new options\n\t * are mapped onto the old parameters, so this is an external interface change\n\t * only.\n\t *  @param {object} init Object to map\n\t */\n\tfunction _fnCompatCols ( init )\n\t{\n\t\t_fnCompatMap( init, 'orderable',     'bSortable' );\n\t\t_fnCompatMap( init, 'orderData',     'aDataSort' );\n\t\t_fnCompatMap( init, 'orderSequence', 'asSorting' );\n\t\t_fnCompatMap( init, 'orderDataType', 'sortDataType' );\n\t\n\t\t// orderData can be given as an integer\n\t\tvar dataSort = init.aDataSort;\n\t\tif ( typeof dataSort === 'number' && ! $.isArray( dataSort ) ) {\n\t\t\tinit.aDataSort = [ dataSort ];\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Browser feature detection for capabilities, quirks\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnBrowserDetect( settings )\n\t{\n\t\t// We don't need to do this every time DataTables is constructed, the values\n\t\t// calculated are specific to the browser and OS configuration which we\n\t\t// don't expect to change between initialisations\n\t\tif ( ! DataTable.__browser ) {\n\t\t\tvar browser = {};\n\t\t\tDataTable.__browser = browser;\n\t\n\t\t\t// Scrolling feature / quirks detection\n\t\t\tvar n = $('<div/>')\n\t\t\t\t.css( {\n\t\t\t\t\tposition: 'fixed',\n\t\t\t\t\ttop: 0,\n\t\t\t\t\tleft: $(window).scrollLeft()*-1, // allow for scrolling\n\t\t\t\t\theight: 1,\n\t\t\t\t\twidth: 1,\n\t\t\t\t\toverflow: 'hidden'\n\t\t\t\t} )\n\t\t\t\t.append(\n\t\t\t\t\t$('<div/>')\n\t\t\t\t\t\t.css( {\n\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\ttop: 1,\n\t\t\t\t\t\t\tleft: 1,\n\t\t\t\t\t\t\twidth: 100,\n\t\t\t\t\t\t\toverflow: 'scroll'\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t$('<div/>')\n\t\t\t\t\t\t\t\t.css( {\n\t\t\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\t\t\theight: 10\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t\t.appendTo( 'body' );\n\t\n\t\t\tvar outer = n.children();\n\t\t\tvar inner = outer.children();\n\t\n\t\t\t// Numbers below, in order, are:\n\t\t\t// inner.offsetWidth, inner.clientWidth, outer.offsetWidth, outer.clientWidth\n\t\t\t//\n\t\t\t// IE6 XP:                           100 100 100  83\n\t\t\t// IE7 Vista:                        100 100 100  83\n\t\t\t// IE 8+ Windows:                     83  83 100  83\n\t\t\t// Evergreen Windows:                 83  83 100  83\n\t\t\t// Evergreen Mac with scrollbars:     85  85 100  85\n\t\t\t// Evergreen Mac without scrollbars: 100 100 100 100\n\t\n\t\t\t// Get scrollbar width\n\t\t\tbrowser.barWidth = outer[0].offsetWidth - outer[0].clientWidth;\n\t\n\t\t\t// IE6/7 will oversize a width 100% element inside a scrolling element, to\n\t\t\t// include the width of the scrollbar, while other browsers ensure the inner\n\t\t\t// element is contained without forcing scrolling\n\t\t\tbrowser.bScrollOversize = inner[0].offsetWidth === 100 && outer[0].clientWidth !== 100;\n\t\n\t\t\t// In rtl text layout, some browsers (most, but not all) will place the\n\t\t\t// scrollbar on the left, rather than the right.\n\t\t\tbrowser.bScrollbarLeft = Math.round( inner.offset().left ) !== 1;\n\t\n\t\t\t// IE8- don't provide height and width for getBoundingClientRect\n\t\t\tbrowser.bBounding = n[0].getBoundingClientRect().width ? true : false;\n\t\n\t\t\tn.remove();\n\t\t}\n\t\n\t\t$.extend( settings.oBrowser, DataTable.__browser );\n\t\tsettings.oScroll.iBarWidth = DataTable.__browser.barWidth;\n\t}\n\t\n\t\n\t/**\n\t * Array.prototype reduce[Right] method, used for browsers which don't support\n\t * JS 1.6. Done this way to reduce code size, since we iterate either way\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnReduce ( that, fn, init, start, end, inc )\n\t{\n\t\tvar\n\t\t\ti = start,\n\t\t\tvalue,\n\t\t\tisSet = false;\n\t\n\t\tif ( init !== undefined ) {\n\t\t\tvalue = init;\n\t\t\tisSet = true;\n\t\t}\n\t\n\t\twhile ( i !== end ) {\n\t\t\tif ( ! that.hasOwnProperty(i) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\n\t\t\tvalue = isSet ?\n\t\t\t\tfn( value, that[i], i, that ) :\n\t\t\t\tthat[i];\n\t\n\t\t\tisSet = true;\n\t\t\ti += inc;\n\t\t}\n\t\n\t\treturn value;\n\t}\n\t\n\t/**\n\t * Add a column to the list used for the table with default values\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {node} nTh The th element for this column\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAddColumn( oSettings, nTh )\n\t{\n\t\t// Add column to aoColumns array\n\t\tvar oDefaults = DataTable.defaults.column;\n\t\tvar iCol = oSettings.aoColumns.length;\n\t\tvar oCol = $.extend( {}, DataTable.models.oColumn, oDefaults, {\n\t\t\t\"nTh\": nTh ? nTh : document.createElement('th'),\n\t\t\t\"sTitle\":    oDefaults.sTitle    ? oDefaults.sTitle    : nTh ? nTh.innerHTML : '',\n\t\t\t\"aDataSort\": oDefaults.aDataSort ? oDefaults.aDataSort : [iCol],\n\t\t\t\"mData\": oDefaults.mData ? oDefaults.mData : iCol,\n\t\t\tidx: iCol\n\t\t} );\n\t\toSettings.aoColumns.push( oCol );\n\t\n\t\t// Add search object for column specific search. Note that the `searchCols[ iCol ]`\n\t\t// passed into extend can be undefined. This allows the user to give a default\n\t\t// with only some of the parameters defined, and also not give a default\n\t\tvar searchCols = oSettings.aoPreSearchCols;\n\t\tsearchCols[ iCol ] = $.extend( {}, DataTable.models.oSearch, searchCols[ iCol ] );\n\t\n\t\t// Use the default column options function to initialise classes etc\n\t\t_fnColumnOptions( oSettings, iCol, $(nTh).data() );\n\t}\n\t\n\t\n\t/**\n\t * Apply options for a column\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iCol column index to consider\n\t *  @param {object} oOptions object with sType, bVisible and bSearchable etc\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnColumnOptions( oSettings, iCol, oOptions )\n\t{\n\t\tvar oCol = oSettings.aoColumns[ iCol ];\n\t\tvar oClasses = oSettings.oClasses;\n\t\tvar th = $(oCol.nTh);\n\t\n\t\t// Try to get width information from the DOM. We can't get it from CSS\n\t\t// as we'd need to parse the CSS stylesheet. `width` option can override\n\t\tif ( ! oCol.sWidthOrig ) {\n\t\t\t// Width attribute\n\t\t\toCol.sWidthOrig = th.attr('width') || null;\n\t\n\t\t\t// Style attribute\n\t\t\tvar t = (th.attr('style') || '').match(/width:\\s*(\\d+[pxem%]+)/);\n\t\t\tif ( t ) {\n\t\t\t\toCol.sWidthOrig = t[1];\n\t\t\t}\n\t\t}\n\t\n\t\t/* User specified column options */\n\t\tif ( oOptions !== undefined && oOptions !== null )\n\t\t{\n\t\t\t// Backwards compatibility\n\t\t\t_fnCompatCols( oOptions );\n\t\n\t\t\t// Map camel case parameters to their Hungarian counterparts\n\t\t\t_fnCamelToHungarian( DataTable.defaults.column, oOptions );\n\t\n\t\t\t/* Backwards compatibility for mDataProp */\n\t\t\tif ( oOptions.mDataProp !== undefined && !oOptions.mData )\n\t\t\t{\n\t\t\t\toOptions.mData = oOptions.mDataProp;\n\t\t\t}\n\t\n\t\t\tif ( oOptions.sType )\n\t\t\t{\n\t\t\t\toCol._sManualType = oOptions.sType;\n\t\t\t}\n\t\n\t\t\t// `class` is a reserved word in Javascript, so we need to provide\n\t\t\t// the ability to use a valid name for the camel case input\n\t\t\tif ( oOptions.className && ! oOptions.sClass )\n\t\t\t{\n\t\t\t\toOptions.sClass = oOptions.className;\n\t\t\t}\n\t\t\tif ( oOptions.sClass ) {\n\t\t\t\tth.addClass( oOptions.sClass );\n\t\t\t}\n\t\n\t\t\t$.extend( oCol, oOptions );\n\t\t\t_fnMap( oCol, oOptions, \"sWidth\", \"sWidthOrig\" );\n\t\n\t\t\t/* iDataSort to be applied (backwards compatibility), but aDataSort will take\n\t\t\t * priority if defined\n\t\t\t */\n\t\t\tif ( oOptions.iDataSort !== undefined )\n\t\t\t{\n\t\t\t\toCol.aDataSort = [ oOptions.iDataSort ];\n\t\t\t}\n\t\t\t_fnMap( oCol, oOptions, \"aDataSort\" );\n\t\t}\n\t\n\t\t/* Cache the data get and set functions for speed */\n\t\tvar mDataSrc = oCol.mData;\n\t\tvar mData = _fnGetObjectDataFn( mDataSrc );\n\t\tvar mRender = oCol.mRender ? _fnGetObjectDataFn( oCol.mRender ) : null;\n\t\n\t\tvar attrTest = function( src ) {\n\t\t\treturn typeof src === 'string' && src.indexOf('@') !== -1;\n\t\t};\n\t\toCol._bAttrSrc = $.isPlainObject( mDataSrc ) && (\n\t\t\tattrTest(mDataSrc.sort) || attrTest(mDataSrc.type) || attrTest(mDataSrc.filter)\n\t\t);\n\t\toCol._setter = null;\n\t\n\t\toCol.fnGetData = function (rowData, type, meta) {\n\t\t\tvar innerData = mData( rowData, type, undefined, meta );\n\t\n\t\t\treturn mRender && type ?\n\t\t\t\tmRender( innerData, type, rowData, meta ) :\n\t\t\t\tinnerData;\n\t\t};\n\t\toCol.fnSetData = function ( rowData, val, meta ) {\n\t\t\treturn _fnSetObjectDataFn( mDataSrc )( rowData, val, meta );\n\t\t};\n\t\n\t\t// Indicate if DataTables should read DOM data as an object or array\n\t\t// Used in _fnGetRowElements\n\t\tif ( typeof mDataSrc !== 'number' ) {\n\t\t\toSettings._rowReadObject = true;\n\t\t}\n\t\n\t\t/* Feature sorting overrides column specific when off */\n\t\tif ( !oSettings.oFeatures.bSort )\n\t\t{\n\t\t\toCol.bSortable = false;\n\t\t\tth.addClass( oClasses.sSortableNone ); // Have to add class here as order event isn't called\n\t\t}\n\t\n\t\t/* Check that the class assignment is correct for sorting */\n\t\tvar bAsc = $.inArray('asc', oCol.asSorting) !== -1;\n\t\tvar bDesc = $.inArray('desc', oCol.asSorting) !== -1;\n\t\tif ( !oCol.bSortable || (!bAsc && !bDesc) )\n\t\t{\n\t\t\toCol.sSortingClass = oClasses.sSortableNone;\n\t\t\toCol.sSortingClassJUI = \"\";\n\t\t}\n\t\telse if ( bAsc && !bDesc )\n\t\t{\n\t\t\toCol.sSortingClass = oClasses.sSortableAsc;\n\t\t\toCol.sSortingClassJUI = oClasses.sSortJUIAscAllowed;\n\t\t}\n\t\telse if ( !bAsc && bDesc )\n\t\t{\n\t\t\toCol.sSortingClass = oClasses.sSortableDesc;\n\t\t\toCol.sSortingClassJUI = oClasses.sSortJUIDescAllowed;\n\t\t}\n\t\telse\n\t\t{\n\t\t\toCol.sSortingClass = oClasses.sSortable;\n\t\t\toCol.sSortingClassJUI = oClasses.sSortJUI;\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Adjust the table column widths for new data. Note: you would probably want to\n\t * do a redraw after calling this function!\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAdjustColumnSizing ( settings )\n\t{\n\t\t/* Not interested in doing column width calculation if auto-width is disabled */\n\t\tif ( settings.oFeatures.bAutoWidth !== false )\n\t\t{\n\t\t\tvar columns = settings.aoColumns;\n\t\n\t\t\t_fnCalculateColumnWidths( settings );\n\t\t\tfor ( var i=0 , iLen=columns.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tcolumns[i].nTh.style.width = columns[i].sWidth;\n\t\t\t}\n\t\t}\n\t\n\t\tvar scroll = settings.oScroll;\n\t\tif ( scroll.sY !== '' || scroll.sX !== '')\n\t\t{\n\t\t\t_fnScrollDraw( settings );\n\t\t}\n\t\n\t\t_fnCallbackFire( settings, null, 'column-sizing', [settings] );\n\t}\n\t\n\t\n\t/**\n\t * Covert the index of a visible column to the index in the data array (take account\n\t * of hidden columns)\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iMatch Visible column index to lookup\n\t *  @returns {int} i the data index\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnVisibleToColumnIndex( oSettings, iMatch )\n\t{\n\t\tvar aiVis = _fnGetColumns( oSettings, 'bVisible' );\n\t\n\t\treturn typeof aiVis[iMatch] === 'number' ?\n\t\t\taiVis[iMatch] :\n\t\t\tnull;\n\t}\n\t\n\t\n\t/**\n\t * Covert the index of an index in the data array and convert it to the visible\n\t *   column index (take account of hidden columns)\n\t *  @param {int} iMatch Column index to lookup\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {int} i the data index\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnColumnIndexToVisible( oSettings, iMatch )\n\t{\n\t\tvar aiVis = _fnGetColumns( oSettings, 'bVisible' );\n\t\tvar iPos = $.inArray( iMatch, aiVis );\n\t\n\t\treturn iPos !== -1 ? iPos : null;\n\t}\n\t\n\t\n\t/**\n\t * Get the number of visible columns\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {int} i the number of visible columns\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnVisbleColumns( oSettings )\n\t{\n\t\tvar vis = 0;\n\t\n\t\t// No reduce in IE8, use a loop for now\n\t\t$.each( oSettings.aoColumns, function ( i, col ) {\n\t\t\tif ( col.bVisible && $(col.nTh).css('display') !== 'none' ) {\n\t\t\t\tvis++;\n\t\t\t}\n\t\t} );\n\t\n\t\treturn vis;\n\t}\n\t\n\t\n\t/**\n\t * Get an array of column indexes that match a given property\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {string} sParam Parameter in aoColumns to look for - typically\n\t *    bVisible or bSearchable\n\t *  @returns {array} Array of indexes with matched properties\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetColumns( oSettings, sParam )\n\t{\n\t\tvar a = [];\n\t\n\t\t$.map( oSettings.aoColumns, function(val, i) {\n\t\t\tif ( val[sParam] ) {\n\t\t\t\ta.push( i );\n\t\t\t}\n\t\t} );\n\t\n\t\treturn a;\n\t}\n\t\n\t\n\t/**\n\t * Calculate the 'type' of a column\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnColumnTypes ( settings )\n\t{\n\t\tvar columns = settings.aoColumns;\n\t\tvar data = settings.aoData;\n\t\tvar types = DataTable.ext.type.detect;\n\t\tvar i, ien, j, jen, k, ken;\n\t\tvar col, cell, detectedType, cache;\n\t\n\t\t// For each column, spin over the \n\t\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\t\tcol = columns[i];\n\t\t\tcache = [];\n\t\n\t\t\tif ( ! col.sType && col._sManualType ) {\n\t\t\t\tcol.sType = col._sManualType;\n\t\t\t}\n\t\t\telse if ( ! col.sType ) {\n\t\t\t\tfor ( j=0, jen=types.length ; j<jen ; j++ ) {\n\t\t\t\t\tfor ( k=0, ken=data.length ; k<ken ; k++ ) {\n\t\t\t\t\t\t// Use a cache array so we only need to get the type data\n\t\t\t\t\t\t// from the formatter once (when using multiple detectors)\n\t\t\t\t\t\tif ( cache[k] === undefined ) {\n\t\t\t\t\t\t\tcache[k] = _fnGetCellData( settings, k, i, 'type' );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tdetectedType = types[j]( cache[k], settings );\n\t\n\t\t\t\t\t\t// If null, then this type can't apply to this column, so\n\t\t\t\t\t\t// rather than testing all cells, break out. There is an\n\t\t\t\t\t\t// exception for the last type which is `html`. We need to\n\t\t\t\t\t\t// scan all rows since it is possible to mix string and HTML\n\t\t\t\t\t\t// types\n\t\t\t\t\t\tif ( ! detectedType && j !== types.length-1 ) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Only a single match is needed for html type since it is\n\t\t\t\t\t\t// bottom of the pile and very similar to string\n\t\t\t\t\t\tif ( detectedType === 'html' ) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Type is valid for all data points in the column - use this\n\t\t\t\t\t// type\n\t\t\t\t\tif ( detectedType ) {\n\t\t\t\t\t\tcol.sType = detectedType;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Fall back - if no type was detected, always use string\n\t\t\t\tif ( ! col.sType ) {\n\t\t\t\t\tcol.sType = 'string';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Take the column definitions and static columns arrays and calculate how\n\t * they relate to column indexes. The callback function will then apply the\n\t * definition found for a column to a suitable configuration object.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {array} aoColDefs The aoColumnDefs array that is to be applied\n\t *  @param {array} aoCols The aoColumns array that defines columns individually\n\t *  @param {function} fn Callback function - takes two parameters, the calculated\n\t *    column index and the definition for that column.\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnApplyColumnDefs( oSettings, aoColDefs, aoCols, fn )\n\t{\n\t\tvar i, iLen, j, jLen, k, kLen, def;\n\t\tvar columns = oSettings.aoColumns;\n\t\n\t\t// Column definitions with aTargets\n\t\tif ( aoColDefs )\n\t\t{\n\t\t\t/* Loop over the definitions array - loop in reverse so first instance has priority */\n\t\t\tfor ( i=aoColDefs.length-1 ; i>=0 ; i-- )\n\t\t\t{\n\t\t\t\tdef = aoColDefs[i];\n\t\n\t\t\t\t/* Each definition can target multiple columns, as it is an array */\n\t\t\t\tvar aTargets = def.targets !== undefined ?\n\t\t\t\t\tdef.targets :\n\t\t\t\t\tdef.aTargets;\n\t\n\t\t\t\tif ( ! $.isArray( aTargets ) )\n\t\t\t\t{\n\t\t\t\t\taTargets = [ aTargets ];\n\t\t\t\t}\n\t\n\t\t\t\tfor ( j=0, jLen=aTargets.length ; j<jLen ; j++ )\n\t\t\t\t{\n\t\t\t\t\tif ( typeof aTargets[j] === 'number' && aTargets[j] >= 0 )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Add columns that we don't yet know about */\n\t\t\t\t\t\twhile( columns.length <= aTargets[j] )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t_fnAddColumn( oSettings );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t/* Integer, basic index */\n\t\t\t\t\t\tfn( aTargets[j], def );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( typeof aTargets[j] === 'number' && aTargets[j] < 0 )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Negative integer, right to left column counting */\n\t\t\t\t\t\tfn( columns.length+aTargets[j], def );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( typeof aTargets[j] === 'string' )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Class name matching on TH element */\n\t\t\t\t\t\tfor ( k=0, kLen=columns.length ; k<kLen ; k++ )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif ( aTargets[j] == \"_all\" ||\n\t\t\t\t\t\t\t     $(columns[k].nTh).hasClass( aTargets[j] ) )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfn( k, def );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// Statically defined columns array\n\t\tif ( aoCols )\n\t\t{\n\t\t\tfor ( i=0, iLen=aoCols.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tfn( i, aoCols[i] );\n\t\t\t}\n\t\t}\n\t}\n\t\n\t/**\n\t * Add a data array to the table, creating DOM node etc. This is the parallel to\n\t * _fnGatherData, but for adding rows from a Javascript source, rather than a\n\t * DOM source.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {array} aData data array to be added\n\t *  @param {node} [nTr] TR element to add to the table - optional. If not given,\n\t *    DataTables will create a row automatically\n\t *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\n\t *    if nTr is.\n\t *  @returns {int} >=0 if successful (index of new aoData entry), -1 if failed\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAddData ( oSettings, aDataIn, nTr, anTds )\n\t{\n\t\t/* Create the object for storing information about this new row */\n\t\tvar iRow = oSettings.aoData.length;\n\t\tvar oData = $.extend( true, {}, DataTable.models.oRow, {\n\t\t\tsrc: nTr ? 'dom' : 'data',\n\t\t\tidx: iRow\n\t\t} );\n\t\n\t\toData._aData = aDataIn;\n\t\toSettings.aoData.push( oData );\n\t\n\t\t/* Create the cells */\n\t\tvar nTd, sThisType;\n\t\tvar columns = oSettings.aoColumns;\n\t\n\t\t// Invalidate the column types as the new data needs to be revalidated\n\t\tfor ( var i=0, iLen=columns.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tcolumns[i].sType = null;\n\t\t}\n\t\n\t\t/* Add to the display array */\n\t\toSettings.aiDisplayMaster.push( iRow );\n\t\n\t\tvar id = oSettings.rowIdFn( aDataIn );\n\t\tif ( id !== undefined ) {\n\t\t\toSettings.aIds[ id ] = oData;\n\t\t}\n\t\n\t\t/* Create the DOM information, or register it if already present */\n\t\tif ( nTr || ! oSettings.oFeatures.bDeferRender )\n\t\t{\n\t\t\t_fnCreateTr( oSettings, iRow, nTr, anTds );\n\t\t}\n\t\n\t\treturn iRow;\n\t}\n\t\n\t\n\t/**\n\t * Add one or more TR elements to the table. Generally we'd expect to\n\t * use this for reading data from a DOM sourced table, but it could be\n\t * used for an TR element. Note that if a TR is given, it is used (i.e.\n\t * it is not cloned).\n\t *  @param {object} settings dataTables settings object\n\t *  @param {array|node|jQuery} trs The TR element(s) to add to the table\n\t *  @returns {array} Array of indexes for the added rows\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAddTr( settings, trs )\n\t{\n\t\tvar row;\n\t\n\t\t// Allow an individual node to be passed in\n\t\tif ( ! (trs instanceof $) ) {\n\t\t\ttrs = $(trs);\n\t\t}\n\t\n\t\treturn trs.map( function (i, el) {\n\t\t\trow = _fnGetRowElements( settings, el );\n\t\t\treturn _fnAddData( settings, row.data, el, row.cells );\n\t\t} );\n\t}\n\t\n\t\n\t/**\n\t * Take a TR element and convert it to an index in aoData\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {node} n the TR element to find\n\t *  @returns {int} index if the node is found, null if not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnNodeToDataIndex( oSettings, n )\n\t{\n\t\treturn (n._DT_RowIndex!==undefined) ? n._DT_RowIndex : null;\n\t}\n\t\n\t\n\t/**\n\t * Take a TD element and convert it into a column data index (not the visible index)\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iRow The row number the TD/TH can be found in\n\t *  @param {node} n The TD/TH element to find\n\t *  @returns {int} index if the node is found, -1 if not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnNodeToColumnIndex( oSettings, iRow, n )\n\t{\n\t\treturn $.inArray( n, oSettings.aoData[ iRow ].anCells );\n\t}\n\t\n\t\n\t/**\n\t * Get the data for a given cell from the internal cache, taking into account data mapping\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} rowIdx aoData row id\n\t *  @param {int} colIdx Column index\n\t *  @param {string} type data get type ('display', 'type' 'filter' 'sort')\n\t *  @returns {*} Cell data\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetCellData( settings, rowIdx, colIdx, type )\n\t{\n\t\tvar draw           = settings.iDraw;\n\t\tvar col            = settings.aoColumns[colIdx];\n\t\tvar rowData        = settings.aoData[rowIdx]._aData;\n\t\tvar defaultContent = col.sDefaultContent;\n\t\tvar cellData       = col.fnGetData( rowData, type, {\n\t\t\tsettings: settings,\n\t\t\trow:      rowIdx,\n\t\t\tcol:      colIdx\n\t\t} );\n\t\n\t\tif ( cellData === undefined ) {\n\t\t\tif ( settings.iDrawError != draw && defaultContent === null ) {\n\t\t\t\t_fnLog( settings, 0, \"Requested unknown parameter \"+\n\t\t\t\t\t(typeof col.mData=='function' ? '{function}' : \"'\"+col.mData+\"'\")+\n\t\t\t\t\t\" for row \"+rowIdx+\", column \"+colIdx, 4 );\n\t\t\t\tsettings.iDrawError = draw;\n\t\t\t}\n\t\t\treturn defaultContent;\n\t\t}\n\t\n\t\t// When the data source is null and a specific data type is requested (i.e.\n\t\t// not the original data), we can use default column data\n\t\tif ( (cellData === rowData || cellData === null) && defaultContent !== null && type !== undefined ) {\n\t\t\tcellData = defaultContent;\n\t\t}\n\t\telse if ( typeof cellData === 'function' ) {\n\t\t\t// If the data source is a function, then we run it and use the return,\n\t\t\t// executing in the scope of the data object (for instances)\n\t\t\treturn cellData.call( rowData );\n\t\t}\n\t\n\t\tif ( cellData === null && type == 'display' ) {\n\t\t\treturn '';\n\t\t}\n\t\treturn cellData;\n\t}\n\t\n\t\n\t/**\n\t * Set the value for a specific cell, into the internal data cache\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} rowIdx aoData row id\n\t *  @param {int} colIdx Column index\n\t *  @param {*} val Value to set\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSetCellData( settings, rowIdx, colIdx, val )\n\t{\n\t\tvar col     = settings.aoColumns[colIdx];\n\t\tvar rowData = settings.aoData[rowIdx]._aData;\n\t\n\t\tcol.fnSetData( rowData, val, {\n\t\t\tsettings: settings,\n\t\t\trow:      rowIdx,\n\t\t\tcol:      colIdx\n\t\t}  );\n\t}\n\t\n\t\n\t// Private variable that is used to match action syntax in the data property object\n\tvar __reArray = /\\[.*?\\]$/;\n\tvar __reFn = /\\(\\)$/;\n\t\n\t/**\n\t * Split string on periods, taking into account escaped periods\n\t * @param  {string} str String to split\n\t * @return {array} Split string\n\t */\n\tfunction _fnSplitObjNotation( str )\n\t{\n\t\treturn $.map( str.match(/(\\\\.|[^\\.])+/g) || [''], function ( s ) {\n\t\t\treturn s.replace(/\\\\\\./g, '.');\n\t\t} );\n\t}\n\t\n\t\n\t/**\n\t * Return a function that can be used to get data from a source object, taking\n\t * into account the ability to use nested objects as a source\n\t *  @param {string|int|function} mSource The data source for the object\n\t *  @returns {function} Data get function\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetObjectDataFn( mSource )\n\t{\n\t\tif ( $.isPlainObject( mSource ) )\n\t\t{\n\t\t\t/* Build an object of get functions, and wrap them in a single call */\n\t\t\tvar o = {};\n\t\t\t$.each( mSource, function (key, val) {\n\t\t\t\tif ( val ) {\n\t\t\t\t\to[key] = _fnGetObjectDataFn( val );\n\t\t\t\t}\n\t\t\t} );\n\t\n\t\t\treturn function (data, type, row, meta) {\n\t\t\t\tvar t = o[type] || o._;\n\t\t\t\treturn t !== undefined ?\n\t\t\t\t\tt(data, type, row, meta) :\n\t\t\t\t\tdata;\n\t\t\t};\n\t\t}\n\t\telse if ( mSource === null )\n\t\t{\n\t\t\t/* Give an empty string for rendering / sorting etc */\n\t\t\treturn function (data) { // type, row and meta also passed, but not used\n\t\t\t\treturn data;\n\t\t\t};\n\t\t}\n\t\telse if ( typeof mSource === 'function' )\n\t\t{\n\t\t\treturn function (data, type, row, meta) {\n\t\t\t\treturn mSource( data, type, row, meta );\n\t\t\t};\n\t\t}\n\t\telse if ( typeof mSource === 'string' && (mSource.indexOf('.') !== -1 ||\n\t\t\t      mSource.indexOf('[') !== -1 || mSource.indexOf('(') !== -1) )\n\t\t{\n\t\t\t/* If there is a . in the source string then the data source is in a\n\t\t\t * nested object so we loop over the data for each level to get the next\n\t\t\t * level down. On each loop we test for undefined, and if found immediately\n\t\t\t * return. This allows entire objects to be missing and sDefaultContent to\n\t\t\t * be used if defined, rather than throwing an error\n\t\t\t */\n\t\t\tvar fetchData = function (data, type, src) {\n\t\t\t\tvar arrayNotation, funcNotation, out, innerSrc;\n\t\n\t\t\t\tif ( src !== \"\" )\n\t\t\t\t{\n\t\t\t\t\tvar a = _fnSplitObjNotation( src );\n\t\n\t\t\t\t\tfor ( var i=0, iLen=a.length ; i<iLen ; i++ )\n\t\t\t\t\t{\n\t\t\t\t\t\t// Check if we are dealing with special notation\n\t\t\t\t\t\tarrayNotation = a[i].match(__reArray);\n\t\t\t\t\t\tfuncNotation = a[i].match(__reFn);\n\t\n\t\t\t\t\t\tif ( arrayNotation )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Array notation\n\t\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\n\t\n\t\t\t\t\t\t\t// Condition allows simply [] to be passed in\n\t\t\t\t\t\t\tif ( a[i] !== \"\" ) {\n\t\t\t\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tout = [];\n\t\n\t\t\t\t\t\t\t// Get the remainder of the nested object to get\n\t\t\t\t\t\t\ta.splice( 0, i+1 );\n\t\t\t\t\t\t\tinnerSrc = a.join('.');\n\t\n\t\t\t\t\t\t\t// Traverse each entry in the array getting the properties requested\n\t\t\t\t\t\t\tif ( $.isArray( data ) ) {\n\t\t\t\t\t\t\t\tfor ( var j=0, jLen=data.length ; j<jLen ; j++ ) {\n\t\t\t\t\t\t\t\t\tout.push( fetchData( data[j], type, innerSrc ) );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t// If a string is given in between the array notation indicators, that\n\t\t\t\t\t\t\t// is used to join the strings together, otherwise an array is returned\n\t\t\t\t\t\t\tvar join = arrayNotation[0].substring(1, arrayNotation[0].length-1);\n\t\t\t\t\t\t\tdata = (join===\"\") ? out : out.join(join);\n\t\n\t\t\t\t\t\t\t// The inner call to fetchData has already traversed through the remainder\n\t\t\t\t\t\t\t// of the source requested, so we exit from the loop\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( funcNotation )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Function call\n\t\t\t\t\t\t\ta[i] = a[i].replace(__reFn, '');\n\t\t\t\t\t\t\tdata = data[ a[i] ]();\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif ( data === null || data[ a[i] ] === undefined )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn data;\n\t\t\t};\n\t\n\t\t\treturn function (data, type) { // row and meta also passed, but not used\n\t\t\t\treturn fetchData( data, type, mSource );\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/* Array or flat object mapping */\n\t\t\treturn function (data, type) { // row and meta also passed, but not used\n\t\t\t\treturn data[mSource];\n\t\t\t};\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Return a function that can be used to set data from a source object, taking\n\t * into account the ability to use nested objects as a source\n\t *  @param {string|int|function} mSource The data source for the object\n\t *  @returns {function} Data set function\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSetObjectDataFn( mSource )\n\t{\n\t\tif ( $.isPlainObject( mSource ) )\n\t\t{\n\t\t\t/* Unlike get, only the underscore (global) option is used for for\n\t\t\t * setting data since we don't know the type here. This is why an object\n\t\t\t * option is not documented for `mData` (which is read/write), but it is\n\t\t\t * for `mRender` which is read only.\n\t\t\t */\n\t\t\treturn _fnSetObjectDataFn( mSource._ );\n\t\t}\n\t\telse if ( mSource === null )\n\t\t{\n\t\t\t/* Nothing to do when the data source is null */\n\t\t\treturn function () {};\n\t\t}\n\t\telse if ( typeof mSource === 'function' )\n\t\t{\n\t\t\treturn function (data, val, meta) {\n\t\t\t\tmSource( data, 'set', val, meta );\n\t\t\t};\n\t\t}\n\t\telse if ( typeof mSource === 'string' && (mSource.indexOf('.') !== -1 ||\n\t\t\t      mSource.indexOf('[') !== -1 || mSource.indexOf('(') !== -1) )\n\t\t{\n\t\t\t/* Like the get, we need to get data from a nested object */\n\t\t\tvar setData = function (data, val, src) {\n\t\t\t\tvar a = _fnSplitObjNotation( src ), b;\n\t\t\t\tvar aLast = a[a.length-1];\n\t\t\t\tvar arrayNotation, funcNotation, o, innerSrc;\n\t\n\t\t\t\tfor ( var i=0, iLen=a.length-1 ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\t// Check if we are dealing with an array notation request\n\t\t\t\t\tarrayNotation = a[i].match(__reArray);\n\t\t\t\t\tfuncNotation = a[i].match(__reFn);\n\t\n\t\t\t\t\tif ( arrayNotation )\n\t\t\t\t\t{\n\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\n\t\t\t\t\t\tdata[ a[i] ] = [];\n\t\n\t\t\t\t\t\t// Get the remainder of the nested object to set so we can recurse\n\t\t\t\t\t\tb = a.slice();\n\t\t\t\t\t\tb.splice( 0, i+1 );\n\t\t\t\t\t\tinnerSrc = b.join('.');\n\t\n\t\t\t\t\t\t// Traverse each entry in the array setting the properties requested\n\t\t\t\t\t\tif ( $.isArray( val ) )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfor ( var j=0, jLen=val.length ; j<jLen ; j++ )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\to = {};\n\t\t\t\t\t\t\t\tsetData( o, val[j], innerSrc );\n\t\t\t\t\t\t\t\tdata[ a[i] ].push( o );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// We've been asked to save data to an array, but it\n\t\t\t\t\t\t\t// isn't array data to be saved. Best that can be done\n\t\t\t\t\t\t\t// is to just save the value.\n\t\t\t\t\t\t\tdata[ a[i] ] = val;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// The inner call to setData has already traversed through the remainder\n\t\t\t\t\t\t// of the source and has set the data, thus we can exit here\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\telse if ( funcNotation )\n\t\t\t\t\t{\n\t\t\t\t\t\t// Function call\n\t\t\t\t\t\ta[i] = a[i].replace(__reFn, '');\n\t\t\t\t\t\tdata = data[ a[i] ]( val );\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// If the nested object doesn't currently exist - since we are\n\t\t\t\t\t// trying to set the value - create it\n\t\t\t\t\tif ( data[ a[i] ] === null || data[ a[i] ] === undefined )\n\t\t\t\t\t{\n\t\t\t\t\t\tdata[ a[i] ] = {};\n\t\t\t\t\t}\n\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t}\n\t\n\t\t\t\t// Last item in the input - i.e, the actual set\n\t\t\t\tif ( aLast.match(__reFn ) )\n\t\t\t\t{\n\t\t\t\t\t// Function call\n\t\t\t\t\tdata = data[ aLast.replace(__reFn, '') ]( val );\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// If array notation is used, we just want to strip it and use the property name\n\t\t\t\t\t// and assign the value. If it isn't used, then we get the result we want anyway\n\t\t\t\t\tdata[ aLast.replace(__reArray, '') ] = val;\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\treturn function (data, val) { // meta is also passed in, but not used\n\t\t\t\treturn setData( data, val, mSource );\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/* Array or flat object mapping */\n\t\t\treturn function (data, val) { // meta is also passed in, but not used\n\t\t\t\tdata[mSource] = val;\n\t\t\t};\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Return an array with the full table data\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns array {array} aData Master data array\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetDataMaster ( settings )\n\t{\n\t\treturn _pluck( settings.aoData, '_aData' );\n\t}\n\t\n\t\n\t/**\n\t * Nuke the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnClearTable( settings )\n\t{\n\t\tsettings.aoData.length = 0;\n\t\tsettings.aiDisplayMaster.length = 0;\n\t\tsettings.aiDisplay.length = 0;\n\t\tsettings.aIds = {};\n\t}\n\t\n\t\n\t /**\n\t * Take an array of integers (index array) and remove a target integer (value - not\n\t * the key!)\n\t *  @param {array} a Index array to target\n\t *  @param {int} iTarget value to find\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDeleteIndex( a, iTarget, splice )\n\t{\n\t\tvar iTargetIndex = -1;\n\t\n\t\tfor ( var i=0, iLen=a.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tif ( a[i] == iTarget )\n\t\t\t{\n\t\t\t\tiTargetIndex = i;\n\t\t\t}\n\t\t\telse if ( a[i] > iTarget )\n\t\t\t{\n\t\t\t\ta[i]--;\n\t\t\t}\n\t\t}\n\t\n\t\tif ( iTargetIndex != -1 && splice === undefined )\n\t\t{\n\t\t\ta.splice( iTargetIndex, 1 );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Mark cached data as invalid such that a re-read of the data will occur when\n\t * the cached data is next requested. Also update from the data source object.\n\t *\n\t * @param {object} settings DataTables settings object\n\t * @param {int}    rowIdx   Row index to invalidate\n\t * @param {string} [src]    Source to invalidate from: undefined, 'auto', 'dom'\n\t *     or 'data'\n\t * @param {int}    [colIdx] Column index to invalidate. If undefined the whole\n\t *     row will be invalidated\n\t * @memberof DataTable#oApi\n\t *\n\t * @todo For the modularisation of v1.11 this will need to become a callback, so\n\t *   the sort and filter methods can subscribe to it. That will required\n\t *   initialisation options for sorting, which is why it is not already baked in\n\t */\n\tfunction _fnInvalidate( settings, rowIdx, src, colIdx )\n\t{\n\t\tvar row = settings.aoData[ rowIdx ];\n\t\tvar i, ien;\n\t\tvar cellWrite = function ( cell, col ) {\n\t\t\t// This is very frustrating, but in IE if you just write directly\n\t\t\t// to innerHTML, and elements that are overwritten are GC'ed,\n\t\t\t// even if there is a reference to them elsewhere\n\t\t\twhile ( cell.childNodes.length ) {\n\t\t\t\tcell.removeChild( cell.firstChild );\n\t\t\t}\n\t\n\t\t\tcell.innerHTML = _fnGetCellData( settings, rowIdx, col, 'display' );\n\t\t};\n\t\n\t\t// Are we reading last data from DOM or the data object?\n\t\tif ( src === 'dom' || ((! src || src === 'auto') && row.src === 'dom') ) {\n\t\t\t// Read the data from the DOM\n\t\t\trow._aData = _fnGetRowElements(\n\t\t\t\t\tsettings, row, colIdx, colIdx === undefined ? undefined : row._aData\n\t\t\t\t)\n\t\t\t\t.data;\n\t\t}\n\t\telse {\n\t\t\t// Reading from data object, update the DOM\n\t\t\tvar cells = row.anCells;\n\t\n\t\t\tif ( cells ) {\n\t\t\t\tif ( colIdx !== undefined ) {\n\t\t\t\t\tcellWrite( cells[colIdx], colIdx );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tfor ( i=0, ien=cells.length ; i<ien ; i++ ) {\n\t\t\t\t\t\tcellWrite( cells[i], i );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// For both row and cell invalidation, the cached data for sorting and\n\t\t// filtering is nulled out\n\t\trow._aSortData = null;\n\t\trow._aFilterData = null;\n\t\n\t\t// Invalidate the type for a specific column (if given) or all columns since\n\t\t// the data might have changed\n\t\tvar cols = settings.aoColumns;\n\t\tif ( colIdx !== undefined ) {\n\t\t\tcols[ colIdx ].sType = null;\n\t\t}\n\t\telse {\n\t\t\tfor ( i=0, ien=cols.length ; i<ien ; i++ ) {\n\t\t\t\tcols[i].sType = null;\n\t\t\t}\n\t\n\t\t\t// Update DataTables special `DT_*` attributes for the row\n\t\t\t_fnRowAttributes( settings, row );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Build a data source object from an HTML row, reading the contents of the\n\t * cells that are in the row.\n\t *\n\t * @param {object} settings DataTables settings object\n\t * @param {node|object} TR element from which to read data or existing row\n\t *   object from which to re-read the data from the cells\n\t * @param {int} [colIdx] Optional column index\n\t * @param {array|object} [d] Data source object. If `colIdx` is given then this\n\t *   parameter should also be given and will be used to write the data into.\n\t *   Only the column in question will be written\n\t * @returns {object} Object with two parameters: `data` the data read, in\n\t *   document order, and `cells` and array of nodes (they can be useful to the\n\t *   caller, so rather than needing a second traversal to get them, just return\n\t *   them from here).\n\t * @memberof DataTable#oApi\n\t */\n\tfunction _fnGetRowElements( settings, row, colIdx, d )\n\t{\n\t\tvar\n\t\t\ttds = [],\n\t\t\ttd = row.firstChild,\n\t\t\tname, col, o, i=0, contents,\n\t\t\tcolumns = settings.aoColumns,\n\t\t\tobjectRead = settings._rowReadObject;\n\t\n\t\t// Allow the data object to be passed in, or construct\n\t\td = d !== undefined ?\n\t\t\td :\n\t\t\tobjectRead ?\n\t\t\t\t{} :\n\t\t\t\t[];\n\t\n\t\tvar attr = function ( str, td  ) {\n\t\t\tif ( typeof str === 'string' ) {\n\t\t\t\tvar idx = str.indexOf('@');\n\t\n\t\t\t\tif ( idx !== -1 ) {\n\t\t\t\t\tvar attr = str.substring( idx+1 );\n\t\t\t\t\tvar setter = _fnSetObjectDataFn( str );\n\t\t\t\t\tsetter( d, td.getAttribute( attr ) );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\t// Read data from a cell and store into the data object\n\t\tvar cellProcess = function ( cell ) {\n\t\t\tif ( colIdx === undefined || colIdx === i ) {\n\t\t\t\tcol = columns[i];\n\t\t\t\tcontents = $.trim(cell.innerHTML);\n\t\n\t\t\t\tif ( col && col._bAttrSrc ) {\n\t\t\t\t\tvar setter = _fnSetObjectDataFn( col.mData._ );\n\t\t\t\t\tsetter( d, contents );\n\t\n\t\t\t\t\tattr( col.mData.sort, cell );\n\t\t\t\t\tattr( col.mData.type, cell );\n\t\t\t\t\tattr( col.mData.filter, cell );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Depending on the `data` option for the columns the data can\n\t\t\t\t\t// be read to either an object or an array.\n\t\t\t\t\tif ( objectRead ) {\n\t\t\t\t\t\tif ( ! col._setter ) {\n\t\t\t\t\t\t\t// Cache the setter function\n\t\t\t\t\t\t\tcol._setter = _fnSetObjectDataFn( col.mData );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcol._setter( d, contents );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\td[i] = contents;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\ti++;\n\t\t};\n\t\n\t\tif ( td ) {\n\t\t\t// `tr` element was passed in\n\t\t\twhile ( td ) {\n\t\t\t\tname = td.nodeName.toUpperCase();\n\t\n\t\t\t\tif ( name == \"TD\" || name == \"TH\" ) {\n\t\t\t\t\tcellProcess( td );\n\t\t\t\t\ttds.push( td );\n\t\t\t\t}\n\t\n\t\t\t\ttd = td.nextSibling;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// Existing row object passed in\n\t\t\ttds = row.anCells;\n\t\n\t\t\tfor ( var j=0, jen=tds.length ; j<jen ; j++ ) {\n\t\t\t\tcellProcess( tds[j] );\n\t\t\t}\n\t\t}\n\t\n\t\t// Read the ID from the DOM if present\n\t\tvar rowNode = row.firstChild ? row : row.nTr;\n\t\n\t\tif ( rowNode ) {\n\t\t\tvar id = rowNode.getAttribute( 'id' );\n\t\n\t\t\tif ( id ) {\n\t\t\t\t_fnSetObjectDataFn( settings.rowId )( d, id );\n\t\t\t}\n\t\t}\n\t\n\t\treturn {\n\t\t\tdata: d,\n\t\t\tcells: tds\n\t\t};\n\t}\n\t/**\n\t * Create a new TR element (and it's TD children) for a row\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {int} iRow Row to consider\n\t *  @param {node} [nTrIn] TR element to add to the table - optional. If not given,\n\t *    DataTables will create a row automatically\n\t *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\n\t *    if nTr is.\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCreateTr ( oSettings, iRow, nTrIn, anTds )\n\t{\n\t\tvar\n\t\t\trow = oSettings.aoData[iRow],\n\t\t\trowData = row._aData,\n\t\t\tcells = [],\n\t\t\tnTr, nTd, oCol,\n\t\t\ti, iLen;\n\t\n\t\tif ( row.nTr === null )\n\t\t{\n\t\t\tnTr = nTrIn || document.createElement('tr');\n\t\n\t\t\trow.nTr = nTr;\n\t\t\trow.anCells = cells;\n\t\n\t\t\t/* Use a private property on the node to allow reserve mapping from the node\n\t\t\t * to the aoData array for fast look up\n\t\t\t */\n\t\t\tnTr._DT_RowIndex = iRow;\n\t\n\t\t\t/* Special parameters can be given by the data source to be used on the row */\n\t\t\t_fnRowAttributes( oSettings, row );\n\t\n\t\t\t/* Process each column */\n\t\t\tfor ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\toCol = oSettings.aoColumns[i];\n\t\n\t\t\t\tnTd = nTrIn ? anTds[i] : document.createElement( oCol.sCellType );\n\t\t\t\tnTd._DT_CellIndex = {\n\t\t\t\t\trow: iRow,\n\t\t\t\t\tcolumn: i\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tcells.push( nTd );\n\t\n\t\t\t\t// Need to create the HTML if new, or if a rendering function is defined\n\t\t\t\tif ( (!nTrIn || oCol.mRender || oCol.mData !== i) &&\n\t\t\t\t\t (!$.isPlainObject(oCol.mData) || oCol.mData._ !== i+'.display')\n\t\t\t\t) {\n\t\t\t\t\tnTd.innerHTML = _fnGetCellData( oSettings, iRow, i, 'display' );\n\t\t\t\t}\n\t\n\t\t\t\t/* Add user defined class */\n\t\t\t\tif ( oCol.sClass )\n\t\t\t\t{\n\t\t\t\t\tnTd.className += ' '+oCol.sClass;\n\t\t\t\t}\n\t\n\t\t\t\t// Visibility - add or remove as required\n\t\t\t\tif ( oCol.bVisible && ! nTrIn )\n\t\t\t\t{\n\t\t\t\t\tnTr.appendChild( nTd );\n\t\t\t\t}\n\t\t\t\telse if ( ! oCol.bVisible && nTrIn )\n\t\t\t\t{\n\t\t\t\t\tnTd.parentNode.removeChild( nTd );\n\t\t\t\t}\n\t\n\t\t\t\tif ( oCol.fnCreatedCell )\n\t\t\t\t{\n\t\t\t\t\toCol.fnCreatedCell.call( oSettings.oInstance,\n\t\t\t\t\t\tnTd, _fnGetCellData( oSettings, iRow, i ), rowData, iRow, i\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t_fnCallbackFire( oSettings, 'aoRowCreatedCallback', null, [nTr, rowData, iRow, cells] );\n\t\t}\n\t\n\t\t// Remove once webkit bug 131819 and Chromium bug 365619 have been resolved\n\t\t// and deployed\n\t\trow.nTr.setAttribute( 'role', 'row' );\n\t}\n\t\n\t\n\t/**\n\t * Add attributes to a row based on the special `DT_*` parameters in a data\n\t * source object.\n\t *  @param {object} settings DataTables settings object\n\t *  @param {object} DataTables row object for the row to be modified\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnRowAttributes( settings, row )\n\t{\n\t\tvar tr = row.nTr;\n\t\tvar data = row._aData;\n\t\n\t\tif ( tr ) {\n\t\t\tvar id = settings.rowIdFn( data );\n\t\n\t\t\tif ( id ) {\n\t\t\t\ttr.id = id;\n\t\t\t}\n\t\n\t\t\tif ( data.DT_RowClass ) {\n\t\t\t\t// Remove any classes added by DT_RowClass before\n\t\t\t\tvar a = data.DT_RowClass.split(' ');\n\t\t\t\trow.__rowc = row.__rowc ?\n\t\t\t\t\t_unique( row.__rowc.concat( a ) ) :\n\t\t\t\t\ta;\n\t\n\t\t\t\t$(tr)\n\t\t\t\t\t.removeClass( row.__rowc.join(' ') )\n\t\t\t\t\t.addClass( data.DT_RowClass );\n\t\t\t}\n\t\n\t\t\tif ( data.DT_RowAttr ) {\n\t\t\t\t$(tr).attr( data.DT_RowAttr );\n\t\t\t}\n\t\n\t\t\tif ( data.DT_RowData ) {\n\t\t\t\t$(tr).data( data.DT_RowData );\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Create the HTML header for the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnBuildHead( oSettings )\n\t{\n\t\tvar i, ien, cell, row, column;\n\t\tvar thead = oSettings.nTHead;\n\t\tvar tfoot = oSettings.nTFoot;\n\t\tvar createHeader = $('th, td', thead).length === 0;\n\t\tvar classes = oSettings.oClasses;\n\t\tvar columns = oSettings.aoColumns;\n\t\n\t\tif ( createHeader ) {\n\t\t\trow = $('<tr/>').appendTo( thead );\n\t\t}\n\t\n\t\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\t\tcolumn = columns[i];\n\t\t\tcell = $( column.nTh ).addClass( column.sClass );\n\t\n\t\t\tif ( createHeader ) {\n\t\t\t\tcell.appendTo( row );\n\t\t\t}\n\t\n\t\t\t// 1.11 move into sorting\n\t\t\tif ( oSettings.oFeatures.bSort ) {\n\t\t\t\tcell.addClass( column.sSortingClass );\n\t\n\t\t\t\tif ( column.bSortable !== false ) {\n\t\t\t\t\tcell\n\t\t\t\t\t\t.attr( 'tabindex', oSettings.iTabIndex )\n\t\t\t\t\t\t.attr( 'aria-controls', oSettings.sTableId );\n\t\n\t\t\t\t\t_fnSortAttachListener( oSettings, column.nTh, i );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif ( column.sTitle != cell[0].innerHTML ) {\n\t\t\t\tcell.html( column.sTitle );\n\t\t\t}\n\t\n\t\t\t_fnRenderer( oSettings, 'header' )(\n\t\t\t\toSettings, cell, column, classes\n\t\t\t);\n\t\t}\n\t\n\t\tif ( createHeader ) {\n\t\t\t_fnDetectHeader( oSettings.aoHeader, thead );\n\t\t}\n\t\t\n\t\t/* ARIA role for the rows */\n\t \t$(thead).find('>tr').attr('role', 'row');\n\t\n\t\t/* Deal with the footer - add classes if required */\n\t\t$(thead).find('>tr>th, >tr>td').addClass( classes.sHeaderTH );\n\t\t$(tfoot).find('>tr>th, >tr>td').addClass( classes.sFooterTH );\n\t\n\t\t// Cache the footer cells. Note that we only take the cells from the first\n\t\t// row in the footer. If there is more than one row the user wants to\n\t\t// interact with, they need to use the table().foot() method. Note also this\n\t\t// allows cells to be used for multiple columns using colspan\n\t\tif ( tfoot !== null ) {\n\t\t\tvar cells = oSettings.aoFooter[0];\n\t\n\t\t\tfor ( i=0, ien=cells.length ; i<ien ; i++ ) {\n\t\t\t\tcolumn = columns[i];\n\t\t\t\tcolumn.nTf = cells[i].cell;\n\t\n\t\t\t\tif ( column.sClass ) {\n\t\t\t\t\t$(column.nTf).addClass( column.sClass );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Draw the header (or footer) element based on the column visibility states. The\n\t * methodology here is to use the layout array from _fnDetectHeader, modified for\n\t * the instantaneous column visibility, to construct the new layout. The grid is\n\t * traversed over cell at a time in a rows x columns grid fashion, although each\n\t * cell insert can cover multiple elements in the grid - which is tracks using the\n\t * aApplied array. Cell inserts in the grid will only occur where there isn't\n\t * already a cell in that position.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param array {objects} aoSource Layout array from _fnDetectHeader\n\t *  @param {boolean} [bIncludeHidden=false] If true then include the hidden columns in the calc,\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDrawHead( oSettings, aoSource, bIncludeHidden )\n\t{\n\t\tvar i, iLen, j, jLen, k, kLen, n, nLocalTr;\n\t\tvar aoLocal = [];\n\t\tvar aApplied = [];\n\t\tvar iColumns = oSettings.aoColumns.length;\n\t\tvar iRowspan, iColspan;\n\t\n\t\tif ( ! aoSource )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\n\t\tif (  bIncludeHidden === undefined )\n\t\t{\n\t\t\tbIncludeHidden = false;\n\t\t}\n\t\n\t\t/* Make a copy of the master layout array, but without the visible columns in it */\n\t\tfor ( i=0, iLen=aoSource.length ; i<iLen ; i++ )\n\t\t{\n\t\t\taoLocal[i] = aoSource[i].slice();\n\t\t\taoLocal[i].nTr = aoSource[i].nTr;\n\t\n\t\t\t/* Remove any columns which are currently hidden */\n\t\t\tfor ( j=iColumns-1 ; j>=0 ; j-- )\n\t\t\t{\n\t\t\t\tif ( !oSettings.aoColumns[j].bVisible && !bIncludeHidden )\n\t\t\t\t{\n\t\t\t\t\taoLocal[i].splice( j, 1 );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t/* Prep the applied array - it needs an element for each row */\n\t\t\taApplied.push( [] );\n\t\t}\n\t\n\t\tfor ( i=0, iLen=aoLocal.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tnLocalTr = aoLocal[i].nTr;\n\t\n\t\t\t/* All cells are going to be replaced, so empty out the row */\n\t\t\tif ( nLocalTr )\n\t\t\t{\n\t\t\t\twhile( (n = nLocalTr.firstChild) )\n\t\t\t\t{\n\t\t\t\t\tnLocalTr.removeChild( n );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tfor ( j=0, jLen=aoLocal[i].length ; j<jLen ; j++ )\n\t\t\t{\n\t\t\t\tiRowspan = 1;\n\t\t\t\tiColspan = 1;\n\t\n\t\t\t\t/* Check to see if there is already a cell (row/colspan) covering our target\n\t\t\t\t * insert point. If there is, then there is nothing to do.\n\t\t\t\t */\n\t\t\t\tif ( aApplied[i][j] === undefined )\n\t\t\t\t{\n\t\t\t\t\tnLocalTr.appendChild( aoLocal[i][j].cell );\n\t\t\t\t\taApplied[i][j] = 1;\n\t\n\t\t\t\t\t/* Expand the cell to cover as many rows as needed */\n\t\t\t\t\twhile ( aoLocal[i+iRowspan] !== undefined &&\n\t\t\t\t\t        aoLocal[i][j].cell == aoLocal[i+iRowspan][j].cell )\n\t\t\t\t\t{\n\t\t\t\t\t\taApplied[i+iRowspan][j] = 1;\n\t\t\t\t\t\tiRowspan++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t/* Expand the cell to cover as many columns as needed */\n\t\t\t\t\twhile ( aoLocal[i][j+iColspan] !== undefined &&\n\t\t\t\t\t        aoLocal[i][j].cell == aoLocal[i][j+iColspan].cell )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Must update the applied array over the rows for the columns */\n\t\t\t\t\t\tfor ( k=0 ; k<iRowspan ; k++ )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taApplied[i+k][j+iColspan] = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tiColspan++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t/* Do the actual expansion in the DOM */\n\t\t\t\t\t$(aoLocal[i][j].cell)\n\t\t\t\t\t\t.attr('rowspan', iRowspan)\n\t\t\t\t\t\t.attr('colspan', iColspan);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Insert the required TR nodes into the table for display\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDraw( oSettings )\n\t{\n\t\t/* Provide a pre-callback function which can be used to cancel the draw is false is returned */\n\t\tvar aPreDraw = _fnCallbackFire( oSettings, 'aoPreDrawCallback', 'preDraw', [oSettings] );\n\t\tif ( $.inArray( false, aPreDraw ) !== -1 )\n\t\t{\n\t\t\t_fnProcessingDisplay( oSettings, false );\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar i, iLen, n;\n\t\tvar anRows = [];\n\t\tvar iRowCount = 0;\n\t\tvar asStripeClasses = oSettings.asStripeClasses;\n\t\tvar iStripes = asStripeClasses.length;\n\t\tvar iOpenRows = oSettings.aoOpenRows.length;\n\t\tvar oLang = oSettings.oLanguage;\n\t\tvar iInitDisplayStart = oSettings.iInitDisplayStart;\n\t\tvar bServerSide = _fnDataSource( oSettings ) == 'ssp';\n\t\tvar aiDisplay = oSettings.aiDisplay;\n\t\n\t\toSettings.bDrawing = true;\n\t\n\t\t/* Check and see if we have an initial draw position from state saving */\n\t\tif ( iInitDisplayStart !== undefined && iInitDisplayStart !== -1 )\n\t\t{\n\t\t\toSettings._iDisplayStart = bServerSide ?\n\t\t\t\tiInitDisplayStart :\n\t\t\t\tiInitDisplayStart >= oSettings.fnRecordsDisplay() ?\n\t\t\t\t\t0 :\n\t\t\t\t\tiInitDisplayStart;\n\t\n\t\t\toSettings.iInitDisplayStart = -1;\n\t\t}\n\t\n\t\tvar iDisplayStart = oSettings._iDisplayStart;\n\t\tvar iDisplayEnd = oSettings.fnDisplayEnd();\n\t\n\t\t/* Server-side processing draw intercept */\n\t\tif ( oSettings.bDeferLoading )\n\t\t{\n\t\t\toSettings.bDeferLoading = false;\n\t\t\toSettings.iDraw++;\n\t\t\t_fnProcessingDisplay( oSettings, false );\n\t\t}\n\t\telse if ( !bServerSide )\n\t\t{\n\t\t\toSettings.iDraw++;\n\t\t}\n\t\telse if ( !oSettings.bDestroying && !_fnAjaxUpdate( oSettings ) )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\n\t\tif ( aiDisplay.length !== 0 )\n\t\t{\n\t\t\tvar iStart = bServerSide ? 0 : iDisplayStart;\n\t\t\tvar iEnd = bServerSide ? oSettings.aoData.length : iDisplayEnd;\n\t\n\t\t\tfor ( var j=iStart ; j<iEnd ; j++ )\n\t\t\t{\n\t\t\t\tvar iDataIndex = aiDisplay[j];\n\t\t\t\tvar aoData = oSettings.aoData[ iDataIndex ];\n\t\t\t\tif ( aoData.nTr === null )\n\t\t\t\t{\n\t\t\t\t\t_fnCreateTr( oSettings, iDataIndex );\n\t\t\t\t}\n\t\n\t\t\t\tvar nRow = aoData.nTr;\n\t\n\t\t\t\t/* Remove the old striping classes and then add the new one */\n\t\t\t\tif ( iStripes !== 0 )\n\t\t\t\t{\n\t\t\t\t\tvar sStripe = asStripeClasses[ iRowCount % iStripes ];\n\t\t\t\t\tif ( aoData._sRowStripe != sStripe )\n\t\t\t\t\t{\n\t\t\t\t\t\t$(nRow).removeClass( aoData._sRowStripe ).addClass( sStripe );\n\t\t\t\t\t\taoData._sRowStripe = sStripe;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Row callback functions - might want to manipulate the row\n\t\t\t\t// iRowCount and j are not currently documented. Are they at all\n\t\t\t\t// useful?\n\t\t\t\t_fnCallbackFire( oSettings, 'aoRowCallback', null,\n\t\t\t\t\t[nRow, aoData._aData, iRowCount, j, iDataIndex] );\n\t\n\t\t\t\tanRows.push( nRow );\n\t\t\t\tiRowCount++;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/* Table is empty - create a row with an empty message in it */\n\t\t\tvar sZero = oLang.sZeroRecords;\n\t\t\tif ( oSettings.iDraw == 1 &&  _fnDataSource( oSettings ) == 'ajax' )\n\t\t\t{\n\t\t\t\tsZero = oLang.sLoadingRecords;\n\t\t\t}\n\t\t\telse if ( oLang.sEmptyTable && oSettings.fnRecordsTotal() === 0 )\n\t\t\t{\n\t\t\t\tsZero = oLang.sEmptyTable;\n\t\t\t}\n\t\n\t\t\tanRows[ 0 ] = $( '<tr/>', { 'class': iStripes ? asStripeClasses[0] : '' } )\n\t\t\t\t.append( $('<td />', {\n\t\t\t\t\t'valign':  'top',\n\t\t\t\t\t'colSpan': _fnVisbleColumns( oSettings ),\n\t\t\t\t\t'class':   oSettings.oClasses.sRowEmpty\n\t\t\t\t} ).html( sZero ) )[0];\n\t\t}\n\t\n\t\t/* Header and footer callbacks */\n\t\t_fnCallbackFire( oSettings, 'aoHeaderCallback', 'header', [ $(oSettings.nTHead).children('tr')[0],\n\t\t\t_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );\n\t\n\t\t_fnCallbackFire( oSettings, 'aoFooterCallback', 'footer', [ $(oSettings.nTFoot).children('tr')[0],\n\t\t\t_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );\n\t\n\t\tvar body = $(oSettings.nTBody);\n\t\n\t\tbody.children().detach();\n\t\tbody.append( $(anRows) );\n\t\n\t\t/* Call all required callback functions for the end of a draw */\n\t\t_fnCallbackFire( oSettings, 'aoDrawCallback', 'draw', [oSettings] );\n\t\n\t\t/* Draw is complete, sorting and filtering must be as well */\n\t\toSettings.bSorted = false;\n\t\toSettings.bFiltered = false;\n\t\toSettings.bDrawing = false;\n\t}\n\t\n\t\n\t/**\n\t * Redraw the table - taking account of the various features which are enabled\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {boolean} [holdPosition] Keep the current paging position. By default\n\t *    the paging is reset to the first page\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnReDraw( settings, holdPosition )\n\t{\n\t\tvar\n\t\t\tfeatures = settings.oFeatures,\n\t\t\tsort     = features.bSort,\n\t\t\tfilter   = features.bFilter;\n\t\n\t\tif ( sort ) {\n\t\t\t_fnSort( settings );\n\t\t}\n\t\n\t\tif ( filter ) {\n\t\t\t_fnFilterComplete( settings, settings.oPreviousSearch );\n\t\t}\n\t\telse {\n\t\t\t// No filtering, so we want to just use the display master\n\t\t\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\n\t\t}\n\t\n\t\tif ( holdPosition !== true ) {\n\t\t\tsettings._iDisplayStart = 0;\n\t\t}\n\t\n\t\t// Let any modules know about the draw hold position state (used by\n\t\t// scrolling internally)\n\t\tsettings._drawHold = holdPosition;\n\t\n\t\t_fnDraw( settings );\n\t\n\t\tsettings._drawHold = false;\n\t}\n\t\n\t\n\t/**\n\t * Add the options to the page HTML for the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAddOptionsHtml ( oSettings )\n\t{\n\t\tvar classes = oSettings.oClasses;\n\t\tvar table = $(oSettings.nTable);\n\t\tvar holding = $('<div/>').insertBefore( table ); // Holding element for speed\n\t\tvar features = oSettings.oFeatures;\n\t\n\t\t// All DataTables are wrapped in a div\n\t\tvar insert = $('<div/>', {\n\t\t\tid:      oSettings.sTableId+'_wrapper',\n\t\t\t'class': classes.sWrapper + (oSettings.nTFoot ? '' : ' '+classes.sNoFooter)\n\t\t} );\n\t\n\t\toSettings.nHolding = holding[0];\n\t\toSettings.nTableWrapper = insert[0];\n\t\toSettings.nTableReinsertBefore = oSettings.nTable.nextSibling;\n\t\n\t\t/* Loop over the user set positioning and place the elements as needed */\n\t\tvar aDom = oSettings.sDom.split('');\n\t\tvar featureNode, cOption, nNewNode, cNext, sAttr, j;\n\t\tfor ( var i=0 ; i<aDom.length ; i++ )\n\t\t{\n\t\t\tfeatureNode = null;\n\t\t\tcOption = aDom[i];\n\t\n\t\t\tif ( cOption == '<' )\n\t\t\t{\n\t\t\t\t/* New container div */\n\t\t\t\tnNewNode = $('<div/>')[0];\n\t\n\t\t\t\t/* Check to see if we should append an id and/or a class name to the container */\n\t\t\t\tcNext = aDom[i+1];\n\t\t\t\tif ( cNext == \"'\" || cNext == '\"' )\n\t\t\t\t{\n\t\t\t\t\tsAttr = \"\";\n\t\t\t\t\tj = 2;\n\t\t\t\t\twhile ( aDom[i+j] != cNext )\n\t\t\t\t\t{\n\t\t\t\t\t\tsAttr += aDom[i+j];\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t/* Replace jQuery UI constants @todo depreciated */\n\t\t\t\t\tif ( sAttr == \"H\" )\n\t\t\t\t\t{\n\t\t\t\t\t\tsAttr = classes.sJUIHeader;\n\t\t\t\t\t}\n\t\t\t\t\telse if ( sAttr == \"F\" )\n\t\t\t\t\t{\n\t\t\t\t\t\tsAttr = classes.sJUIFooter;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t/* The attribute can be in the format of \"#id.class\", \"#id\" or \"class\" This logic\n\t\t\t\t\t * breaks the string into parts and applies them as needed\n\t\t\t\t\t */\n\t\t\t\t\tif ( sAttr.indexOf('.') != -1 )\n\t\t\t\t\t{\n\t\t\t\t\t\tvar aSplit = sAttr.split('.');\n\t\t\t\t\t\tnNewNode.id = aSplit[0].substr(1, aSplit[0].length-1);\n\t\t\t\t\t\tnNewNode.className = aSplit[1];\n\t\t\t\t\t}\n\t\t\t\t\telse if ( sAttr.charAt(0) == \"#\" )\n\t\t\t\t\t{\n\t\t\t\t\t\tnNewNode.id = sAttr.substr(1, sAttr.length-1);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tnNewNode.className = sAttr;\n\t\t\t\t\t}\n\t\n\t\t\t\t\ti += j; /* Move along the position array */\n\t\t\t\t}\n\t\n\t\t\t\tinsert.append( nNewNode );\n\t\t\t\tinsert = $(nNewNode);\n\t\t\t}\n\t\t\telse if ( cOption == '>' )\n\t\t\t{\n\t\t\t\t/* End container div */\n\t\t\t\tinsert = insert.parent();\n\t\t\t}\n\t\t\t// @todo Move options into their own plugins?\n\t\t\telse if ( cOption == 'l' && features.bPaginate && features.bLengthChange )\n\t\t\t{\n\t\t\t\t/* Length */\n\t\t\t\tfeatureNode = _fnFeatureHtmlLength( oSettings );\n\t\t\t}\n\t\t\telse if ( cOption == 'f' && features.bFilter )\n\t\t\t{\n\t\t\t\t/* Filter */\n\t\t\t\tfeatureNode = _fnFeatureHtmlFilter( oSettings );\n\t\t\t}\n\t\t\telse if ( cOption == 'r' && features.bProcessing )\n\t\t\t{\n\t\t\t\t/* pRocessing */\n\t\t\t\tfeatureNode = _fnFeatureHtmlProcessing( oSettings );\n\t\t\t}\n\t\t\telse if ( cOption == 't' )\n\t\t\t{\n\t\t\t\t/* Table */\n\t\t\t\tfeatureNode = _fnFeatureHtmlTable( oSettings );\n\t\t\t}\n\t\t\telse if ( cOption ==  'i' && features.bInfo )\n\t\t\t{\n\t\t\t\t/* Info */\n\t\t\t\tfeatureNode = _fnFeatureHtmlInfo( oSettings );\n\t\t\t}\n\t\t\telse if ( cOption == 'p' && features.bPaginate )\n\t\t\t{\n\t\t\t\t/* Pagination */\n\t\t\t\tfeatureNode = _fnFeatureHtmlPaginate( oSettings );\n\t\t\t}\n\t\t\telse if ( DataTable.ext.feature.length !== 0 )\n\t\t\t{\n\t\t\t\t/* Plug-in features */\n\t\t\t\tvar aoFeatures = DataTable.ext.feature;\n\t\t\t\tfor ( var k=0, kLen=aoFeatures.length ; k<kLen ; k++ )\n\t\t\t\t{\n\t\t\t\t\tif ( cOption == aoFeatures[k].cFeature )\n\t\t\t\t\t{\n\t\t\t\t\t\tfeatureNode = aoFeatures[k].fnInit( oSettings );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t/* Add to the 2D features array */\n\t\t\tif ( featureNode )\n\t\t\t{\n\t\t\t\tvar aanFeatures = oSettings.aanFeatures;\n\t\n\t\t\t\tif ( ! aanFeatures[cOption] )\n\t\t\t\t{\n\t\t\t\t\taanFeatures[cOption] = [];\n\t\t\t\t}\n\t\n\t\t\t\taanFeatures[cOption].push( featureNode );\n\t\t\t\tinsert.append( featureNode );\n\t\t\t}\n\t\t}\n\t\n\t\t/* Built our DOM structure - replace the holding div with what we want */\n\t\tholding.replaceWith( insert );\n\t\toSettings.nHolding = null;\n\t}\n\t\n\t\n\t/**\n\t * Use the DOM source to create up an array of header cells. The idea here is to\n\t * create a layout grid (array) of rows x columns, which contains a reference\n\t * to the cell that that point in the grid (regardless of col/rowspan), such that\n\t * any column / row could be removed and the new grid constructed\n\t *  @param array {object} aLayout Array to store the calculated layout in\n\t *  @param {node} nThead The header/footer element for the table\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDetectHeader ( aLayout, nThead )\n\t{\n\t\tvar nTrs = $(nThead).children('tr');\n\t\tvar nTr, nCell;\n\t\tvar i, k, l, iLen, jLen, iColShifted, iColumn, iColspan, iRowspan;\n\t\tvar bUnique;\n\t\tvar fnShiftCol = function ( a, i, j ) {\n\t\t\tvar k = a[i];\n\t                while ( k[j] ) {\n\t\t\t\tj++;\n\t\t\t}\n\t\t\treturn j;\n\t\t};\n\t\n\t\taLayout.splice( 0, aLayout.length );\n\t\n\t\t/* We know how many rows there are in the layout - so prep it */\n\t\tfor ( i=0, iLen=nTrs.length ; i<iLen ; i++ )\n\t\t{\n\t\t\taLayout.push( [] );\n\t\t}\n\t\n\t\t/* Calculate a layout array */\n\t\tfor ( i=0, iLen=nTrs.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tnTr = nTrs[i];\n\t\t\tiColumn = 0;\n\t\n\t\t\t/* For every cell in the row... */\n\t\t\tnCell = nTr.firstChild;\n\t\t\twhile ( nCell ) {\n\t\t\t\tif ( nCell.nodeName.toUpperCase() == \"TD\" ||\n\t\t\t\t     nCell.nodeName.toUpperCase() == \"TH\" )\n\t\t\t\t{\n\t\t\t\t\t/* Get the col and rowspan attributes from the DOM and sanitise them */\n\t\t\t\t\tiColspan = nCell.getAttribute('colspan') * 1;\n\t\t\t\t\tiRowspan = nCell.getAttribute('rowspan') * 1;\n\t\t\t\t\tiColspan = (!iColspan || iColspan===0 || iColspan===1) ? 1 : iColspan;\n\t\t\t\t\tiRowspan = (!iRowspan || iRowspan===0 || iRowspan===1) ? 1 : iRowspan;\n\t\n\t\t\t\t\t/* There might be colspan cells already in this row, so shift our target\n\t\t\t\t\t * accordingly\n\t\t\t\t\t */\n\t\t\t\t\tiColShifted = fnShiftCol( aLayout, i, iColumn );\n\t\n\t\t\t\t\t/* Cache calculation for unique columns */\n\t\t\t\t\tbUnique = iColspan === 1 ? true : false;\n\t\n\t\t\t\t\t/* If there is col / rowspan, copy the information into the layout grid */\n\t\t\t\t\tfor ( l=0 ; l<iColspan ; l++ )\n\t\t\t\t\t{\n\t\t\t\t\t\tfor ( k=0 ; k<iRowspan ; k++ )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taLayout[i+k][iColShifted+l] = {\n\t\t\t\t\t\t\t\t\"cell\": nCell,\n\t\t\t\t\t\t\t\t\"unique\": bUnique\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\taLayout[i+k].nTr = nTr;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnCell = nCell.nextSibling;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Get an array of unique th elements, one for each column\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {node} nHeader automatically detect the layout from this node - optional\n\t *  @param {array} aLayout thead/tfoot layout from _fnDetectHeader - optional\n\t *  @returns array {node} aReturn list of unique th's\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetUniqueThs ( oSettings, nHeader, aLayout )\n\t{\n\t\tvar aReturn = [];\n\t\tif ( !aLayout )\n\t\t{\n\t\t\taLayout = oSettings.aoHeader;\n\t\t\tif ( nHeader )\n\t\t\t{\n\t\t\t\taLayout = [];\n\t\t\t\t_fnDetectHeader( aLayout, nHeader );\n\t\t\t}\n\t\t}\n\t\n\t\tfor ( var i=0, iLen=aLayout.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tfor ( var j=0, jLen=aLayout[i].length ; j<jLen ; j++ )\n\t\t\t{\n\t\t\t\tif ( aLayout[i][j].unique &&\n\t\t\t\t\t (!aReturn[j] || !oSettings.bSortCellsTop) )\n\t\t\t\t{\n\t\t\t\t\taReturn[j] = aLayout[i][j].cell;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn aReturn;\n\t}\n\t\n\t/**\n\t * Create an Ajax call based on the table's settings, taking into account that\n\t * parameters can have multiple forms, and backwards compatibility.\n\t *\n\t * @param {object} oSettings dataTables settings object\n\t * @param {array} data Data to send to the server, required by\n\t *     DataTables - may be augmented by developer callbacks\n\t * @param {function} fn Callback function to run when data is obtained\n\t */\n\tfunction _fnBuildAjax( oSettings, data, fn )\n\t{\n\t\t// Compatibility with 1.9-, allow fnServerData and event to manipulate\n\t\t_fnCallbackFire( oSettings, 'aoServerParams', 'serverParams', [data] );\n\t\n\t\t// Convert to object based for 1.10+ if using the old array scheme which can\n\t\t// come from server-side processing or serverParams\n\t\tif ( data && $.isArray(data) ) {\n\t\t\tvar tmp = {};\n\t\t\tvar rbracket = /(.*?)\\[\\]$/;\n\t\n\t\t\t$.each( data, function (key, val) {\n\t\t\t\tvar match = val.name.match(rbracket);\n\t\n\t\t\t\tif ( match ) {\n\t\t\t\t\t// Support for arrays\n\t\t\t\t\tvar name = match[0];\n\t\n\t\t\t\t\tif ( ! tmp[ name ] ) {\n\t\t\t\t\t\ttmp[ name ] = [];\n\t\t\t\t\t}\n\t\t\t\t\ttmp[ name ].push( val.value );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttmp[val.name] = val.value;\n\t\t\t\t}\n\t\t\t} );\n\t\t\tdata = tmp;\n\t\t}\n\t\n\t\tvar ajaxData;\n\t\tvar ajax = oSettings.ajax;\n\t\tvar instance = oSettings.oInstance;\n\t\tvar callback = function ( json ) {\n\t\t\t_fnCallbackFire( oSettings, null, 'xhr', [oSettings, json, oSettings.jqXHR] );\n\t\t\tfn( json );\n\t\t};\n\t\n\t\tif ( $.isPlainObject( ajax ) && ajax.data )\n\t\t{\n\t\t\tajaxData = ajax.data;\n\t\n\t\t\tvar newData = typeof ajaxData === 'function' ?\n\t\t\t\tajaxData( data, oSettings ) :  // fn can manipulate data or return\n\t\t\t\tajaxData;                      // an object object or array to merge\n\t\n\t\t\t// If the function returned something, use that alone\n\t\t\tdata = typeof ajaxData === 'function' && newData ?\n\t\t\t\tnewData :\n\t\t\t\t$.extend( true, data, newData );\n\t\n\t\t\t// Remove the data property as we've resolved it already and don't want\n\t\t\t// jQuery to do it again (it is restored at the end of the function)\n\t\t\tdelete ajax.data;\n\t\t}\n\t\n\t\tvar baseAjax = {\n\t\t\t\"data\": data,\n\t\t\t\"success\": function (json) {\n\t\t\t\tvar error = json.error || json.sError;\n\t\t\t\tif ( error ) {\n\t\t\t\t\t_fnLog( oSettings, 0, error );\n\t\t\t\t}\n\t\n\t\t\t\toSettings.json = json;\n\t\t\t\tcallback( json );\n\t\t\t},\n\t\t\t\"dataType\": \"json\",\n\t\t\t\"cache\": false,\n\t\t\t\"type\": oSettings.sServerMethod,\n\t\t\t\"error\": function (xhr, error, thrown) {\n\t\t\t\tvar ret = _fnCallbackFire( oSettings, null, 'xhr', [oSettings, null, oSettings.jqXHR] );\n\t\n\t\t\t\tif ( $.inArray( true, ret ) === -1 ) {\n\t\t\t\t\tif ( error == \"parsererror\" ) {\n\t\t\t\t\t\t_fnLog( oSettings, 0, 'Invalid JSON response', 1 );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( xhr.readyState === 4 ) {\n\t\t\t\t\t\t_fnLog( oSettings, 0, 'Ajax error', 7 );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t_fnProcessingDisplay( oSettings, false );\n\t\t\t}\n\t\t};\n\t\n\t\t// Store the data submitted for the API\n\t\toSettings.oAjaxData = data;\n\t\n\t\t// Allow plug-ins and external processes to modify the data\n\t\t_fnCallbackFire( oSettings, null, 'preXhr', [oSettings, data] );\n\t\n\t\tif ( oSettings.fnServerData )\n\t\t{\n\t\t\t// DataTables 1.9- compatibility\n\t\t\toSettings.fnServerData.call( instance,\n\t\t\t\toSettings.sAjaxSource,\n\t\t\t\t$.map( data, function (val, key) { // Need to convert back to 1.9 trad format\n\t\t\t\t\treturn { name: key, value: val };\n\t\t\t\t} ),\n\t\t\t\tcallback,\n\t\t\t\toSettings\n\t\t\t);\n\t\t}\n\t\telse if ( oSettings.sAjaxSource || typeof ajax === 'string' )\n\t\t{\n\t\t\t// DataTables 1.9- compatibility\n\t\t\toSettings.jqXHR = $.ajax( $.extend( baseAjax, {\n\t\t\t\turl: ajax || oSettings.sAjaxSource\n\t\t\t} ) );\n\t\t}\n\t\telse if ( typeof ajax === 'function' )\n\t\t{\n\t\t\t// Is a function - let the caller define what needs to be done\n\t\t\toSettings.jqXHR = ajax.call( instance, data, callback, oSettings );\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Object to extend the base settings\n\t\t\toSettings.jqXHR = $.ajax( $.extend( baseAjax, ajax ) );\n\t\n\t\t\t// Restore for next time around\n\t\t\tajax.data = ajaxData;\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Update the table using an Ajax call\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {boolean} Block the table drawing or not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAjaxUpdate( settings )\n\t{\n\t\tif ( settings.bAjaxDataGet ) {\n\t\t\tsettings.iDraw++;\n\t\t\t_fnProcessingDisplay( settings, true );\n\t\n\t\t\t_fnBuildAjax(\n\t\t\t\tsettings,\n\t\t\t\t_fnAjaxParameters( settings ),\n\t\t\t\tfunction(json) {\n\t\t\t\t\t_fnAjaxUpdateDraw( settings, json );\n\t\t\t\t}\n\t\t\t);\n\t\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\t\n\t\n\t/**\n\t * Build up the parameters in an object needed for a server-side processing\n\t * request. Note that this is basically done twice, is different ways - a modern\n\t * method which is used by default in DataTables 1.10 which uses objects and\n\t * arrays, or the 1.9- method with is name / value pairs. 1.9 method is used if\n\t * the sAjaxSource option is used in the initialisation, or the legacyAjax\n\t * option is set.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {bool} block the table drawing or not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAjaxParameters( settings )\n\t{\n\t\tvar\n\t\t\tcolumns = settings.aoColumns,\n\t\t\tcolumnCount = columns.length,\n\t\t\tfeatures = settings.oFeatures,\n\t\t\tpreSearch = settings.oPreviousSearch,\n\t\t\tpreColSearch = settings.aoPreSearchCols,\n\t\t\ti, data = [], dataProp, column, columnSearch,\n\t\t\tsort = _fnSortFlatten( settings ),\n\t\t\tdisplayStart = settings._iDisplayStart,\n\t\t\tdisplayLength = features.bPaginate !== false ?\n\t\t\t\tsettings._iDisplayLength :\n\t\t\t\t-1;\n\t\n\t\tvar param = function ( name, value ) {\n\t\t\tdata.push( { 'name': name, 'value': value } );\n\t\t};\n\t\n\t\t// DataTables 1.9- compatible method\n\t\tparam( 'sEcho',          settings.iDraw );\n\t\tparam( 'iColumns',       columnCount );\n\t\tparam( 'sColumns',       _pluck( columns, 'sName' ).join(',') );\n\t\tparam( 'iDisplayStart',  displayStart );\n\t\tparam( 'iDisplayLength', displayLength );\n\t\n\t\t// DataTables 1.10+ method\n\t\tvar d = {\n\t\t\tdraw:    settings.iDraw,\n\t\t\tcolumns: [],\n\t\t\torder:   [],\n\t\t\tstart:   displayStart,\n\t\t\tlength:  displayLength,\n\t\t\tsearch:  {\n\t\t\t\tvalue: preSearch.sSearch,\n\t\t\t\tregex: preSearch.bRegex\n\t\t\t}\n\t\t};\n\t\n\t\tfor ( i=0 ; i<columnCount ; i++ ) {\n\t\t\tcolumn = columns[i];\n\t\t\tcolumnSearch = preColSearch[i];\n\t\t\tdataProp = typeof column.mData==\"function\" ? 'function' : column.mData ;\n\t\n\t\t\td.columns.push( {\n\t\t\t\tdata:       dataProp,\n\t\t\t\tname:       column.sName,\n\t\t\t\tsearchable: column.bSearchable,\n\t\t\t\torderable:  column.bSortable,\n\t\t\t\tsearch:     {\n\t\t\t\t\tvalue: columnSearch.sSearch,\n\t\t\t\t\tregex: columnSearch.bRegex\n\t\t\t\t}\n\t\t\t} );\n\t\n\t\t\tparam( \"mDataProp_\"+i, dataProp );\n\t\n\t\t\tif ( features.bFilter ) {\n\t\t\t\tparam( 'sSearch_'+i,     columnSearch.sSearch );\n\t\t\t\tparam( 'bRegex_'+i,      columnSearch.bRegex );\n\t\t\t\tparam( 'bSearchable_'+i, column.bSearchable );\n\t\t\t}\n\t\n\t\t\tif ( features.bSort ) {\n\t\t\t\tparam( 'bSortable_'+i, column.bSortable );\n\t\t\t}\n\t\t}\n\t\n\t\tif ( features.bFilter ) {\n\t\t\tparam( 'sSearch', preSearch.sSearch );\n\t\t\tparam( 'bRegex', preSearch.bRegex );\n\t\t}\n\t\n\t\tif ( features.bSort ) {\n\t\t\t$.each( sort, function ( i, val ) {\n\t\t\t\td.order.push( { column: val.col, dir: val.dir } );\n\t\n\t\t\t\tparam( 'iSortCol_'+i, val.col );\n\t\t\t\tparam( 'sSortDir_'+i, val.dir );\n\t\t\t} );\n\t\n\t\t\tparam( 'iSortingCols', sort.length );\n\t\t}\n\t\n\t\t// If the legacy.ajax parameter is null, then we automatically decide which\n\t\t// form to use, based on sAjaxSource\n\t\tvar legacy = DataTable.ext.legacy.ajax;\n\t\tif ( legacy === null ) {\n\t\t\treturn settings.sAjaxSource ? data : d;\n\t\t}\n\t\n\t\t// Otherwise, if legacy has been specified then we use that to decide on the\n\t\t// form\n\t\treturn legacy ? data : d;\n\t}\n\t\n\t\n\t/**\n\t * Data the data from the server (nuking the old) and redraw the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {object} json json data return from the server.\n\t *  @param {string} json.sEcho Tracking flag for DataTables to match requests\n\t *  @param {int} json.iTotalRecords Number of records in the data set, not accounting for filtering\n\t *  @param {int} json.iTotalDisplayRecords Number of records in the data set, accounting for filtering\n\t *  @param {array} json.aaData The data to display on this page\n\t *  @param {string} [json.sColumns] Column ordering (sName, comma separated)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnAjaxUpdateDraw ( settings, json )\n\t{\n\t\t// v1.10 uses camelCase variables, while 1.9 uses Hungarian notation.\n\t\t// Support both\n\t\tvar compat = function ( old, modern ) {\n\t\t\treturn json[old] !== undefined ? json[old] : json[modern];\n\t\t};\n\t\n\t\tvar data = _fnAjaxDataSrc( settings, json );\n\t\tvar draw            = compat( 'sEcho',                'draw' );\n\t\tvar recordsTotal    = compat( 'iTotalRecords',        'recordsTotal' );\n\t\tvar recordsFiltered = compat( 'iTotalDisplayRecords', 'recordsFiltered' );\n\t\n\t\tif ( draw ) {\n\t\t\t// Protect against out of sequence returns\n\t\t\tif ( draw*1 < settings.iDraw ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsettings.iDraw = draw * 1;\n\t\t}\n\t\n\t\t_fnClearTable( settings );\n\t\tsettings._iRecordsTotal   = parseInt(recordsTotal, 10);\n\t\tsettings._iRecordsDisplay = parseInt(recordsFiltered, 10);\n\t\n\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t_fnAddData( settings, data[i] );\n\t\t}\n\t\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\n\t\n\t\tsettings.bAjaxDataGet = false;\n\t\t_fnDraw( settings );\n\t\n\t\tif ( ! settings._bInitComplete ) {\n\t\t\t_fnInitComplete( settings, json );\n\t\t}\n\t\n\t\tsettings.bAjaxDataGet = true;\n\t\t_fnProcessingDisplay( settings, false );\n\t}\n\t\n\t\n\t/**\n\t * Get the data from the JSON data source to use for drawing a table. Using\n\t * `_fnGetObjectDataFn` allows the data to be sourced from a property of the\n\t * source object, or from a processing function.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param  {object} json Data source object / array from the server\n\t *  @return {array} Array of data to use\n\t */\n\tfunction _fnAjaxDataSrc ( oSettings, json )\n\t{\n\t\tvar dataSrc = $.isPlainObject( oSettings.ajax ) && oSettings.ajax.dataSrc !== undefined ?\n\t\t\toSettings.ajax.dataSrc :\n\t\t\toSettings.sAjaxDataProp; // Compatibility with 1.9-.\n\t\n\t\t// Compatibility with 1.9-. In order to read from aaData, check if the\n\t\t// default has been changed, if not, check for aaData\n\t\tif ( dataSrc === 'data' ) {\n\t\t\treturn json.aaData || json[dataSrc];\n\t\t}\n\t\n\t\treturn dataSrc !== \"\" ?\n\t\t\t_fnGetObjectDataFn( dataSrc )( json ) :\n\t\t\tjson;\n\t}\n\t\n\t/**\n\t * Generate the node required for filtering text\n\t *  @returns {node} Filter control element\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlFilter ( settings )\n\t{\n\t\tvar classes = settings.oClasses;\n\t\tvar tableId = settings.sTableId;\n\t\tvar language = settings.oLanguage;\n\t\tvar previousSearch = settings.oPreviousSearch;\n\t\tvar features = settings.aanFeatures;\n\t\tvar input = '<input type=\"search\" class=\"'+classes.sFilterInput+'\"/>';\n\t\n\t\tvar str = language.sSearch;\n\t\tstr = str.match(/_INPUT_/) ?\n\t\t\tstr.replace('_INPUT_', input) :\n\t\t\tstr+input;\n\t\n\t\tvar filter = $('<div/>', {\n\t\t\t\t'id': ! features.f ? tableId+'_filter' : null,\n\t\t\t\t'class': classes.sFilter\n\t\t\t} )\n\t\t\t.append( $('<label/>' ).append( str ) );\n\t\n\t\tvar searchFn = function() {\n\t\t\t/* Update all other filter input elements for the new display */\n\t\t\tvar n = features.f;\n\t\t\tvar val = !this.value ? \"\" : this.value; // mental IE8 fix :-(\n\t\n\t\t\t/* Now do the filter */\n\t\t\tif ( val != previousSearch.sSearch ) {\n\t\t\t\t_fnFilterComplete( settings, {\n\t\t\t\t\t\"sSearch\": val,\n\t\t\t\t\t\"bRegex\": previousSearch.bRegex,\n\t\t\t\t\t\"bSmart\": previousSearch.bSmart ,\n\t\t\t\t\t\"bCaseInsensitive\": previousSearch.bCaseInsensitive\n\t\t\t\t} );\n\t\n\t\t\t\t// Need to redraw, without resorting\n\t\t\t\tsettings._iDisplayStart = 0;\n\t\t\t\t_fnDraw( settings );\n\t\t\t}\n\t\t};\n\t\n\t\tvar searchDelay = settings.searchDelay !== null ?\n\t\t\tsettings.searchDelay :\n\t\t\t_fnDataSource( settings ) === 'ssp' ?\n\t\t\t\t400 :\n\t\t\t\t0;\n\t\n\t\tvar jqFilter = $('input', filter)\n\t\t\t.val( previousSearch.sSearch )\n\t\t\t.attr( 'placeholder', language.sSearchPlaceholder )\n\t\t\t.on(\n\t\t\t\t'keyup.DT search.DT input.DT paste.DT cut.DT',\n\t\t\t\tsearchDelay ?\n\t\t\t\t\t_fnThrottle( searchFn, searchDelay ) :\n\t\t\t\t\tsearchFn\n\t\t\t)\n\t\t\t.on( 'keypress.DT', function(e) {\n\t\t\t\t/* Prevent form submission */\n\t\t\t\tif ( e.keyCode == 13 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} )\n\t\t\t.attr('aria-controls', tableId);\n\t\n\t\t// Update the input elements whenever the table is filtered\n\t\t$(settings.nTable).on( 'search.dt.DT', function ( ev, s ) {\n\t\t\tif ( settings === s ) {\n\t\t\t\t// IE9 throws an 'unknown error' if document.activeElement is used\n\t\t\t\t// inside an iframe or frame...\n\t\t\t\ttry {\n\t\t\t\t\tif ( jqFilter[0] !== document.activeElement ) {\n\t\t\t\t\t\tjqFilter.val( previousSearch.sSearch );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcatch ( e ) {}\n\t\t\t}\n\t\t} );\n\t\n\t\treturn filter[0];\n\t}\n\t\n\t\n\t/**\n\t * Filter the table using both the global filter and column based filtering\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {object} oSearch search information\n\t *  @param {int} [iForce] force a research of the master array (1) or not (undefined or 0)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilterComplete ( oSettings, oInput, iForce )\n\t{\n\t\tvar oPrevSearch = oSettings.oPreviousSearch;\n\t\tvar aoPrevSearch = oSettings.aoPreSearchCols;\n\t\tvar fnSaveFilter = function ( oFilter ) {\n\t\t\t/* Save the filtering values */\n\t\t\toPrevSearch.sSearch = oFilter.sSearch;\n\t\t\toPrevSearch.bRegex = oFilter.bRegex;\n\t\t\toPrevSearch.bSmart = oFilter.bSmart;\n\t\t\toPrevSearch.bCaseInsensitive = oFilter.bCaseInsensitive;\n\t\t};\n\t\tvar fnRegex = function ( o ) {\n\t\t\t// Backwards compatibility with the bEscapeRegex option\n\t\t\treturn o.bEscapeRegex !== undefined ? !o.bEscapeRegex : o.bRegex;\n\t\t};\n\t\n\t\t// Resolve any column types that are unknown due to addition or invalidation\n\t\t// @todo As per sort - can this be moved into an event handler?\n\t\t_fnColumnTypes( oSettings );\n\t\n\t\t/* In server-side processing all filtering is done by the server, so no point hanging around here */\n\t\tif ( _fnDataSource( oSettings ) != 'ssp' )\n\t\t{\n\t\t\t/* Global filter */\n\t\t\t_fnFilter( oSettings, oInput.sSearch, iForce, fnRegex(oInput), oInput.bSmart, oInput.bCaseInsensitive );\n\t\t\tfnSaveFilter( oInput );\n\t\n\t\t\t/* Now do the individual column filter */\n\t\t\tfor ( var i=0 ; i<aoPrevSearch.length ; i++ )\n\t\t\t{\n\t\t\t\t_fnFilterColumn( oSettings, aoPrevSearch[i].sSearch, i, fnRegex(aoPrevSearch[i]),\n\t\t\t\t\taoPrevSearch[i].bSmart, aoPrevSearch[i].bCaseInsensitive );\n\t\t\t}\n\t\n\t\t\t/* Custom filtering */\n\t\t\t_fnFilterCustom( oSettings );\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfnSaveFilter( oInput );\n\t\t}\n\t\n\t\t/* Tell the draw function we have been filtering */\n\t\toSettings.bFiltered = true;\n\t\t_fnCallbackFire( oSettings, null, 'search', [oSettings] );\n\t}\n\t\n\t\n\t/**\n\t * Apply custom filtering functions\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilterCustom( settings )\n\t{\n\t\tvar filters = DataTable.ext.search;\n\t\tvar displayRows = settings.aiDisplay;\n\t\tvar row, rowIdx;\n\t\n\t\tfor ( var i=0, ien=filters.length ; i<ien ; i++ ) {\n\t\t\tvar rows = [];\n\t\n\t\t\t// Loop over each row and see if it should be included\n\t\t\tfor ( var j=0, jen=displayRows.length ; j<jen ; j++ ) {\n\t\t\t\trowIdx = displayRows[ j ];\n\t\t\t\trow = settings.aoData[ rowIdx ];\n\t\n\t\t\t\tif ( filters[i]( settings, row._aFilterData, rowIdx, row._aData, j ) ) {\n\t\t\t\t\trows.push( rowIdx );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// So the array reference doesn't break set the results into the\n\t\t\t// existing array\n\t\t\tdisplayRows.length = 0;\n\t\t\t$.merge( displayRows, rows );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Filter the table on a per-column basis\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {string} sInput string to filter on\n\t *  @param {int} iColumn column to filter\n\t *  @param {bool} bRegex treat search string as a regular expression or not\n\t *  @param {bool} bSmart use smart filtering or not\n\t *  @param {bool} bCaseInsensitive Do case insenstive matching or not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilterColumn ( settings, searchStr, colIdx, regex, smart, caseInsensitive )\n\t{\n\t\tif ( searchStr === '' ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar data;\n\t\tvar out = [];\n\t\tvar display = settings.aiDisplay;\n\t\tvar rpSearch = _fnFilterCreateSearch( searchStr, regex, smart, caseInsensitive );\n\t\n\t\tfor ( var i=0 ; i<display.length ; i++ ) {\n\t\t\tdata = settings.aoData[ display[i] ]._aFilterData[ colIdx ];\n\t\n\t\t\tif ( rpSearch.test( data ) ) {\n\t\t\t\tout.push( display[i] );\n\t\t\t}\n\t\t}\n\t\n\t\tsettings.aiDisplay = out;\n\t}\n\t\n\t\n\t/**\n\t * Filter the data table based on user input and draw the table\n\t *  @param {object} settings dataTables settings object\n\t *  @param {string} input string to filter on\n\t *  @param {int} force optional - force a research of the master array (1) or not (undefined or 0)\n\t *  @param {bool} regex treat as a regular expression or not\n\t *  @param {bool} smart perform smart filtering or not\n\t *  @param {bool} caseInsensitive Do case insenstive matching or not\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilter( settings, input, force, regex, smart, caseInsensitive )\n\t{\n\t\tvar rpSearch = _fnFilterCreateSearch( input, regex, smart, caseInsensitive );\n\t\tvar prevSearch = settings.oPreviousSearch.sSearch;\n\t\tvar displayMaster = settings.aiDisplayMaster;\n\t\tvar display, invalidated, i;\n\t\tvar filtered = [];\n\t\n\t\t// Need to take account of custom filtering functions - always filter\n\t\tif ( DataTable.ext.search.length !== 0 ) {\n\t\t\tforce = true;\n\t\t}\n\t\n\t\t// Check if any of the rows were invalidated\n\t\tinvalidated = _fnFilterData( settings );\n\t\n\t\t// If the input is blank - we just want the full data set\n\t\tif ( input.length <= 0 ) {\n\t\t\tsettings.aiDisplay = displayMaster.slice();\n\t\t}\n\t\telse {\n\t\t\t// New search - start from the master array\n\t\t\tif ( invalidated ||\n\t\t\t\t force ||\n\t\t\t\t prevSearch.length > input.length ||\n\t\t\t\t input.indexOf(prevSearch) !== 0 ||\n\t\t\t\t settings.bSorted // On resort, the display master needs to be\n\t\t\t\t                  // re-filtered since indexes will have changed\n\t\t\t) {\n\t\t\t\tsettings.aiDisplay = displayMaster.slice();\n\t\t\t}\n\t\n\t\t\t// Search the display array\n\t\t\tdisplay = settings.aiDisplay;\n\t\n\t\t\tfor ( i=0 ; i<display.length ; i++ ) {\n\t\t\t\tif ( rpSearch.test( settings.aoData[ display[i] ]._sFilterRow ) ) {\n\t\t\t\t\tfiltered.push( display[i] );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tsettings.aiDisplay = filtered;\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Build a regular expression object suitable for searching a table\n\t *  @param {string} sSearch string to search for\n\t *  @param {bool} bRegex treat as a regular expression or not\n\t *  @param {bool} bSmart perform smart filtering or not\n\t *  @param {bool} bCaseInsensitive Do case insensitive matching or not\n\t *  @returns {RegExp} constructed object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFilterCreateSearch( search, regex, smart, caseInsensitive )\n\t{\n\t\tsearch = regex ?\n\t\t\tsearch :\n\t\t\t_fnEscapeRegex( search );\n\t\t\n\t\tif ( smart ) {\n\t\t\t/* For smart filtering we want to allow the search to work regardless of\n\t\t\t * word order. We also want double quoted text to be preserved, so word\n\t\t\t * order is important - a la google. So this is what we want to\n\t\t\t * generate:\n\t\t\t * \n\t\t\t * ^(?=.*?\\bone\\b)(?=.*?\\btwo three\\b)(?=.*?\\bfour\\b).*$\n\t\t\t */\n\t\t\tvar a = $.map( search.match( /\"[^\"]+\"|[^ ]+/g ) || [''], function ( word ) {\n\t\t\t\tif ( word.charAt(0) === '\"' ) {\n\t\t\t\t\tvar m = word.match( /^\"(.*)\"$/ );\n\t\t\t\t\tword = m ? m[1] : word;\n\t\t\t\t}\n\t\n\t\t\t\treturn word.replace('\"', '');\n\t\t\t} );\n\t\n\t\t\tsearch = '^(?=.*?'+a.join( ')(?=.*?' )+').*$';\n\t\t}\n\t\n\t\treturn new RegExp( search, caseInsensitive ? 'i' : '' );\n\t}\n\t\n\t\n\t/**\n\t * Escape a string such that it can be used in a regular expression\n\t *  @param {string} sVal string to escape\n\t *  @returns {string} escaped string\n\t *  @memberof DataTable#oApi\n\t */\n\tvar _fnEscapeRegex = DataTable.util.escapeRegex;\n\t\n\tvar __filter_div = $('<div>')[0];\n\tvar __filter_div_textContent = __filter_div.textContent !== undefined;\n\t\n\t// Update the filtering data for each row if needed (by invalidation or first run)\n\tfunction _fnFilterData ( settings )\n\t{\n\t\tvar columns = settings.aoColumns;\n\t\tvar column;\n\t\tvar i, j, ien, jen, filterData, cellData, row;\n\t\tvar fomatters = DataTable.ext.type.search;\n\t\tvar wasInvalidated = false;\n\t\n\t\tfor ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\trow = settings.aoData[i];\n\t\n\t\t\tif ( ! row._aFilterData ) {\n\t\t\t\tfilterData = [];\n\t\n\t\t\t\tfor ( j=0, jen=columns.length ; j<jen ; j++ ) {\n\t\t\t\t\tcolumn = columns[j];\n\t\n\t\t\t\t\tif ( column.bSearchable ) {\n\t\t\t\t\t\tcellData = _fnGetCellData( settings, i, j, 'filter' );\n\t\n\t\t\t\t\t\tif ( fomatters[ column.sType ] ) {\n\t\t\t\t\t\t\tcellData = fomatters[ column.sType ]( cellData );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Search in DataTables 1.10 is string based. In 1.11 this\n\t\t\t\t\t\t// should be altered to also allow strict type checking.\n\t\t\t\t\t\tif ( cellData === null ) {\n\t\t\t\t\t\t\tcellData = '';\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif ( typeof cellData !== 'string' && cellData.toString ) {\n\t\t\t\t\t\t\tcellData = cellData.toString();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tcellData = '';\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// If it looks like there is an HTML entity in the string,\n\t\t\t\t\t// attempt to decode it so sorting works as expected. Note that\n\t\t\t\t\t// we could use a single line of jQuery to do this, but the DOM\n\t\t\t\t\t// method used here is much faster http://jsperf.com/html-decode\n\t\t\t\t\tif ( cellData.indexOf && cellData.indexOf('&') !== -1 ) {\n\t\t\t\t\t\t__filter_div.innerHTML = cellData;\n\t\t\t\t\t\tcellData = __filter_div_textContent ?\n\t\t\t\t\t\t\t__filter_div.textContent :\n\t\t\t\t\t\t\t__filter_div.innerText;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif ( cellData.replace ) {\n\t\t\t\t\t\tcellData = cellData.replace(/[\\r\\n]/g, '');\n\t\t\t\t\t}\n\t\n\t\t\t\t\tfilterData.push( cellData );\n\t\t\t\t}\n\t\n\t\t\t\trow._aFilterData = filterData;\n\t\t\t\trow._sFilterRow = filterData.join('  ');\n\t\t\t\twasInvalidated = true;\n\t\t\t}\n\t\t}\n\t\n\t\treturn wasInvalidated;\n\t}\n\t\n\t\n\t/**\n\t * Convert from the internal Hungarian notation to camelCase for external\n\t * interaction\n\t *  @param {object} obj Object to convert\n\t *  @returns {object} Inverted object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSearchToCamel ( obj )\n\t{\n\t\treturn {\n\t\t\tsearch:          obj.sSearch,\n\t\t\tsmart:           obj.bSmart,\n\t\t\tregex:           obj.bRegex,\n\t\t\tcaseInsensitive: obj.bCaseInsensitive\n\t\t};\n\t}\n\t\n\t\n\t\n\t/**\n\t * Convert from camelCase notation to the internal Hungarian. We could use the\n\t * Hungarian convert function here, but this is cleaner\n\t *  @param {object} obj Object to convert\n\t *  @returns {object} Inverted object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSearchToHung ( obj )\n\t{\n\t\treturn {\n\t\t\tsSearch:          obj.search,\n\t\t\tbSmart:           obj.smart,\n\t\t\tbRegex:           obj.regex,\n\t\t\tbCaseInsensitive: obj.caseInsensitive\n\t\t};\n\t}\n\t\n\t/**\n\t * Generate the node required for the info display\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {node} Information element\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlInfo ( settings )\n\t{\n\t\tvar\n\t\t\ttid = settings.sTableId,\n\t\t\tnodes = settings.aanFeatures.i,\n\t\t\tn = $('<div/>', {\n\t\t\t\t'class': settings.oClasses.sInfo,\n\t\t\t\t'id': ! nodes ? tid+'_info' : null\n\t\t\t} );\n\t\n\t\tif ( ! nodes ) {\n\t\t\t// Update display on each draw\n\t\t\tsettings.aoDrawCallback.push( {\n\t\t\t\t\"fn\": _fnUpdateInfo,\n\t\t\t\t\"sName\": \"information\"\n\t\t\t} );\n\t\n\t\t\tn\n\t\t\t\t.attr( 'role', 'status' )\n\t\t\t\t.attr( 'aria-live', 'polite' );\n\t\n\t\t\t// Table is described by our info div\n\t\t\t$(settings.nTable).attr( 'aria-describedby', tid+'_info' );\n\t\t}\n\t\n\t\treturn n[0];\n\t}\n\t\n\t\n\t/**\n\t * Update the information elements in the display\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnUpdateInfo ( settings )\n\t{\n\t\t/* Show information about the table */\n\t\tvar nodes = settings.aanFeatures.i;\n\t\tif ( nodes.length === 0 ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar\n\t\t\tlang  = settings.oLanguage,\n\t\t\tstart = settings._iDisplayStart+1,\n\t\t\tend   = settings.fnDisplayEnd(),\n\t\t\tmax   = settings.fnRecordsTotal(),\n\t\t\ttotal = settings.fnRecordsDisplay(),\n\t\t\tout   = total ?\n\t\t\t\tlang.sInfo :\n\t\t\t\tlang.sInfoEmpty;\n\t\n\t\tif ( total !== max ) {\n\t\t\t/* Record set after filtering */\n\t\t\tout += ' ' + lang.sInfoFiltered;\n\t\t}\n\t\n\t\t// Convert the macros\n\t\tout += lang.sInfoPostFix;\n\t\tout = _fnInfoMacros( settings, out );\n\t\n\t\tvar callback = lang.fnInfoCallback;\n\t\tif ( callback !== null ) {\n\t\t\tout = callback.call( settings.oInstance,\n\t\t\t\tsettings, start, end, max, total, out\n\t\t\t);\n\t\t}\n\t\n\t\t$(nodes).html( out );\n\t}\n\t\n\t\n\tfunction _fnInfoMacros ( settings, str )\n\t{\n\t\t// When infinite scrolling, we are always starting at 1. _iDisplayStart is used only\n\t\t// internally\n\t\tvar\n\t\t\tformatter  = settings.fnFormatNumber,\n\t\t\tstart      = settings._iDisplayStart+1,\n\t\t\tlen        = settings._iDisplayLength,\n\t\t\tvis        = settings.fnRecordsDisplay(),\n\t\t\tall        = len === -1;\n\t\n\t\treturn str.\n\t\t\treplace(/_START_/g, formatter.call( settings, start ) ).\n\t\t\treplace(/_END_/g,   formatter.call( settings, settings.fnDisplayEnd() ) ).\n\t\t\treplace(/_MAX_/g,   formatter.call( settings, settings.fnRecordsTotal() ) ).\n\t\t\treplace(/_TOTAL_/g, formatter.call( settings, vis ) ).\n\t\t\treplace(/_PAGE_/g,  formatter.call( settings, all ? 1 : Math.ceil( start / len ) ) ).\n\t\t\treplace(/_PAGES_/g, formatter.call( settings, all ? 1 : Math.ceil( vis / len ) ) );\n\t}\n\t\n\t\n\t\n\t/**\n\t * Draw the table for the first time, adding all required features\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnInitialise ( settings )\n\t{\n\t\tvar i, iLen, iAjaxStart=settings.iInitDisplayStart;\n\t\tvar columns = settings.aoColumns, column;\n\t\tvar features = settings.oFeatures;\n\t\tvar deferLoading = settings.bDeferLoading; // value modified by the draw\n\t\n\t\t/* Ensure that the table data is fully initialised */\n\t\tif ( ! settings.bInitialised ) {\n\t\t\tsetTimeout( function(){ _fnInitialise( settings ); }, 200 );\n\t\t\treturn;\n\t\t}\n\t\n\t\t/* Show the display HTML options */\n\t\t_fnAddOptionsHtml( settings );\n\t\n\t\t/* Build and draw the header / footer for the table */\n\t\t_fnBuildHead( settings );\n\t\t_fnDrawHead( settings, settings.aoHeader );\n\t\t_fnDrawHead( settings, settings.aoFooter );\n\t\n\t\t/* Okay to show that something is going on now */\n\t\t_fnProcessingDisplay( settings, true );\n\t\n\t\t/* Calculate sizes for columns */\n\t\tif ( features.bAutoWidth ) {\n\t\t\t_fnCalculateColumnWidths( settings );\n\t\t}\n\t\n\t\tfor ( i=0, iLen=columns.length ; i<iLen ; i++ ) {\n\t\t\tcolumn = columns[i];\n\t\n\t\t\tif ( column.sWidth ) {\n\t\t\t\tcolumn.nTh.style.width = _fnStringToCss( column.sWidth );\n\t\t\t}\n\t\t}\n\t\n\t\t_fnCallbackFire( settings, null, 'preInit', [settings] );\n\t\n\t\t// If there is default sorting required - let's do it. The sort function\n\t\t// will do the drawing for us. Otherwise we draw the table regardless of the\n\t\t// Ajax source - this allows the table to look initialised for Ajax sourcing\n\t\t// data (show 'loading' message possibly)\n\t\t_fnReDraw( settings );\n\t\n\t\t// Server-side processing init complete is done by _fnAjaxUpdateDraw\n\t\tvar dataSrc = _fnDataSource( settings );\n\t\tif ( dataSrc != 'ssp' || deferLoading ) {\n\t\t\t// if there is an ajax source load the data\n\t\t\tif ( dataSrc == 'ajax' ) {\n\t\t\t\t_fnBuildAjax( settings, [], function(json) {\n\t\t\t\t\tvar aData = _fnAjaxDataSrc( settings, json );\n\t\n\t\t\t\t\t// Got the data - add it to the table\n\t\t\t\t\tfor ( i=0 ; i<aData.length ; i++ ) {\n\t\t\t\t\t\t_fnAddData( settings, aData[i] );\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Reset the init display for cookie saving. We've already done\n\t\t\t\t\t// a filter, and therefore cleared it before. So we need to make\n\t\t\t\t\t// it appear 'fresh'\n\t\t\t\t\tsettings.iInitDisplayStart = iAjaxStart;\n\t\n\t\t\t\t\t_fnReDraw( settings );\n\t\n\t\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t\t\t_fnInitComplete( settings, json );\n\t\t\t\t}, settings );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t\t_fnInitComplete( settings );\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Draw the table for the first time, adding all required features\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {object} [json] JSON from the server that completed the table, if using Ajax source\n\t *    with client-side processing (optional)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnInitComplete ( settings, json )\n\t{\n\t\tsettings._bInitComplete = true;\n\t\n\t\t// When data was added after the initialisation (data or Ajax) we need to\n\t\t// calculate the column sizing\n\t\tif ( json || settings.oInit.aaData ) {\n\t\t\t_fnAdjustColumnSizing( settings );\n\t\t}\n\t\n\t\t_fnCallbackFire( settings, null, 'plugin-init', [settings, json] );\n\t\t_fnCallbackFire( settings, 'aoInitComplete', 'init', [settings, json] );\n\t}\n\t\n\t\n\tfunction _fnLengthChange ( settings, val )\n\t{\n\t\tvar len = parseInt( val, 10 );\n\t\tsettings._iDisplayLength = len;\n\t\n\t\t_fnLengthOverflow( settings );\n\t\n\t\t// Fire length change event\n\t\t_fnCallbackFire( settings, null, 'length', [settings, len] );\n\t}\n\t\n\t\n\t/**\n\t * Generate the node required for user display length changing\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {node} Display length feature node\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlLength ( settings )\n\t{\n\t\tvar\n\t\t\tclasses  = settings.oClasses,\n\t\t\ttableId  = settings.sTableId,\n\t\t\tmenu     = settings.aLengthMenu,\n\t\t\td2       = $.isArray( menu[0] ),\n\t\t\tlengths  = d2 ? menu[0] : menu,\n\t\t\tlanguage = d2 ? menu[1] : menu;\n\t\n\t\tvar select = $('<select/>', {\n\t\t\t'name':          tableId+'_length',\n\t\t\t'aria-controls': tableId,\n\t\t\t'class':         classes.sLengthSelect\n\t\t} );\n\t\n\t\tfor ( var i=0, ien=lengths.length ; i<ien ; i++ ) {\n\t\t\tselect[0][ i ] = new Option(\n\t\t\t\ttypeof language[i] === 'number' ?\n\t\t\t\t\tsettings.fnFormatNumber( language[i] ) :\n\t\t\t\t\tlanguage[i],\n\t\t\t\tlengths[i]\n\t\t\t);\n\t\t}\n\t\n\t\tvar div = $('<div><label/></div>').addClass( classes.sLength );\n\t\tif ( ! settings.aanFeatures.l ) {\n\t\t\tdiv[0].id = tableId+'_length';\n\t\t}\n\t\n\t\tdiv.children().append(\n\t\t\tsettings.oLanguage.sLengthMenu.replace( '_MENU_', select[0].outerHTML )\n\t\t);\n\t\n\t\t// Can't use `select` variable as user might provide their own and the\n\t\t// reference is broken by the use of outerHTML\n\t\t$('select', div)\n\t\t\t.val( settings._iDisplayLength )\n\t\t\t.on( 'change.DT', function(e) {\n\t\t\t\t_fnLengthChange( settings, $(this).val() );\n\t\t\t\t_fnDraw( settings );\n\t\t\t} );\n\t\n\t\t// Update node value whenever anything changes the table's length\n\t\t$(settings.nTable).on( 'length.dt.DT', function (e, s, len) {\n\t\t\tif ( settings === s ) {\n\t\t\t\t$('select', div).val( len );\n\t\t\t}\n\t\t} );\n\t\n\t\treturn div[0];\n\t}\n\t\n\t\n\t\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Note that most of the paging logic is done in\n\t * DataTable.ext.pager\n\t */\n\t\n\t/**\n\t * Generate the node required for default pagination\n\t *  @param {object} oSettings dataTables settings object\n\t *  @returns {node} Pagination feature node\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlPaginate ( settings )\n\t{\n\t\tvar\n\t\t\ttype   = settings.sPaginationType,\n\t\t\tplugin = DataTable.ext.pager[ type ],\n\t\t\tmodern = typeof plugin === 'function',\n\t\t\tredraw = function( settings ) {\n\t\t\t\t_fnDraw( settings );\n\t\t\t},\n\t\t\tnode = $('<div/>').addClass( settings.oClasses.sPaging + type )[0],\n\t\t\tfeatures = settings.aanFeatures;\n\t\n\t\tif ( ! modern ) {\n\t\t\tplugin.fnInit( settings, node, redraw );\n\t\t}\n\t\n\t\t/* Add a draw callback for the pagination on first instance, to update the paging display */\n\t\tif ( ! features.p )\n\t\t{\n\t\t\tnode.id = settings.sTableId+'_paginate';\n\t\n\t\t\tsettings.aoDrawCallback.push( {\n\t\t\t\t\"fn\": function( settings ) {\n\t\t\t\t\tif ( modern ) {\n\t\t\t\t\t\tvar\n\t\t\t\t\t\t\tstart      = settings._iDisplayStart,\n\t\t\t\t\t\t\tlen        = settings._iDisplayLength,\n\t\t\t\t\t\t\tvisRecords = settings.fnRecordsDisplay(),\n\t\t\t\t\t\t\tall        = len === -1,\n\t\t\t\t\t\t\tpage = all ? 0 : Math.ceil( start / len ),\n\t\t\t\t\t\t\tpages = all ? 1 : Math.ceil( visRecords / len ),\n\t\t\t\t\t\t\tbuttons = plugin(page, pages),\n\t\t\t\t\t\t\ti, ien;\n\t\n\t\t\t\t\t\tfor ( i=0, ien=features.p.length ; i<ien ; i++ ) {\n\t\t\t\t\t\t\t_fnRenderer( settings, 'pageButton' )(\n\t\t\t\t\t\t\t\tsettings, features.p[i], i, buttons, page, pages\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tplugin.fnUpdate( settings, redraw );\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"sName\": \"pagination\"\n\t\t\t} );\n\t\t}\n\t\n\t\treturn node;\n\t}\n\t\n\t\n\t/**\n\t * Alter the display settings to change the page\n\t *  @param {object} settings DataTables settings object\n\t *  @param {string|int} action Paging action to take: \"first\", \"previous\",\n\t *    \"next\" or \"last\" or page number to jump to (integer)\n\t *  @param [bool] redraw Automatically draw the update or not\n\t *  @returns {bool} true page has changed, false - no change\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnPageChange ( settings, action, redraw )\n\t{\n\t\tvar\n\t\t\tstart     = settings._iDisplayStart,\n\t\t\tlen       = settings._iDisplayLength,\n\t\t\trecords   = settings.fnRecordsDisplay();\n\t\n\t\tif ( records === 0 || len === -1 )\n\t\t{\n\t\t\tstart = 0;\n\t\t}\n\t\telse if ( typeof action === \"number\" )\n\t\t{\n\t\t\tstart = action * len;\n\t\n\t\t\tif ( start > records )\n\t\t\t{\n\t\t\t\tstart = 0;\n\t\t\t}\n\t\t}\n\t\telse if ( action == \"first\" )\n\t\t{\n\t\t\tstart = 0;\n\t\t}\n\t\telse if ( action == \"previous\" )\n\t\t{\n\t\t\tstart = len >= 0 ?\n\t\t\t\tstart - len :\n\t\t\t\t0;\n\t\n\t\t\tif ( start < 0 )\n\t\t\t{\n\t\t\t  start = 0;\n\t\t\t}\n\t\t}\n\t\telse if ( action == \"next\" )\n\t\t{\n\t\t\tif ( start + len < records )\n\t\t\t{\n\t\t\t\tstart += len;\n\t\t\t}\n\t\t}\n\t\telse if ( action == \"last\" )\n\t\t{\n\t\t\tstart = Math.floor( (records-1) / len) * len;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t_fnLog( settings, 0, \"Unknown paging action: \"+action, 5 );\n\t\t}\n\t\n\t\tvar changed = settings._iDisplayStart !== start;\n\t\tsettings._iDisplayStart = start;\n\t\n\t\tif ( changed ) {\n\t\t\t_fnCallbackFire( settings, null, 'page', [settings] );\n\t\n\t\t\tif ( redraw ) {\n\t\t\t\t_fnDraw( settings );\n\t\t\t}\n\t\t}\n\t\n\t\treturn changed;\n\t}\n\t\n\t\n\t\n\t/**\n\t * Generate the node required for the processing node\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {node} Processing element\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlProcessing ( settings )\n\t{\n\t\treturn $('<div/>', {\n\t\t\t\t'id': ! settings.aanFeatures.r ? settings.sTableId+'_processing' : null,\n\t\t\t\t'class': settings.oClasses.sProcessing\n\t\t\t} )\n\t\t\t.html( settings.oLanguage.sProcessing )\n\t\t\t.insertBefore( settings.nTable )[0];\n\t}\n\t\n\t\n\t/**\n\t * Display or hide the processing indicator\n\t *  @param {object} settings dataTables settings object\n\t *  @param {bool} show Show the processing indicator (true) or not (false)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnProcessingDisplay ( settings, show )\n\t{\n\t\tif ( settings.oFeatures.bProcessing ) {\n\t\t\t$(settings.aanFeatures.r).css( 'display', show ? 'block' : 'none' );\n\t\t}\n\t\n\t\t_fnCallbackFire( settings, null, 'processing', [settings, show] );\n\t}\n\t\n\t/**\n\t * Add any control elements for the table - specifically scrolling\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {node} Node to add to the DOM\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnFeatureHtmlTable ( settings )\n\t{\n\t\tvar table = $(settings.nTable);\n\t\n\t\t// Add the ARIA grid role to the table\n\t\ttable.attr( 'role', 'grid' );\n\t\n\t\t// Scrolling from here on in\n\t\tvar scroll = settings.oScroll;\n\t\n\t\tif ( scroll.sX === '' && scroll.sY === '' ) {\n\t\t\treturn settings.nTable;\n\t\t}\n\t\n\t\tvar scrollX = scroll.sX;\n\t\tvar scrollY = scroll.sY;\n\t\tvar classes = settings.oClasses;\n\t\tvar caption = table.children('caption');\n\t\tvar captionSide = caption.length ? caption[0]._captionSide : null;\n\t\tvar headerClone = $( table[0].cloneNode(false) );\n\t\tvar footerClone = $( table[0].cloneNode(false) );\n\t\tvar footer = table.children('tfoot');\n\t\tvar _div = '<div/>';\n\t\tvar size = function ( s ) {\n\t\t\treturn !s ? null : _fnStringToCss( s );\n\t\t};\n\t\n\t\tif ( ! footer.length ) {\n\t\t\tfooter = null;\n\t\t}\n\t\n\t\t/*\n\t\t * The HTML structure that we want to generate in this function is:\n\t\t *  div - scroller\n\t\t *    div - scroll head\n\t\t *      div - scroll head inner\n\t\t *        table - scroll head table\n\t\t *          thead - thead\n\t\t *    div - scroll body\n\t\t *      table - table (master table)\n\t\t *        thead - thead clone for sizing\n\t\t *        tbody - tbody\n\t\t *    div - scroll foot\n\t\t *      div - scroll foot inner\n\t\t *        table - scroll foot table\n\t\t *          tfoot - tfoot\n\t\t */\n\t\tvar scroller = $( _div, { 'class': classes.sScrollWrapper } )\n\t\t\t.append(\n\t\t\t\t$(_div, { 'class': classes.sScrollHead } )\n\t\t\t\t\t.css( {\n\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\tposition: 'relative',\n\t\t\t\t\t\tborder: 0,\n\t\t\t\t\t\twidth: scrollX ? size(scrollX) : '100%'\n\t\t\t\t\t} )\n\t\t\t\t\t.append(\n\t\t\t\t\t\t$(_div, { 'class': classes.sScrollHeadInner } )\n\t\t\t\t\t\t\t.css( {\n\t\t\t\t\t\t\t\t'box-sizing': 'content-box',\n\t\t\t\t\t\t\t\twidth: scroll.sXInner || '100%'\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\theaderClone\n\t\t\t\t\t\t\t\t\t.removeAttr('id')\n\t\t\t\t\t\t\t\t\t.css( 'margin-left', 0 )\n\t\t\t\t\t\t\t\t\t.append( captionSide === 'top' ? caption : null )\n\t\t\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t\t\ttable.children('thead')\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t)\n\t\t\t.append(\n\t\t\t\t$(_div, { 'class': classes.sScrollBody } )\n\t\t\t\t\t.css( {\n\t\t\t\t\t\tposition: 'relative',\n\t\t\t\t\t\toverflow: 'auto',\n\t\t\t\t\t\twidth: size( scrollX )\n\t\t\t\t\t} )\n\t\t\t\t\t.append( table )\n\t\t\t);\n\t\n\t\tif ( footer ) {\n\t\t\tscroller.append(\n\t\t\t\t$(_div, { 'class': classes.sScrollFoot } )\n\t\t\t\t\t.css( {\n\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\tborder: 0,\n\t\t\t\t\t\twidth: scrollX ? size(scrollX) : '100%'\n\t\t\t\t\t} )\n\t\t\t\t\t.append(\n\t\t\t\t\t\t$(_div, { 'class': classes.sScrollFootInner } )\n\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\tfooterClone\n\t\t\t\t\t\t\t\t\t.removeAttr('id')\n\t\t\t\t\t\t\t\t\t.css( 'margin-left', 0 )\n\t\t\t\t\t\t\t\t\t.append( captionSide === 'bottom' ? caption : null )\n\t\t\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t\t\ttable.children('tfoot')\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t);\n\t\t}\n\t\n\t\tvar children = scroller.children();\n\t\tvar scrollHead = children[0];\n\t\tvar scrollBody = children[1];\n\t\tvar scrollFoot = footer ? children[2] : null;\n\t\n\t\t// When the body is scrolled, then we also want to scroll the headers\n\t\tif ( scrollX ) {\n\t\t\t$(scrollBody).on( 'scroll.DT', function (e) {\n\t\t\t\tvar scrollLeft = this.scrollLeft;\n\t\n\t\t\t\tscrollHead.scrollLeft = scrollLeft;\n\t\n\t\t\t\tif ( footer ) {\n\t\t\t\t\tscrollFoot.scrollLeft = scrollLeft;\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t\n\t\t$(scrollBody).css(\n\t\t\tscrollY && scroll.bCollapse ? 'max-height' : 'height', \n\t\t\tscrollY\n\t\t);\n\t\n\t\tsettings.nScrollHead = scrollHead;\n\t\tsettings.nScrollBody = scrollBody;\n\t\tsettings.nScrollFoot = scrollFoot;\n\t\n\t\t// On redraw - align columns\n\t\tsettings.aoDrawCallback.push( {\n\t\t\t\"fn\": _fnScrollDraw,\n\t\t\t\"sName\": \"scrolling\"\n\t\t} );\n\t\n\t\treturn scroller[0];\n\t}\n\t\n\t\n\t\n\t/**\n\t * Update the header, footer and body tables for resizing - i.e. column\n\t * alignment.\n\t *\n\t * Welcome to the most horrible function DataTables. The process that this\n\t * function follows is basically:\n\t *   1. Re-create the table inside the scrolling div\n\t *   2. Take live measurements from the DOM\n\t *   3. Apply the measurements to align the columns\n\t *   4. Clean up\n\t *\n\t *  @param {object} settings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnScrollDraw ( settings )\n\t{\n\t\t// Given that this is such a monster function, a lot of variables are use\n\t\t// to try and keep the minimised size as small as possible\n\t\tvar\n\t\t\tscroll         = settings.oScroll,\n\t\t\tscrollX        = scroll.sX,\n\t\t\tscrollXInner   = scroll.sXInner,\n\t\t\tscrollY        = scroll.sY,\n\t\t\tbarWidth       = scroll.iBarWidth,\n\t\t\tdivHeader      = $(settings.nScrollHead),\n\t\t\tdivHeaderStyle = divHeader[0].style,\n\t\t\tdivHeaderInner = divHeader.children('div'),\n\t\t\tdivHeaderInnerStyle = divHeaderInner[0].style,\n\t\t\tdivHeaderTable = divHeaderInner.children('table'),\n\t\t\tdivBodyEl      = settings.nScrollBody,\n\t\t\tdivBody        = $(divBodyEl),\n\t\t\tdivBodyStyle   = divBodyEl.style,\n\t\t\tdivFooter      = $(settings.nScrollFoot),\n\t\t\tdivFooterInner = divFooter.children('div'),\n\t\t\tdivFooterTable = divFooterInner.children('table'),\n\t\t\theader         = $(settings.nTHead),\n\t\t\ttable          = $(settings.nTable),\n\t\t\ttableEl        = table[0],\n\t\t\ttableStyle     = tableEl.style,\n\t\t\tfooter         = settings.nTFoot ? $(settings.nTFoot) : null,\n\t\t\tbrowser        = settings.oBrowser,\n\t\t\tie67           = browser.bScrollOversize,\n\t\t\tdtHeaderCells  = _pluck( settings.aoColumns, 'nTh' ),\n\t\t\theaderTrgEls, footerTrgEls,\n\t\t\theaderSrcEls, footerSrcEls,\n\t\t\theaderCopy, footerCopy,\n\t\t\theaderWidths=[], footerWidths=[],\n\t\t\theaderContent=[], footerContent=[],\n\t\t\tidx, correction, sanityWidth,\n\t\t\tzeroOut = function(nSizer) {\n\t\t\t\tvar style = nSizer.style;\n\t\t\t\tstyle.paddingTop = \"0\";\n\t\t\t\tstyle.paddingBottom = \"0\";\n\t\t\t\tstyle.borderTopWidth = \"0\";\n\t\t\t\tstyle.borderBottomWidth = \"0\";\n\t\t\t\tstyle.height = 0;\n\t\t\t};\n\t\n\t\t// If the scrollbar visibility has changed from the last draw, we need to\n\t\t// adjust the column sizes as the table width will have changed to account\n\t\t// for the scrollbar\n\t\tvar scrollBarVis = divBodyEl.scrollHeight > divBodyEl.clientHeight;\n\t\t\n\t\tif ( settings.scrollBarVis !== scrollBarVis && settings.scrollBarVis !== undefined ) {\n\t\t\tsettings.scrollBarVis = scrollBarVis;\n\t\t\t_fnAdjustColumnSizing( settings );\n\t\t\treturn; // adjust column sizing will call this function again\n\t\t}\n\t\telse {\n\t\t\tsettings.scrollBarVis = scrollBarVis;\n\t\t}\n\t\n\t\t/*\n\t\t * 1. Re-create the table inside the scrolling div\n\t\t */\n\t\n\t\t// Remove the old minimised thead and tfoot elements in the inner table\n\t\ttable.children('thead, tfoot').remove();\n\t\n\t\tif ( footer ) {\n\t\t\tfooterCopy = footer.clone().prependTo( table );\n\t\t\tfooterTrgEls = footer.find('tr'); // the original tfoot is in its own table and must be sized\n\t\t\tfooterSrcEls = footerCopy.find('tr');\n\t\t}\n\t\n\t\t// Clone the current header and footer elements and then place it into the inner table\n\t\theaderCopy = header.clone().prependTo( table );\n\t\theaderTrgEls = header.find('tr'); // original header is in its own table\n\t\theaderSrcEls = headerCopy.find('tr');\n\t\theaderCopy.find('th, td').removeAttr('tabindex');\n\t\n\t\n\t\t/*\n\t\t * 2. Take live measurements from the DOM - do not alter the DOM itself!\n\t\t */\n\t\n\t\t// Remove old sizing and apply the calculated column widths\n\t\t// Get the unique column headers in the newly created (cloned) header. We want to apply the\n\t\t// calculated sizes to this header\n\t\tif ( ! scrollX )\n\t\t{\n\t\t\tdivBodyStyle.width = '100%';\n\t\t\tdivHeader[0].style.width = '100%';\n\t\t}\n\t\n\t\t$.each( _fnGetUniqueThs( settings, headerCopy ), function ( i, el ) {\n\t\t\tidx = _fnVisibleToColumnIndex( settings, i );\n\t\t\tel.style.width = settings.aoColumns[idx].sWidth;\n\t\t} );\n\t\n\t\tif ( footer ) {\n\t\t\t_fnApplyToChildren( function(n) {\n\t\t\t\tn.style.width = \"\";\n\t\t\t}, footerSrcEls );\n\t\t}\n\t\n\t\t// Size the table as a whole\n\t\tsanityWidth = table.outerWidth();\n\t\tif ( scrollX === \"\" ) {\n\t\t\t// No x scrolling\n\t\t\ttableStyle.width = \"100%\";\n\t\n\t\t\t// IE7 will make the width of the table when 100% include the scrollbar\n\t\t\t// - which is shouldn't. When there is a scrollbar we need to take this\n\t\t\t// into account.\n\t\t\tif ( ie67 && (table.find('tbody').height() > divBodyEl.offsetHeight ||\n\t\t\t\tdivBody.css('overflow-y') == \"scroll\")\n\t\t\t) {\n\t\t\t\ttableStyle.width = _fnStringToCss( table.outerWidth() - barWidth);\n\t\t\t}\n\t\n\t\t\t// Recalculate the sanity width\n\t\t\tsanityWidth = table.outerWidth();\n\t\t}\n\t\telse if ( scrollXInner !== \"\" ) {\n\t\t\t// legacy x scroll inner has been given - use it\n\t\t\ttableStyle.width = _fnStringToCss(scrollXInner);\n\t\n\t\t\t// Recalculate the sanity width\n\t\t\tsanityWidth = table.outerWidth();\n\t\t}\n\t\n\t\t// Hidden header should have zero height, so remove padding and borders. Then\n\t\t// set the width based on the real headers\n\t\n\t\t// Apply all styles in one pass\n\t\t_fnApplyToChildren( zeroOut, headerSrcEls );\n\t\n\t\t// Read all widths in next pass\n\t\t_fnApplyToChildren( function(nSizer) {\n\t\t\theaderContent.push( nSizer.innerHTML );\n\t\t\theaderWidths.push( _fnStringToCss( $(nSizer).css('width') ) );\n\t\t}, headerSrcEls );\n\t\n\t\t// Apply all widths in final pass\n\t\t_fnApplyToChildren( function(nToSize, i) {\n\t\t\t// Only apply widths to the DataTables detected header cells - this\n\t\t\t// prevents complex headers from having contradictory sizes applied\n\t\t\tif ( $.inArray( nToSize, dtHeaderCells ) !== -1 ) {\n\t\t\t\tnToSize.style.width = headerWidths[i];\n\t\t\t}\n\t\t}, headerTrgEls );\n\t\n\t\t$(headerSrcEls).height(0);\n\t\n\t\t/* Same again with the footer if we have one */\n\t\tif ( footer )\n\t\t{\n\t\t\t_fnApplyToChildren( zeroOut, footerSrcEls );\n\t\n\t\t\t_fnApplyToChildren( function(nSizer) {\n\t\t\t\tfooterContent.push( nSizer.innerHTML );\n\t\t\t\tfooterWidths.push( _fnStringToCss( $(nSizer).css('width') ) );\n\t\t\t}, footerSrcEls );\n\t\n\t\t\t_fnApplyToChildren( function(nToSize, i) {\n\t\t\t\tnToSize.style.width = footerWidths[i];\n\t\t\t}, footerTrgEls );\n\t\n\t\t\t$(footerSrcEls).height(0);\n\t\t}\n\t\n\t\n\t\t/*\n\t\t * 3. Apply the measurements\n\t\t */\n\t\n\t\t// \"Hide\" the header and footer that we used for the sizing. We need to keep\n\t\t// the content of the cell so that the width applied to the header and body\n\t\t// both match, but we want to hide it completely. We want to also fix their\n\t\t// width to what they currently are\n\t\t_fnApplyToChildren( function(nSizer, i) {\n\t\t\tnSizer.innerHTML = '<div class=\"dataTables_sizing\">'+headerContent[i]+'</div>';\n\t\t\tnSizer.childNodes[0].style.height = \"0\";\n\t\t\tnSizer.childNodes[0].style.overflow = \"hidden\";\n\t\t\tnSizer.style.width = headerWidths[i];\n\t\t}, headerSrcEls );\n\t\n\t\tif ( footer )\n\t\t{\n\t\t\t_fnApplyToChildren( function(nSizer, i) {\n\t\t\t\tnSizer.innerHTML = '<div class=\"dataTables_sizing\">'+footerContent[i]+'</div>';\n\t\t\t\tnSizer.childNodes[0].style.height = \"0\";\n\t\t\t\tnSizer.childNodes[0].style.overflow = \"hidden\";\n\t\t\t\tnSizer.style.width = footerWidths[i];\n\t\t\t}, footerSrcEls );\n\t\t}\n\t\n\t\t// Sanity check that the table is of a sensible width. If not then we are going to get\n\t\t// misalignment - try to prevent this by not allowing the table to shrink below its min width\n\t\tif ( table.outerWidth() < sanityWidth )\n\t\t{\n\t\t\t// The min width depends upon if we have a vertical scrollbar visible or not */\n\t\t\tcorrection = ((divBodyEl.scrollHeight > divBodyEl.offsetHeight ||\n\t\t\t\tdivBody.css('overflow-y') == \"scroll\")) ?\n\t\t\t\t\tsanityWidth+barWidth :\n\t\t\t\t\tsanityWidth;\n\t\n\t\t\t// IE6/7 are a law unto themselves...\n\t\t\tif ( ie67 && (divBodyEl.scrollHeight >\n\t\t\t\tdivBodyEl.offsetHeight || divBody.css('overflow-y') == \"scroll\")\n\t\t\t) {\n\t\t\t\ttableStyle.width = _fnStringToCss( correction-barWidth );\n\t\t\t}\n\t\n\t\t\t// And give the user a warning that we've stopped the table getting too small\n\t\t\tif ( scrollX === \"\" || scrollXInner !== \"\" ) {\n\t\t\t\t_fnLog( settings, 1, 'Possible column misalignment', 6 );\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcorrection = '100%';\n\t\t}\n\t\n\t\t// Apply to the container elements\n\t\tdivBodyStyle.width = _fnStringToCss( correction );\n\t\tdivHeaderStyle.width = _fnStringToCss( correction );\n\t\n\t\tif ( footer ) {\n\t\t\tsettings.nScrollFoot.style.width = _fnStringToCss( correction );\n\t\t}\n\t\n\t\n\t\t/*\n\t\t * 4. Clean up\n\t\t */\n\t\tif ( ! scrollY ) {\n\t\t\t/* IE7< puts a vertical scrollbar in place (when it shouldn't be) due to subtracting\n\t\t\t * the scrollbar height from the visible display, rather than adding it on. We need to\n\t\t\t * set the height in order to sort this. Don't want to do it in any other browsers.\n\t\t\t */\n\t\t\tif ( ie67 ) {\n\t\t\t\tdivBodyStyle.height = _fnStringToCss( tableEl.offsetHeight+barWidth );\n\t\t\t}\n\t\t}\n\t\n\t\t/* Finally set the width's of the header and footer tables */\n\t\tvar iOuterWidth = table.outerWidth();\n\t\tdivHeaderTable[0].style.width = _fnStringToCss( iOuterWidth );\n\t\tdivHeaderInnerStyle.width = _fnStringToCss( iOuterWidth );\n\t\n\t\t// Figure out if there are scrollbar present - if so then we need a the header and footer to\n\t\t// provide a bit more space to allow \"overflow\" scrolling (i.e. past the scrollbar)\n\t\tvar bScrolling = table.height() > divBodyEl.clientHeight || divBody.css('overflow-y') == \"scroll\";\n\t\tvar padding = 'padding' + (browser.bScrollbarLeft ? 'Left' : 'Right' );\n\t\tdivHeaderInnerStyle[ padding ] = bScrolling ? barWidth+\"px\" : \"0px\";\n\t\n\t\tif ( footer ) {\n\t\t\tdivFooterTable[0].style.width = _fnStringToCss( iOuterWidth );\n\t\t\tdivFooterInner[0].style.width = _fnStringToCss( iOuterWidth );\n\t\t\tdivFooterInner[0].style[padding] = bScrolling ? barWidth+\"px\" : \"0px\";\n\t\t}\n\t\n\t\t// Correct DOM ordering for colgroup - comes before the thead\n\t\ttable.children('colgroup').insertBefore( table.children('thead') );\n\t\n\t\t/* Adjust the position of the header in case we loose the y-scrollbar */\n\t\tdivBody.scroll();\n\t\n\t\t// If sorting or filtering has occurred, jump the scrolling back to the top\n\t\t// only if we aren't holding the position\n\t\tif ( (settings.bSorted || settings.bFiltered) && ! settings._drawHold ) {\n\t\t\tdivBodyEl.scrollTop = 0;\n\t\t}\n\t}\n\t\n\t\n\t\n\t/**\n\t * Apply a given function to the display child nodes of an element array (typically\n\t * TD children of TR rows\n\t *  @param {function} fn Method to apply to the objects\n\t *  @param array {nodes} an1 List of elements to look through for display children\n\t *  @param array {nodes} an2 Another list (identical structure to the first) - optional\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnApplyToChildren( fn, an1, an2 )\n\t{\n\t\tvar index=0, i=0, iLen=an1.length;\n\t\tvar nNode1, nNode2;\n\t\n\t\twhile ( i < iLen ) {\n\t\t\tnNode1 = an1[i].firstChild;\n\t\t\tnNode2 = an2 ? an2[i].firstChild : null;\n\t\n\t\t\twhile ( nNode1 ) {\n\t\t\t\tif ( nNode1.nodeType === 1 ) {\n\t\t\t\t\tif ( an2 ) {\n\t\t\t\t\t\tfn( nNode1, nNode2, index );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfn( nNode1, index );\n\t\t\t\t\t}\n\t\n\t\t\t\t\tindex++;\n\t\t\t\t}\n\t\n\t\t\t\tnNode1 = nNode1.nextSibling;\n\t\t\t\tnNode2 = an2 ? nNode2.nextSibling : null;\n\t\t\t}\n\t\n\t\t\ti++;\n\t\t}\n\t}\n\t\n\t\n\t\n\tvar __re_html_remove = /<.*?>/g;\n\t\n\t\n\t/**\n\t * Calculate the width of columns for the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCalculateColumnWidths ( oSettings )\n\t{\n\t\tvar\n\t\t\ttable = oSettings.nTable,\n\t\t\tcolumns = oSettings.aoColumns,\n\t\t\tscroll = oSettings.oScroll,\n\t\t\tscrollY = scroll.sY,\n\t\t\tscrollX = scroll.sX,\n\t\t\tscrollXInner = scroll.sXInner,\n\t\t\tcolumnCount = columns.length,\n\t\t\tvisibleColumns = _fnGetColumns( oSettings, 'bVisible' ),\n\t\t\theaderCells = $('th', oSettings.nTHead),\n\t\t\ttableWidthAttr = table.getAttribute('width'), // from DOM element\n\t\t\ttableContainer = table.parentNode,\n\t\t\tuserInputs = false,\n\t\t\ti, column, columnIdx, width, outerWidth,\n\t\t\tbrowser = oSettings.oBrowser,\n\t\t\tie67 = browser.bScrollOversize;\n\t\n\t\tvar styleWidth = table.style.width;\n\t\tif ( styleWidth && styleWidth.indexOf('%') !== -1 ) {\n\t\t\ttableWidthAttr = styleWidth;\n\t\t}\n\t\n\t\t/* Convert any user input sizes into pixel sizes */\n\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t\tcolumn = columns[ visibleColumns[i] ];\n\t\n\t\t\tif ( column.sWidth !== null ) {\n\t\t\t\tcolumn.sWidth = _fnConvertToWidth( column.sWidthOrig, tableContainer );\n\t\n\t\t\t\tuserInputs = true;\n\t\t\t}\n\t\t}\n\t\n\t\t/* If the number of columns in the DOM equals the number that we have to\n\t\t * process in DataTables, then we can use the offsets that are created by\n\t\t * the web- browser. No custom sizes can be set in order for this to happen,\n\t\t * nor scrolling used\n\t\t */\n\t\tif ( ie67 || ! userInputs && ! scrollX && ! scrollY &&\n\t\t     columnCount == _fnVisbleColumns( oSettings ) &&\n\t\t     columnCount == headerCells.length\n\t\t) {\n\t\t\tfor ( i=0 ; i<columnCount ; i++ ) {\n\t\t\t\tvar colIdx = _fnVisibleToColumnIndex( oSettings, i );\n\t\n\t\t\t\tif ( colIdx !== null ) {\n\t\t\t\t\tcolumns[ colIdx ].sWidth = _fnStringToCss( headerCells.eq(i).width() );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Otherwise construct a single row, worst case, table with the widest\n\t\t\t// node in the data, assign any user defined widths, then insert it into\n\t\t\t// the DOM and allow the browser to do all the hard work of calculating\n\t\t\t// table widths\n\t\t\tvar tmpTable = $(table).clone() // don't use cloneNode - IE8 will remove events on the main table\n\t\t\t\t.css( 'visibility', 'hidden' )\n\t\t\t\t.removeAttr( 'id' );\n\t\n\t\t\t// Clean up the table body\n\t\t\ttmpTable.find('tbody tr').remove();\n\t\t\tvar tr = $('<tr/>').appendTo( tmpTable.find('tbody') );\n\t\n\t\t\t// Clone the table header and footer - we can't use the header / footer\n\t\t\t// from the cloned table, since if scrolling is active, the table's\n\t\t\t// real header and footer are contained in different table tags\n\t\t\ttmpTable.find('thead, tfoot').remove();\n\t\t\ttmpTable\n\t\t\t\t.append( $(oSettings.nTHead).clone() )\n\t\t\t\t.append( $(oSettings.nTFoot).clone() );\n\t\n\t\t\t// Remove any assigned widths from the footer (from scrolling)\n\t\t\ttmpTable.find('tfoot th, tfoot td').css('width', '');\n\t\n\t\t\t// Apply custom sizing to the cloned header\n\t\t\theaderCells = _fnGetUniqueThs( oSettings, tmpTable.find('thead')[0] );\n\t\n\t\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t\t\tcolumn = columns[ visibleColumns[i] ];\n\t\n\t\t\t\theaderCells[i].style.width = column.sWidthOrig !== null && column.sWidthOrig !== '' ?\n\t\t\t\t\t_fnStringToCss( column.sWidthOrig ) :\n\t\t\t\t\t'';\n\t\n\t\t\t\t// For scrollX we need to force the column width otherwise the\n\t\t\t\t// browser will collapse it. If this width is smaller than the\n\t\t\t\t// width the column requires, then it will have no effect\n\t\t\t\tif ( column.sWidthOrig && scrollX ) {\n\t\t\t\t\t$( headerCells[i] ).append( $('<div/>').css( {\n\t\t\t\t\t\twidth: column.sWidthOrig,\n\t\t\t\t\t\tmargin: 0,\n\t\t\t\t\t\tpadding: 0,\n\t\t\t\t\t\tborder: 0,\n\t\t\t\t\t\theight: 1\n\t\t\t\t\t} ) );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Find the widest cell for each column and put it into the table\n\t\t\tif ( oSettings.aoData.length ) {\n\t\t\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t\t\t\tcolumnIdx = visibleColumns[i];\n\t\t\t\t\tcolumn = columns[ columnIdx ];\n\t\n\t\t\t\t\t$( _fnGetWidestNode( oSettings, columnIdx ) )\n\t\t\t\t\t\t.clone( false )\n\t\t\t\t\t\t.append( column.sContentPadding )\n\t\t\t\t\t\t.appendTo( tr );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Tidy the temporary table - remove name attributes so there aren't\n\t\t\t// duplicated in the dom (radio elements for example)\n\t\t\t$('[name]', tmpTable).removeAttr('name');\n\t\n\t\t\t// Table has been built, attach to the document so we can work with it.\n\t\t\t// A holding element is used, positioned at the top of the container\n\t\t\t// with minimal height, so it has no effect on if the container scrolls\n\t\t\t// or not. Otherwise it might trigger scrolling when it actually isn't\n\t\t\t// needed\n\t\t\tvar holder = $('<div/>').css( scrollX || scrollY ?\n\t\t\t\t\t{\n\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\theight: 1,\n\t\t\t\t\t\tright: 0,\n\t\t\t\t\t\toverflow: 'hidden'\n\t\t\t\t\t} :\n\t\t\t\t\t{}\n\t\t\t\t)\n\t\t\t\t.append( tmpTable )\n\t\t\t\t.appendTo( tableContainer );\n\t\n\t\t\t// When scrolling (X or Y) we want to set the width of the table as \n\t\t\t// appropriate. However, when not scrolling leave the table width as it\n\t\t\t// is. This results in slightly different, but I think correct behaviour\n\t\t\tif ( scrollX && scrollXInner ) {\n\t\t\t\ttmpTable.width( scrollXInner );\n\t\t\t}\n\t\t\telse if ( scrollX ) {\n\t\t\t\ttmpTable.css( 'width', 'auto' );\n\t\t\t\ttmpTable.removeAttr('width');\n\t\n\t\t\t\t// If there is no width attribute or style, then allow the table to\n\t\t\t\t// collapse\n\t\t\t\tif ( tmpTable.width() < tableContainer.clientWidth && tableWidthAttr ) {\n\t\t\t\t\ttmpTable.width( tableContainer.clientWidth );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( scrollY ) {\n\t\t\t\ttmpTable.width( tableContainer.clientWidth );\n\t\t\t}\n\t\t\telse if ( tableWidthAttr ) {\n\t\t\t\ttmpTable.width( tableWidthAttr );\n\t\t\t}\n\t\n\t\t\t// Get the width of each column in the constructed table - we need to\n\t\t\t// know the inner width (so it can be assigned to the other table's\n\t\t\t// cells) and the outer width so we can calculate the full width of the\n\t\t\t// table. This is safe since DataTables requires a unique cell for each\n\t\t\t// column, but if ever a header can span multiple columns, this will\n\t\t\t// need to be modified.\n\t\t\tvar total = 0;\n\t\t\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t\t\tvar cell = $(headerCells[i]);\n\t\t\t\tvar border = cell.outerWidth() - cell.width();\n\t\n\t\t\t\t// Use getBounding... where possible (not IE8-) because it can give\n\t\t\t\t// sub-pixel accuracy, which we then want to round up!\n\t\t\t\tvar bounding = browser.bBounding ?\n\t\t\t\t\tMath.ceil( headerCells[i].getBoundingClientRect().width ) :\n\t\t\t\t\tcell.outerWidth();\n\t\n\t\t\t\t// Total is tracked to remove any sub-pixel errors as the outerWidth\n\t\t\t\t// of the table might not equal the total given here (IE!).\n\t\t\t\ttotal += bounding;\n\t\n\t\t\t\t// Width for each column to use\n\t\t\t\tcolumns[ visibleColumns[i] ].sWidth = _fnStringToCss( bounding - border );\n\t\t\t}\n\t\n\t\t\ttable.style.width = _fnStringToCss( total );\n\t\n\t\t\t// Finished with the table - ditch it\n\t\t\tholder.remove();\n\t\t}\n\t\n\t\t// If there is a width attr, we want to attach an event listener which\n\t\t// allows the table sizing to automatically adjust when the window is\n\t\t// resized. Use the width attr rather than CSS, since we can't know if the\n\t\t// CSS is a relative value or absolute - DOM read is always px.\n\t\tif ( tableWidthAttr ) {\n\t\t\ttable.style.width = _fnStringToCss( tableWidthAttr );\n\t\t}\n\t\n\t\tif ( (tableWidthAttr || scrollX) && ! oSettings._reszEvt ) {\n\t\t\tvar bindResize = function () {\n\t\t\t\t$(window).on('resize.DT-'+oSettings.sInstance, _fnThrottle( function () {\n\t\t\t\t\t_fnAdjustColumnSizing( oSettings );\n\t\t\t\t} ) );\n\t\t\t};\n\t\n\t\t\t// IE6/7 will crash if we bind a resize event handler on page load.\n\t\t\t// To be removed in 1.11 which drops IE6/7 support\n\t\t\tif ( ie67 ) {\n\t\t\t\tsetTimeout( bindResize, 1000 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbindResize();\n\t\t\t}\n\t\n\t\t\toSettings._reszEvt = true;\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Throttle the calls to a function. Arguments and context are maintained for\n\t * the throttled function\n\t *  @param {function} fn Function to be called\n\t *  @param {int} [freq=200] call frequency in mS\n\t *  @returns {function} wrapped function\n\t *  @memberof DataTable#oApi\n\t */\n\tvar _fnThrottle = DataTable.util.throttle;\n\t\n\t\n\t/**\n\t * Convert a CSS unit width to pixels (e.g. 2em)\n\t *  @param {string} width width to be converted\n\t *  @param {node} parent parent to get the with for (required for relative widths) - optional\n\t *  @returns {int} width in pixels\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnConvertToWidth ( width, parent )\n\t{\n\t\tif ( ! width ) {\n\t\t\treturn 0;\n\t\t}\n\t\n\t\tvar n = $('<div/>')\n\t\t\t.css( 'width', _fnStringToCss( width ) )\n\t\t\t.appendTo( parent || document.body );\n\t\n\t\tvar val = n[0].offsetWidth;\n\t\tn.remove();\n\t\n\t\treturn val;\n\t}\n\t\n\t\n\t/**\n\t * Get the widest node\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} colIdx column of interest\n\t *  @returns {node} widest table node\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetWidestNode( settings, colIdx )\n\t{\n\t\tvar idx = _fnGetMaxLenString( settings, colIdx );\n\t\tif ( idx < 0 ) {\n\t\t\treturn null;\n\t\t}\n\t\n\t\tvar data = settings.aoData[ idx ];\n\t\treturn ! data.nTr ? // Might not have been created when deferred rendering\n\t\t\t$('<td/>').html( _fnGetCellData( settings, idx, colIdx, 'display' ) )[0] :\n\t\t\tdata.anCells[ colIdx ];\n\t}\n\t\n\t\n\t/**\n\t * Get the maximum strlen for each data column\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} colIdx column of interest\n\t *  @returns {string} max string length for each column\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnGetMaxLenString( settings, colIdx )\n\t{\n\t\tvar s, max=-1, maxIdx = -1;\n\t\n\t\tfor ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\ts = _fnGetCellData( settings, i, colIdx, 'display' )+'';\n\t\t\ts = s.replace( __re_html_remove, '' );\n\t\t\ts = s.replace( /&nbsp;/g, ' ' );\n\t\n\t\t\tif ( s.length > max ) {\n\t\t\t\tmax = s.length;\n\t\t\t\tmaxIdx = i;\n\t\t\t}\n\t\t}\n\t\n\t\treturn maxIdx;\n\t}\n\t\n\t\n\t/**\n\t * Append a CSS unit (only if required) to a string\n\t *  @param {string} value to css-ify\n\t *  @returns {string} value with css unit\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnStringToCss( s )\n\t{\n\t\tif ( s === null ) {\n\t\t\treturn '0px';\n\t\t}\n\t\n\t\tif ( typeof s == 'number' ) {\n\t\t\treturn s < 0 ?\n\t\t\t\t'0px' :\n\t\t\t\ts+'px';\n\t\t}\n\t\n\t\t// Check it has a unit character already\n\t\treturn s.match(/\\d$/) ?\n\t\t\ts+'px' :\n\t\t\ts;\n\t}\n\t\n\t\n\t\n\tfunction _fnSortFlatten ( settings )\n\t{\n\t\tvar\n\t\t\ti, iLen, k, kLen,\n\t\t\taSort = [],\n\t\t\taiOrig = [],\n\t\t\taoColumns = settings.aoColumns,\n\t\t\taDataSort, iCol, sType, srcCol,\n\t\t\tfixed = settings.aaSortingFixed,\n\t\t\tfixedObj = $.isPlainObject( fixed ),\n\t\t\tnestedSort = [],\n\t\t\tadd = function ( a ) {\n\t\t\t\tif ( a.length && ! $.isArray( a[0] ) ) {\n\t\t\t\t\t// 1D array\n\t\t\t\t\tnestedSort.push( a );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// 2D array\n\t\t\t\t\t$.merge( nestedSort, a );\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t// Build the sort array, with pre-fix and post-fix options if they have been\n\t\t// specified\n\t\tif ( $.isArray( fixed ) ) {\n\t\t\tadd( fixed );\n\t\t}\n\t\n\t\tif ( fixedObj && fixed.pre ) {\n\t\t\tadd( fixed.pre );\n\t\t}\n\t\n\t\tadd( settings.aaSorting );\n\t\n\t\tif (fixedObj && fixed.post ) {\n\t\t\tadd( fixed.post );\n\t\t}\n\t\n\t\tfor ( i=0 ; i<nestedSort.length ; i++ )\n\t\t{\n\t\t\tsrcCol = nestedSort[i][0];\n\t\t\taDataSort = aoColumns[ srcCol ].aDataSort;\n\t\n\t\t\tfor ( k=0, kLen=aDataSort.length ; k<kLen ; k++ )\n\t\t\t{\n\t\t\t\tiCol = aDataSort[k];\n\t\t\t\tsType = aoColumns[ iCol ].sType || 'string';\n\t\n\t\t\t\tif ( nestedSort[i]._idx === undefined ) {\n\t\t\t\t\tnestedSort[i]._idx = $.inArray( nestedSort[i][1], aoColumns[iCol].asSorting );\n\t\t\t\t}\n\t\n\t\t\t\taSort.push( {\n\t\t\t\t\tsrc:       srcCol,\n\t\t\t\t\tcol:       iCol,\n\t\t\t\t\tdir:       nestedSort[i][1],\n\t\t\t\t\tindex:     nestedSort[i]._idx,\n\t\t\t\t\ttype:      sType,\n\t\t\t\t\tformatter: DataTable.ext.type.order[ sType+\"-pre\" ]\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t\n\t\treturn aSort;\n\t}\n\t\n\t/**\n\t * Change the order of the table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t *  @todo This really needs split up!\n\t */\n\tfunction _fnSort ( oSettings )\n\t{\n\t\tvar\n\t\t\ti, ien, iLen, j, jLen, k, kLen,\n\t\t\tsDataType, nTh,\n\t\t\taiOrig = [],\n\t\t\toExtSort = DataTable.ext.type.order,\n\t\t\taoData = oSettings.aoData,\n\t\t\taoColumns = oSettings.aoColumns,\n\t\t\taDataSort, data, iCol, sType, oSort,\n\t\t\tformatters = 0,\n\t\t\tsortCol,\n\t\t\tdisplayMaster = oSettings.aiDisplayMaster,\n\t\t\taSort;\n\t\n\t\t// Resolve any column types that are unknown due to addition or invalidation\n\t\t// @todo Can this be moved into a 'data-ready' handler which is called when\n\t\t//   data is going to be used in the table?\n\t\t_fnColumnTypes( oSettings );\n\t\n\t\taSort = _fnSortFlatten( oSettings );\n\t\n\t\tfor ( i=0, ien=aSort.length ; i<ien ; i++ ) {\n\t\t\tsortCol = aSort[i];\n\t\n\t\t\t// Track if we can use the fast sort algorithm\n\t\t\tif ( sortCol.formatter ) {\n\t\t\t\tformatters++;\n\t\t\t}\n\t\n\t\t\t// Load the data needed for the sort, for each cell\n\t\t\t_fnSortData( oSettings, sortCol.col );\n\t\t}\n\t\n\t\t/* No sorting required if server-side or no sorting array */\n\t\tif ( _fnDataSource( oSettings ) != 'ssp' && aSort.length !== 0 )\n\t\t{\n\t\t\t// Create a value - key array of the current row positions such that we can use their\n\t\t\t// current position during the sort, if values match, in order to perform stable sorting\n\t\t\tfor ( i=0, iLen=displayMaster.length ; i<iLen ; i++ ) {\n\t\t\t\taiOrig[ displayMaster[i] ] = i;\n\t\t\t}\n\t\n\t\t\t/* Do the sort - here we want multi-column sorting based on a given data source (column)\n\t\t\t * and sorting function (from oSort) in a certain direction. It's reasonably complex to\n\t\t\t * follow on it's own, but this is what we want (example two column sorting):\n\t\t\t *  fnLocalSorting = function(a,b){\n\t\t\t *    var iTest;\n\t\t\t *    iTest = oSort['string-asc']('data11', 'data12');\n\t\t\t *      if (iTest !== 0)\n\t\t\t *        return iTest;\n\t\t\t *    iTest = oSort['numeric-desc']('data21', 'data22');\n\t\t\t *    if (iTest !== 0)\n\t\t\t *      return iTest;\n\t\t\t *    return oSort['numeric-asc']( aiOrig[a], aiOrig[b] );\n\t\t\t *  }\n\t\t\t * Basically we have a test for each sorting column, if the data in that column is equal,\n\t\t\t * test the next column. If all columns match, then we use a numeric sort on the row\n\t\t\t * positions in the original data array to provide a stable sort.\n\t\t\t *\n\t\t\t * Note - I know it seems excessive to have two sorting methods, but the first is around\n\t\t\t * 15% faster, so the second is only maintained for backwards compatibility with sorting\n\t\t\t * methods which do not have a pre-sort formatting function.\n\t\t\t */\n\t\t\tif ( formatters === aSort.length ) {\n\t\t\t\t// All sort types have formatting functions\n\t\t\t\tdisplayMaster.sort( function ( a, b ) {\n\t\t\t\t\tvar\n\t\t\t\t\t\tx, y, k, test, sort,\n\t\t\t\t\t\tlen=aSort.length,\n\t\t\t\t\t\tdataA = aoData[a]._aSortData,\n\t\t\t\t\t\tdataB = aoData[b]._aSortData;\n\t\n\t\t\t\t\tfor ( k=0 ; k<len ; k++ ) {\n\t\t\t\t\t\tsort = aSort[k];\n\t\n\t\t\t\t\t\tx = dataA[ sort.col ];\n\t\t\t\t\t\ty = dataB[ sort.col ];\n\t\n\t\t\t\t\t\ttest = x<y ? -1 : x>y ? 1 : 0;\n\t\t\t\t\t\tif ( test !== 0 ) {\n\t\t\t\t\t\t\treturn sort.dir === 'asc' ? test : -test;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\tx = aiOrig[a];\n\t\t\t\t\ty = aiOrig[b];\n\t\t\t\t\treturn x<y ? -1 : x>y ? 1 : 0;\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Depreciated - remove in 1.11 (providing a plug-in option)\n\t\t\t\t// Not all sort types have formatting methods, so we have to call their sorting\n\t\t\t\t// methods.\n\t\t\t\tdisplayMaster.sort( function ( a, b ) {\n\t\t\t\t\tvar\n\t\t\t\t\t\tx, y, k, l, test, sort, fn,\n\t\t\t\t\t\tlen=aSort.length,\n\t\t\t\t\t\tdataA = aoData[a]._aSortData,\n\t\t\t\t\t\tdataB = aoData[b]._aSortData;\n\t\n\t\t\t\t\tfor ( k=0 ; k<len ; k++ ) {\n\t\t\t\t\t\tsort = aSort[k];\n\t\n\t\t\t\t\t\tx = dataA[ sort.col ];\n\t\t\t\t\t\ty = dataB[ sort.col ];\n\t\n\t\t\t\t\t\tfn = oExtSort[ sort.type+\"-\"+sort.dir ] || oExtSort[ \"string-\"+sort.dir ];\n\t\t\t\t\t\ttest = fn( x, y );\n\t\t\t\t\t\tif ( test !== 0 ) {\n\t\t\t\t\t\t\treturn test;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\tx = aiOrig[a];\n\t\t\t\t\ty = aiOrig[b];\n\t\t\t\t\treturn x<y ? -1 : x>y ? 1 : 0;\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t\n\t\t/* Tell the draw function that we have sorted the data */\n\t\toSettings.bSorted = true;\n\t}\n\t\n\t\n\tfunction _fnSortAria ( settings )\n\t{\n\t\tvar label;\n\t\tvar nextSort;\n\t\tvar columns = settings.aoColumns;\n\t\tvar aSort = _fnSortFlatten( settings );\n\t\tvar oAria = settings.oLanguage.oAria;\n\t\n\t\t// ARIA attributes - need to loop all columns, to update all (removing old\n\t\t// attributes as needed)\n\t\tfor ( var i=0, iLen=columns.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tvar col = columns[i];\n\t\t\tvar asSorting = col.asSorting;\n\t\t\tvar sTitle = col.sTitle.replace( /<.*?>/g, \"\" );\n\t\t\tvar th = col.nTh;\n\t\n\t\t\t// IE7 is throwing an error when setting these properties with jQuery's\n\t\t\t// attr() and removeAttr() methods...\n\t\t\tth.removeAttribute('aria-sort');\n\t\n\t\t\t/* In ARIA only the first sorting column can be marked as sorting - no multi-sort option */\n\t\t\tif ( col.bSortable ) {\n\t\t\t\tif ( aSort.length > 0 && aSort[0].col == i ) {\n\t\t\t\t\tth.setAttribute('aria-sort', aSort[0].dir==\"asc\" ? \"ascending\" : \"descending\" );\n\t\t\t\t\tnextSort = asSorting[ aSort[0].index+1 ] || asSorting[0];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnextSort = asSorting[0];\n\t\t\t\t}\n\t\n\t\t\t\tlabel = sTitle + ( nextSort === \"asc\" ?\n\t\t\t\t\toAria.sSortAscending :\n\t\t\t\t\toAria.sSortDescending\n\t\t\t\t);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlabel = sTitle;\n\t\t\t}\n\t\n\t\t\tth.setAttribute('aria-label', label);\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Function to run on user sort request\n\t *  @param {object} settings dataTables settings object\n\t *  @param {node} attachTo node to attach the handler to\n\t *  @param {int} colIdx column sorting index\n\t *  @param {boolean} [append=false] Append the requested sort to the existing\n\t *    sort if true (i.e. multi-column sort)\n\t *  @param {function} [callback] callback function\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSortListener ( settings, colIdx, append, callback )\n\t{\n\t\tvar col = settings.aoColumns[ colIdx ];\n\t\tvar sorting = settings.aaSorting;\n\t\tvar asSorting = col.asSorting;\n\t\tvar nextSortIdx;\n\t\tvar next = function ( a, overflow ) {\n\t\t\tvar idx = a._idx;\n\t\t\tif ( idx === undefined ) {\n\t\t\t\tidx = $.inArray( a[1], asSorting );\n\t\t\t}\n\t\n\t\t\treturn idx+1 < asSorting.length ?\n\t\t\t\tidx+1 :\n\t\t\t\toverflow ?\n\t\t\t\t\tnull :\n\t\t\t\t\t0;\n\t\t};\n\t\n\t\t// Convert to 2D array if needed\n\t\tif ( typeof sorting[0] === 'number' ) {\n\t\t\tsorting = settings.aaSorting = [ sorting ];\n\t\t}\n\t\n\t\t// If appending the sort then we are multi-column sorting\n\t\tif ( append && settings.oFeatures.bSortMulti ) {\n\t\t\t// Are we already doing some kind of sort on this column?\n\t\t\tvar sortIdx = $.inArray( colIdx, _pluck(sorting, '0') );\n\t\n\t\t\tif ( sortIdx !== -1 ) {\n\t\t\t\t// Yes, modify the sort\n\t\t\t\tnextSortIdx = next( sorting[sortIdx], true );\n\t\n\t\t\t\tif ( nextSortIdx === null && sorting.length === 1 ) {\n\t\t\t\t\tnextSortIdx = 0; // can't remove sorting completely\n\t\t\t\t}\n\t\n\t\t\t\tif ( nextSortIdx === null ) {\n\t\t\t\t\tsorting.splice( sortIdx, 1 );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsorting[sortIdx][1] = asSorting[ nextSortIdx ];\n\t\t\t\t\tsorting[sortIdx]._idx = nextSortIdx;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// No sort on this column yet\n\t\t\t\tsorting.push( [ colIdx, asSorting[0], 0 ] );\n\t\t\t\tsorting[sorting.length-1]._idx = 0;\n\t\t\t}\n\t\t}\n\t\telse if ( sorting.length && sorting[0][0] == colIdx ) {\n\t\t\t// Single column - already sorting on this column, modify the sort\n\t\t\tnextSortIdx = next( sorting[0] );\n\t\n\t\t\tsorting.length = 1;\n\t\t\tsorting[0][1] = asSorting[ nextSortIdx ];\n\t\t\tsorting[0]._idx = nextSortIdx;\n\t\t}\n\t\telse {\n\t\t\t// Single column - sort only on this column\n\t\t\tsorting.length = 0;\n\t\t\tsorting.push( [ colIdx, asSorting[0] ] );\n\t\t\tsorting[0]._idx = 0;\n\t\t}\n\t\n\t\t// Run the sort by calling a full redraw\n\t\t_fnReDraw( settings );\n\t\n\t\t// callback used for async user interaction\n\t\tif ( typeof callback == 'function' ) {\n\t\t\tcallback( settings );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Attach a sort handler (click) to a node\n\t *  @param {object} settings dataTables settings object\n\t *  @param {node} attachTo node to attach the handler to\n\t *  @param {int} colIdx column sorting index\n\t *  @param {function} [callback] callback function\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSortAttachListener ( settings, attachTo, colIdx, callback )\n\t{\n\t\tvar col = settings.aoColumns[ colIdx ];\n\t\n\t\t_fnBindAction( attachTo, {}, function (e) {\n\t\t\t/* If the column is not sortable - don't to anything */\n\t\t\tif ( col.bSortable === false ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// If processing is enabled use a timeout to allow the processing\n\t\t\t// display to be shown - otherwise to it synchronously\n\t\t\tif ( settings.oFeatures.bProcessing ) {\n\t\t\t\t_fnProcessingDisplay( settings, true );\n\t\n\t\t\t\tsetTimeout( function() {\n\t\t\t\t\t_fnSortListener( settings, colIdx, e.shiftKey, callback );\n\t\n\t\t\t\t\t// In server-side processing, the draw callback will remove the\n\t\t\t\t\t// processing display\n\t\t\t\t\tif ( _fnDataSource( settings ) !== 'ssp' ) {\n\t\t\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t\t\t}\n\t\t\t\t}, 0 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_fnSortListener( settings, colIdx, e.shiftKey, callback );\n\t\t\t}\n\t\t} );\n\t}\n\t\n\t\n\t/**\n\t * Set the sorting classes on table's body, Note: it is safe to call this function\n\t * when bSort and bSortClasses are false\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSortingClasses( settings )\n\t{\n\t\tvar oldSort = settings.aLastSort;\n\t\tvar sortClass = settings.oClasses.sSortColumn;\n\t\tvar sort = _fnSortFlatten( settings );\n\t\tvar features = settings.oFeatures;\n\t\tvar i, ien, colIdx;\n\t\n\t\tif ( features.bSort && features.bSortClasses ) {\n\t\t\t// Remove old sorting classes\n\t\t\tfor ( i=0, ien=oldSort.length ; i<ien ; i++ ) {\n\t\t\t\tcolIdx = oldSort[i].src;\n\t\n\t\t\t\t// Remove column sorting\n\t\t\t\t$( _pluck( settings.aoData, 'anCells', colIdx ) )\n\t\t\t\t\t.removeClass( sortClass + (i<2 ? i+1 : 3) );\n\t\t\t}\n\t\n\t\t\t// Add new column sorting\n\t\t\tfor ( i=0, ien=sort.length ; i<ien ; i++ ) {\n\t\t\t\tcolIdx = sort[i].src;\n\t\n\t\t\t\t$( _pluck( settings.aoData, 'anCells', colIdx ) )\n\t\t\t\t\t.addClass( sortClass + (i<2 ? i+1 : 3) );\n\t\t\t}\n\t\t}\n\t\n\t\tsettings.aLastSort = sort;\n\t}\n\t\n\t\n\t// Get the data to sort a column, be it from cache, fresh (populating the\n\t// cache), or from a sort formatter\n\tfunction _fnSortData( settings, idx )\n\t{\n\t\t// Custom sorting function - provided by the sort data type\n\t\tvar column = settings.aoColumns[ idx ];\n\t\tvar customSort = DataTable.ext.order[ column.sSortDataType ];\n\t\tvar customData;\n\t\n\t\tif ( customSort ) {\n\t\t\tcustomData = customSort.call( settings.oInstance, settings, idx,\n\t\t\t\t_fnColumnIndexToVisible( settings, idx )\n\t\t\t);\n\t\t}\n\t\n\t\t// Use / populate cache\n\t\tvar row, cellData;\n\t\tvar formatter = DataTable.ext.type.order[ column.sType+\"-pre\" ];\n\t\n\t\tfor ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\trow = settings.aoData[i];\n\t\n\t\t\tif ( ! row._aSortData ) {\n\t\t\t\trow._aSortData = [];\n\t\t\t}\n\t\n\t\t\tif ( ! row._aSortData[idx] || customSort ) {\n\t\t\t\tcellData = customSort ?\n\t\t\t\t\tcustomData[i] : // If there was a custom sort function, use data from there\n\t\t\t\t\t_fnGetCellData( settings, i, idx, 'sort' );\n\t\n\t\t\t\trow._aSortData[ idx ] = formatter ?\n\t\t\t\t\tformatter( cellData ) :\n\t\t\t\t\tcellData;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t\n\t/**\n\t * Save the state of a table\n\t *  @param {object} oSettings dataTables settings object\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSaveState ( settings )\n\t{\n\t\tif ( !settings.oFeatures.bStateSave || settings.bDestroying )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\n\t\t/* Store the interesting variables */\n\t\tvar state = {\n\t\t\ttime:    +new Date(),\n\t\t\tstart:   settings._iDisplayStart,\n\t\t\tlength:  settings._iDisplayLength,\n\t\t\torder:   $.extend( true, [], settings.aaSorting ),\n\t\t\tsearch:  _fnSearchToCamel( settings.oPreviousSearch ),\n\t\t\tcolumns: $.map( settings.aoColumns, function ( col, i ) {\n\t\t\t\treturn {\n\t\t\t\t\tvisible: col.bVisible,\n\t\t\t\t\tsearch: _fnSearchToCamel( settings.aoPreSearchCols[i] )\n\t\t\t\t};\n\t\t\t} )\n\t\t};\n\t\n\t\t_fnCallbackFire( settings, \"aoStateSaveParams\", 'stateSaveParams', [settings, state] );\n\t\n\t\tsettings.oSavedState = state;\n\t\tsettings.fnStateSaveCallback.call( settings.oInstance, settings, state );\n\t}\n\t\n\t\n\t/**\n\t * Attempt to load a saved table state\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {object} oInit DataTables init object so we can override settings\n\t *  @param {function} callback Callback to execute when the state has been loaded\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnLoadState ( settings, oInit, callback )\n\t{\n\t\tvar i, ien;\n\t\tvar columns = settings.aoColumns;\n\t\tvar loaded = function ( s ) {\n\t\t\tif ( ! s || ! s.time ) {\n\t\t\t\tcallback();\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// Allow custom and plug-in manipulation functions to alter the saved data set and\n\t\t\t// cancelling of loading by returning false\n\t\t\tvar abStateLoad = _fnCallbackFire( settings, 'aoStateLoadParams', 'stateLoadParams', [settings, s] );\n\t\t\tif ( $.inArray( false, abStateLoad ) !== -1 ) {\n\t\t\t\tcallback();\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// Reject old data\n\t\t\tvar duration = settings.iStateDuration;\n\t\t\tif ( duration > 0 && s.time < +new Date() - (duration*1000) ) {\n\t\t\t\tcallback();\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// Number of columns have changed - all bets are off, no restore of settings\n\t\t\tif ( s.columns && columns.length !== s.columns.length ) {\n\t\t\t\tcallback();\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// Store the saved state so it might be accessed at any time\n\t\t\tsettings.oLoadedState = $.extend( true, {}, s );\n\t\n\t\t\t// Restore key features - todo - for 1.11 this needs to be done by\n\t\t\t// subscribed events\n\t\t\tif ( s.start !== undefined ) {\n\t\t\t\tsettings._iDisplayStart    = s.start;\n\t\t\t\tsettings.iInitDisplayStart = s.start;\n\t\t\t}\n\t\t\tif ( s.length !== undefined ) {\n\t\t\t\tsettings._iDisplayLength   = s.length;\n\t\t\t}\n\t\n\t\t\t// Order\n\t\t\tif ( s.order !== undefined ) {\n\t\t\t\tsettings.aaSorting = [];\n\t\t\t\t$.each( s.order, function ( i, col ) {\n\t\t\t\t\tsettings.aaSorting.push( col[0] >= columns.length ?\n\t\t\t\t\t\t[ 0, col[1] ] :\n\t\t\t\t\t\tcol\n\t\t\t\t\t);\n\t\t\t\t} );\n\t\t\t}\n\t\n\t\t\t// Search\n\t\t\tif ( s.search !== undefined ) {\n\t\t\t\t$.extend( settings.oPreviousSearch, _fnSearchToHung( s.search ) );\n\t\t\t}\n\t\n\t\t\t// Columns\n\t\t\t//\n\t\t\tif ( s.columns ) {\n\t\t\t\tfor ( i=0, ien=s.columns.length ; i<ien ; i++ ) {\n\t\t\t\t\tvar col = s.columns[i];\n\t\n\t\t\t\t\t// Visibility\n\t\t\t\t\tif ( col.visible !== undefined ) {\n\t\t\t\t\t\tcolumns[i].bVisible = col.visible;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Search\n\t\t\t\t\tif ( col.search !== undefined ) {\n\t\t\t\t\t\t$.extend( settings.aoPreSearchCols[i], _fnSearchToHung( col.search ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t_fnCallbackFire( settings, 'aoStateLoaded', 'stateLoaded', [settings, s] );\n\t\t\tcallback();\n\t\t}\n\t\n\t\tif ( ! settings.oFeatures.bStateSave ) {\n\t\t\tcallback();\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar state = settings.fnStateLoadCallback.call( settings.oInstance, settings, loaded );\n\t\n\t\tif ( state !== undefined ) {\n\t\t\tloaded( state );\n\t\t}\n\t\t// otherwise, wait for the loaded callback to be executed\n\t}\n\t\n\t\n\t/**\n\t * Return the settings object for a particular table\n\t *  @param {node} table table we are using as a dataTable\n\t *  @returns {object} Settings object - or null if not found\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnSettingsFromNode ( table )\n\t{\n\t\tvar settings = DataTable.settings;\n\t\tvar idx = $.inArray( table, _pluck( settings, 'nTable' ) );\n\t\n\t\treturn idx !== -1 ?\n\t\t\tsettings[ idx ] :\n\t\t\tnull;\n\t}\n\t\n\t\n\t/**\n\t * Log an error message\n\t *  @param {object} settings dataTables settings object\n\t *  @param {int} level log error messages, or display them to the user\n\t *  @param {string} msg error message\n\t *  @param {int} tn Technical note id to get more information about the error.\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnLog( settings, level, msg, tn )\n\t{\n\t\tmsg = 'DataTables warning: '+\n\t\t\t(settings ? 'table id='+settings.sTableId+' - ' : '')+msg;\n\t\n\t\tif ( tn ) {\n\t\t\tmsg += '. For more information about this error, please see '+\n\t\t\t'http://datatables.net/tn/'+tn;\n\t\t}\n\t\n\t\tif ( ! level  ) {\n\t\t\t// Backwards compatibility pre 1.10\n\t\t\tvar ext = DataTable.ext;\n\t\t\tvar type = ext.sErrMode || ext.errMode;\n\t\n\t\t\tif ( settings ) {\n\t\t\t\t_fnCallbackFire( settings, null, 'error', [ settings, tn, msg ] );\n\t\t\t}\n\t\n\t\t\tif ( type == 'alert' ) {\n\t\t\t\talert( msg );\n\t\t\t}\n\t\t\telse if ( type == 'throw' ) {\n\t\t\t\tthrow new Error(msg);\n\t\t\t}\n\t\t\telse if ( typeof type == 'function' ) {\n\t\t\t\ttype( settings, tn, msg );\n\t\t\t}\n\t\t}\n\t\telse if ( window.console && console.log ) {\n\t\t\tconsole.log( msg );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * See if a property is defined on one object, if so assign it to the other object\n\t *  @param {object} ret target object\n\t *  @param {object} src source object\n\t *  @param {string} name property\n\t *  @param {string} [mappedName] name to map too - optional, name used if not given\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnMap( ret, src, name, mappedName )\n\t{\n\t\tif ( $.isArray( name ) ) {\n\t\t\t$.each( name, function (i, val) {\n\t\t\t\tif ( $.isArray( val ) ) {\n\t\t\t\t\t_fnMap( ret, src, val[0], val[1] );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t_fnMap( ret, src, val );\n\t\t\t\t}\n\t\t\t} );\n\t\n\t\t\treturn;\n\t\t}\n\t\n\t\tif ( mappedName === undefined ) {\n\t\t\tmappedName = name;\n\t\t}\n\t\n\t\tif ( src[name] !== undefined ) {\n\t\t\tret[mappedName] = src[name];\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Extend objects - very similar to jQuery.extend, but deep copy objects, and\n\t * shallow copy arrays. The reason we need to do this, is that we don't want to\n\t * deep copy array init values (such as aaSorting) since the dev wouldn't be\n\t * able to override them, but we do want to deep copy arrays.\n\t *  @param {object} out Object to extend\n\t *  @param {object} extender Object from which the properties will be applied to\n\t *      out\n\t *  @param {boolean} breakRefs If true, then arrays will be sliced to take an\n\t *      independent copy with the exception of the `data` or `aaData` parameters\n\t *      if they are present. This is so you can pass in a collection to\n\t *      DataTables and have that used as your data source without breaking the\n\t *      references\n\t *  @returns {object} out Reference, just for convenience - out === the return.\n\t *  @memberof DataTable#oApi\n\t *  @todo This doesn't take account of arrays inside the deep copied objects.\n\t */\n\tfunction _fnExtend( out, extender, breakRefs )\n\t{\n\t\tvar val;\n\t\n\t\tfor ( var prop in extender ) {\n\t\t\tif ( extender.hasOwnProperty(prop) ) {\n\t\t\t\tval = extender[prop];\n\t\n\t\t\t\tif ( $.isPlainObject( val ) ) {\n\t\t\t\t\tif ( ! $.isPlainObject( out[prop] ) ) {\n\t\t\t\t\t\tout[prop] = {};\n\t\t\t\t\t}\n\t\t\t\t\t$.extend( true, out[prop], val );\n\t\t\t\t}\n\t\t\t\telse if ( breakRefs && prop !== 'data' && prop !== 'aaData' && $.isArray(val) ) {\n\t\t\t\t\tout[prop] = val.slice();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tout[prop] = val;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn out;\n\t}\n\t\n\t\n\t/**\n\t * Bind an event handers to allow a click or return key to activate the callback.\n\t * This is good for accessibility since a return on the keyboard will have the\n\t * same effect as a click, if the element has focus.\n\t *  @param {element} n Element to bind the action to\n\t *  @param {object} oData Data object to pass to the triggered function\n\t *  @param {function} fn Callback function for when the event is triggered\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnBindAction( n, oData, fn )\n\t{\n\t\t$(n)\n\t\t\t.on( 'click.DT', oData, function (e) {\n\t\t\t\t\t$(n).blur(); // Remove focus outline for mouse users\n\t\t\t\t\tfn(e);\n\t\t\t\t} )\n\t\t\t.on( 'keypress.DT', oData, function (e){\n\t\t\t\t\tif ( e.which === 13 ) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tfn(e);\n\t\t\t\t\t}\n\t\t\t\t} )\n\t\t\t.on( 'selectstart.DT', function () {\n\t\t\t\t\t/* Take the brutal approach to cancelling text selection */\n\t\t\t\t\treturn false;\n\t\t\t\t} );\n\t}\n\t\n\t\n\t/**\n\t * Register a callback function. Easily allows a callback function to be added to\n\t * an array store of callback functions that can then all be called together.\n\t *  @param {object} oSettings dataTables settings object\n\t *  @param {string} sStore Name of the array storage for the callbacks in oSettings\n\t *  @param {function} fn Function to be called back\n\t *  @param {string} sName Identifying name for the callback (i.e. a label)\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCallbackReg( oSettings, sStore, fn, sName )\n\t{\n\t\tif ( fn )\n\t\t{\n\t\t\toSettings[sStore].push( {\n\t\t\t\t\"fn\": fn,\n\t\t\t\t\"sName\": sName\n\t\t\t} );\n\t\t}\n\t}\n\t\n\t\n\t/**\n\t * Fire callback functions and trigger events. Note that the loop over the\n\t * callback array store is done backwards! Further note that you do not want to\n\t * fire off triggers in time sensitive applications (for example cell creation)\n\t * as its slow.\n\t *  @param {object} settings dataTables settings object\n\t *  @param {string} callbackArr Name of the array storage for the callbacks in\n\t *      oSettings\n\t *  @param {string} eventName Name of the jQuery custom event to trigger. If\n\t *      null no trigger is fired\n\t *  @param {array} args Array of arguments to pass to the callback function /\n\t *      trigger\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnCallbackFire( settings, callbackArr, eventName, args )\n\t{\n\t\tvar ret = [];\n\t\n\t\tif ( callbackArr ) {\n\t\t\tret = $.map( settings[callbackArr].slice().reverse(), function (val, i) {\n\t\t\t\treturn val.fn.apply( settings.oInstance, args );\n\t\t\t} );\n\t\t}\n\t\n\t\tif ( eventName !== null ) {\n\t\t\tvar e = $.Event( eventName+'.dt' );\n\t\n\t\t\t$(settings.nTable).trigger( e, args );\n\t\n\t\t\tret.push( e.result );\n\t\t}\n\t\n\t\treturn ret;\n\t}\n\t\n\t\n\tfunction _fnLengthOverflow ( settings )\n\t{\n\t\tvar\n\t\t\tstart = settings._iDisplayStart,\n\t\t\tend = settings.fnDisplayEnd(),\n\t\t\tlen = settings._iDisplayLength;\n\t\n\t\t/* If we have space to show extra rows (backing up from the end point - then do so */\n\t\tif ( start >= end )\n\t\t{\n\t\t\tstart = end - len;\n\t\t}\n\t\n\t\t// Keep the start record on the current page\n\t\tstart -= (start % len);\n\t\n\t\tif ( len === -1 || start < 0 )\n\t\t{\n\t\t\tstart = 0;\n\t\t}\n\t\n\t\tsettings._iDisplayStart = start;\n\t}\n\t\n\t\n\tfunction _fnRenderer( settings, type )\n\t{\n\t\tvar renderer = settings.renderer;\n\t\tvar host = DataTable.ext.renderer[type];\n\t\n\t\tif ( $.isPlainObject( renderer ) && renderer[type] ) {\n\t\t\t// Specific renderer for this type. If available use it, otherwise use\n\t\t\t// the default.\n\t\t\treturn host[renderer[type]] || host._;\n\t\t}\n\t\telse if ( typeof renderer === 'string' ) {\n\t\t\t// Common renderer - if there is one available for this type use it,\n\t\t\t// otherwise use the default\n\t\t\treturn host[renderer] || host._;\n\t\t}\n\t\n\t\t// Use the default\n\t\treturn host._;\n\t}\n\t\n\t\n\t/**\n\t * Detect the data source being used for the table. Used to simplify the code\n\t * a little (ajax) and to make it compress a little smaller.\n\t *\n\t *  @param {object} settings dataTables settings object\n\t *  @returns {string} Data source\n\t *  @memberof DataTable#oApi\n\t */\n\tfunction _fnDataSource ( settings )\n\t{\n\t\tif ( settings.oFeatures.bServerSide ) {\n\t\t\treturn 'ssp';\n\t\t}\n\t\telse if ( settings.ajax || settings.sAjaxSource ) {\n\t\t\treturn 'ajax';\n\t\t}\n\t\treturn 'dom';\n\t}\n\t\n\n\t\n\t\n\t/**\n\t * Computed structure of the DataTables API, defined by the options passed to\n\t * `DataTable.Api.register()` when building the API.\n\t *\n\t * The structure is built in order to speed creation and extension of the Api\n\t * objects since the extensions are effectively pre-parsed.\n\t *\n\t * The array is an array of objects with the following structure, where this\n\t * base array represents the Api prototype base:\n\t *\n\t *     [\n\t *       {\n\t *         name:      'data'                -- string   - Property name\n\t *         val:       function () {},       -- function - Api method (or undefined if just an object\n\t *         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n\t *         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n\t *       },\n\t *       {\n\t *         name:     'row'\n\t *         val:       {},\n\t *         methodExt: [ ... ],\n\t *         propExt:   [\n\t *           {\n\t *             name:      'data'\n\t *             val:       function () {},\n\t *             methodExt: [ ... ],\n\t *             propExt:   [ ... ]\n\t *           },\n\t *           ...\n\t *         ]\n\t *       }\n\t *     ]\n\t *\n\t * @type {Array}\n\t * @ignore\n\t */\n\tvar __apiStruct = [];\n\t\n\t\n\t/**\n\t * `Array.prototype` reference.\n\t *\n\t * @type object\n\t * @ignore\n\t */\n\tvar __arrayProto = Array.prototype;\n\t\n\t\n\t/**\n\t * Abstraction for `context` parameter of the `Api` constructor to allow it to\n\t * take several different forms for ease of use.\n\t *\n\t * Each of the input parameter types will be converted to a DataTables settings\n\t * object where possible.\n\t *\n\t * @param  {string|node|jQuery|object} mixed DataTable identifier. Can be one\n\t *   of:\n\t *\n\t *   * `string` - jQuery selector. Any DataTables' matching the given selector\n\t *     with be found and used.\n\t *   * `node` - `TABLE` node which has already been formed into a DataTable.\n\t *   * `jQuery` - A jQuery object of `TABLE` nodes.\n\t *   * `object` - DataTables settings object\n\t *   * `DataTables.Api` - API instance\n\t * @return {array|null} Matching DataTables settings objects. `null` or\n\t *   `undefined` is returned if no matching DataTable is found.\n\t * @ignore\n\t */\n\tvar _toSettings = function ( mixed )\n\t{\n\t\tvar idx, jq;\n\t\tvar settings = DataTable.settings;\n\t\tvar tables = $.map( settings, function (el, i) {\n\t\t\treturn el.nTable;\n\t\t} );\n\t\n\t\tif ( ! mixed ) {\n\t\t\treturn [];\n\t\t}\n\t\telse if ( mixed.nTable && mixed.oApi ) {\n\t\t\t// DataTables settings object\n\t\t\treturn [ mixed ];\n\t\t}\n\t\telse if ( mixed.nodeName && mixed.nodeName.toLowerCase() === 'table' ) {\n\t\t\t// Table node\n\t\t\tidx = $.inArray( mixed, tables );\n\t\t\treturn idx !== -1 ? [ settings[idx] ] : null;\n\t\t}\n\t\telse if ( mixed && typeof mixed.settings === 'function' ) {\n\t\t\treturn mixed.settings().toArray();\n\t\t}\n\t\telse if ( typeof mixed === 'string' ) {\n\t\t\t// jQuery selector\n\t\t\tjq = $(mixed);\n\t\t}\n\t\telse if ( mixed instanceof $ ) {\n\t\t\t// jQuery object (also DataTables instance)\n\t\t\tjq = mixed;\n\t\t}\n\t\n\t\tif ( jq ) {\n\t\t\treturn jq.map( function(i) {\n\t\t\t\tidx = $.inArray( this, tables );\n\t\t\t\treturn idx !== -1 ? settings[idx] : null;\n\t\t\t} ).toArray();\n\t\t}\n\t};\n\t\n\t\n\t/**\n\t * DataTables API class - used to control and interface with  one or more\n\t * DataTables enhanced tables.\n\t *\n\t * The API class is heavily based on jQuery, presenting a chainable interface\n\t * that you can use to interact with tables. Each instance of the API class has\n\t * a \"context\" - i.e. the tables that it will operate on. This could be a single\n\t * table, all tables on a page or a sub-set thereof.\n\t *\n\t * Additionally the API is designed to allow you to easily work with the data in\n\t * the tables, retrieving and manipulating it as required. This is done by\n\t * presenting the API class as an array like interface. The contents of the\n\t * array depend upon the actions requested by each method (for example\n\t * `rows().nodes()` will return an array of nodes, while `rows().data()` will\n\t * return an array of objects or arrays depending upon your table's\n\t * configuration). The API object has a number of array like methods (`push`,\n\t * `pop`, `reverse` etc) as well as additional helper methods (`each`, `pluck`,\n\t * `unique` etc) to assist your working with the data held in a table.\n\t *\n\t * Most methods (those which return an Api instance) are chainable, which means\n\t * the return from a method call also has all of the methods available that the\n\t * top level object had. For example, these two calls are equivalent:\n\t *\n\t *     // Not chained\n\t *     api.row.add( {...} );\n\t *     api.draw();\n\t *\n\t *     // Chained\n\t *     api.row.add( {...} ).draw();\n\t *\n\t * @class DataTable.Api\n\t * @param {array|object|string|jQuery} context DataTable identifier. This is\n\t *   used to define which DataTables enhanced tables this API will operate on.\n\t *   Can be one of:\n\t *\n\t *   * `string` - jQuery selector. Any DataTables' matching the given selector\n\t *     with be found and used.\n\t *   * `node` - `TABLE` node which has already been formed into a DataTable.\n\t *   * `jQuery` - A jQuery object of `TABLE` nodes.\n\t *   * `object` - DataTables settings object\n\t * @param {array} [data] Data to initialise the Api instance with.\n\t *\n\t * @example\n\t *   // Direct initialisation during DataTables construction\n\t *   var api = $('#example').DataTable();\n\t *\n\t * @example\n\t *   // Initialisation using a DataTables jQuery object\n\t *   var api = $('#example').dataTable().api();\n\t *\n\t * @example\n\t *   // Initialisation as a constructor\n\t *   var api = new $.fn.DataTable.Api( 'table.dataTable' );\n\t */\n\t_Api = function ( context, data )\n\t{\n\t\tif ( ! (this instanceof _Api) ) {\n\t\t\treturn new _Api( context, data );\n\t\t}\n\t\n\t\tvar settings = [];\n\t\tvar ctxSettings = function ( o ) {\n\t\t\tvar a = _toSettings( o );\n\t\t\tif ( a ) {\n\t\t\t\tsettings = settings.concat( a );\n\t\t\t}\n\t\t};\n\t\n\t\tif ( $.isArray( context ) ) {\n\t\t\tfor ( var i=0, ien=context.length ; i<ien ; i++ ) {\n\t\t\t\tctxSettings( context[i] );\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tctxSettings( context );\n\t\t}\n\t\n\t\t// Remove duplicates\n\t\tthis.context = _unique( settings );\n\t\n\t\t// Initial data\n\t\tif ( data ) {\n\t\t\t$.merge( this, data );\n\t\t}\n\t\n\t\t// selector\n\t\tthis.selector = {\n\t\t\trows: null,\n\t\t\tcols: null,\n\t\t\topts: null\n\t\t};\n\t\n\t\t_Api.extend( this, this, __apiStruct );\n\t};\n\t\n\tDataTable.Api = _Api;\n\t\n\t// Don't destroy the existing prototype, just extend it. Required for jQuery 2's\n\t// isPlainObject.\n\t$.extend( _Api.prototype, {\n\t\tany: function ()\n\t\t{\n\t\t\treturn this.count() !== 0;\n\t\t},\n\t\n\t\n\t\tconcat:  __arrayProto.concat,\n\t\n\t\n\t\tcontext: [], // array of table settings objects\n\t\n\t\n\t\tcount: function ()\n\t\t{\n\t\t\treturn this.flatten().length;\n\t\t},\n\t\n\t\n\t\teach: function ( fn )\n\t\t{\n\t\t\tfor ( var i=0, ien=this.length ; i<ien; i++ ) {\n\t\t\t\tfn.call( this, this[i], i, this );\n\t\t\t}\n\t\n\t\t\treturn this;\n\t\t},\n\t\n\t\n\t\teq: function ( idx )\n\t\t{\n\t\t\tvar ctx = this.context;\n\t\n\t\t\treturn ctx.length > idx ?\n\t\t\t\tnew _Api( ctx[idx], this[idx] ) :\n\t\t\t\tnull;\n\t\t},\n\t\n\t\n\t\tfilter: function ( fn )\n\t\t{\n\t\t\tvar a = [];\n\t\n\t\t\tif ( __arrayProto.filter ) {\n\t\t\t\ta = __arrayProto.filter.call( this, fn, this );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Compatibility for browsers without EMCA-252-5 (JS 1.6)\n\t\t\t\tfor ( var i=0, ien=this.length ; i<ien ; i++ ) {\n\t\t\t\t\tif ( fn.call( this, this[i], i, this ) ) {\n\t\t\t\t\t\ta.push( this[i] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn new _Api( this.context, a );\n\t\t},\n\t\n\t\n\t\tflatten: function ()\n\t\t{\n\t\t\tvar a = [];\n\t\t\treturn new _Api( this.context, a.concat.apply( a, this.toArray() ) );\n\t\t},\n\t\n\t\n\t\tjoin:    __arrayProto.join,\n\t\n\t\n\t\tindexOf: __arrayProto.indexOf || function (obj, start)\n\t\t{\n\t\t\tfor ( var i=(start || 0), ien=this.length ; i<ien ; i++ ) {\n\t\t\t\tif ( this[i] === obj ) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t},\n\t\n\t\titerator: function ( flatten, type, fn, alwaysNew ) {\n\t\t\tvar\n\t\t\t\ta = [], ret,\n\t\t\t\ti, ien, j, jen,\n\t\t\t\tcontext = this.context,\n\t\t\t\trows, items, item,\n\t\t\t\tselector = this.selector;\n\t\n\t\t\t// Argument shifting\n\t\t\tif ( typeof flatten === 'string' ) {\n\t\t\t\talwaysNew = fn;\n\t\t\t\tfn = type;\n\t\t\t\ttype = flatten;\n\t\t\t\tflatten = false;\n\t\t\t}\n\t\n\t\t\tfor ( i=0, ien=context.length ; i<ien ; i++ ) {\n\t\t\t\tvar apiInst = new _Api( context[i] );\n\t\n\t\t\t\tif ( type === 'table' ) {\n\t\t\t\t\tret = fn.call( apiInst, context[i], i );\n\t\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\ta.push( ret );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ( type === 'columns' || type === 'rows' ) {\n\t\t\t\t\t// this has same length as context - one entry for each table\n\t\t\t\t\tret = fn.call( apiInst, context[i], this[i], i );\n\t\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\ta.push( ret );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ( type === 'column' || type === 'column-rows' || type === 'row' || type === 'cell' ) {\n\t\t\t\t\t// columns and rows share the same structure.\n\t\t\t\t\t// 'this' is an array of column indexes for each context\n\t\t\t\t\titems = this[i];\n\t\n\t\t\t\t\tif ( type === 'column-rows' ) {\n\t\t\t\t\t\trows = _selector_row_indexes( context[i], selector.opts );\n\t\t\t\t\t}\n\t\n\t\t\t\t\tfor ( j=0, jen=items.length ; j<jen ; j++ ) {\n\t\t\t\t\t\titem = items[j];\n\t\n\t\t\t\t\t\tif ( type === 'cell' ) {\n\t\t\t\t\t\t\tret = fn.call( apiInst, context[i], item.row, item.column, i, j );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tret = fn.call( apiInst, context[i], item, i, j, rows );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\t\ta.push( ret );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif ( a.length || alwaysNew ) {\n\t\t\t\tvar api = new _Api( context, flatten ? a.concat.apply( [], a ) : a );\n\t\t\t\tvar apiSelector = api.selector;\n\t\t\t\tapiSelector.rows = selector.rows;\n\t\t\t\tapiSelector.cols = selector.cols;\n\t\t\t\tapiSelector.opts = selector.opts;\n\t\t\t\treturn api;\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\n\t\n\t\tlastIndexOf: __arrayProto.lastIndexOf || function (obj, start)\n\t\t{\n\t\t\t// Bit cheeky...\n\t\t\treturn this.indexOf.apply( this.toArray.reverse(), arguments );\n\t\t},\n\t\n\t\n\t\tlength:  0,\n\t\n\t\n\t\tmap: function ( fn )\n\t\t{\n\t\t\tvar a = [];\n\t\n\t\t\tif ( __arrayProto.map ) {\n\t\t\t\ta = __arrayProto.map.call( this, fn, this );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Compatibility for browsers without EMCA-252-5 (JS 1.6)\n\t\t\t\tfor ( var i=0, ien=this.length ; i<ien ; i++ ) {\n\t\t\t\t\ta.push( fn.call( this, this[i], i ) );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn new _Api( this.context, a );\n\t\t},\n\t\n\t\n\t\tpluck: function ( prop )\n\t\t{\n\t\t\treturn this.map( function ( el ) {\n\t\t\t\treturn el[ prop ];\n\t\t\t} );\n\t\t},\n\t\n\t\tpop:     __arrayProto.pop,\n\t\n\t\n\t\tpush:    __arrayProto.push,\n\t\n\t\n\t\t// Does not return an API instance\n\t\treduce: __arrayProto.reduce || function ( fn, init )\n\t\t{\n\t\t\treturn _fnReduce( this, fn, init, 0, this.length, 1 );\n\t\t},\n\t\n\t\n\t\treduceRight: __arrayProto.reduceRight || function ( fn, init )\n\t\t{\n\t\t\treturn _fnReduce( this, fn, init, this.length-1, -1, -1 );\n\t\t},\n\t\n\t\n\t\treverse: __arrayProto.reverse,\n\t\n\t\n\t\t// Object with rows, columns and opts\n\t\tselector: null,\n\t\n\t\n\t\tshift:   __arrayProto.shift,\n\t\n\t\n\t\tslice: function () {\n\t\t\treturn new _Api( this.context, this );\n\t\t},\n\t\n\t\n\t\tsort:    __arrayProto.sort, // ? name - order?\n\t\n\t\n\t\tsplice:  __arrayProto.splice,\n\t\n\t\n\t\ttoArray: function ()\n\t\t{\n\t\t\treturn __arrayProto.slice.call( this );\n\t\t},\n\t\n\t\n\t\tto$: function ()\n\t\t{\n\t\t\treturn $( this );\n\t\t},\n\t\n\t\n\t\ttoJQuery: function ()\n\t\t{\n\t\t\treturn $( this );\n\t\t},\n\t\n\t\n\t\tunique: function ()\n\t\t{\n\t\t\treturn new _Api( this.context, _unique(this) );\n\t\t},\n\t\n\t\n\t\tunshift: __arrayProto.unshift\n\t} );\n\t\n\t\n\t_Api.extend = function ( scope, obj, ext )\n\t{\n\t\t// Only extend API instances and static properties of the API\n\t\tif ( ! ext.length || ! obj || ( ! (obj instanceof _Api) && ! obj.__dt_wrapper ) ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar\n\t\t\ti, ien,\n\t\t\tj, jen,\n\t\t\tstruct, inner,\n\t\t\tmethodScoping = function ( scope, fn, struc ) {\n\t\t\t\treturn function () {\n\t\t\t\t\tvar ret = fn.apply( scope, arguments );\n\t\n\t\t\t\t\t// Method extension\n\t\t\t\t\t_Api.extend( ret, ret, struc.methodExt );\n\t\t\t\t\treturn ret;\n\t\t\t\t};\n\t\t\t};\n\t\n\t\tfor ( i=0, ien=ext.length ; i<ien ; i++ ) {\n\t\t\tstruct = ext[i];\n\t\n\t\t\t// Value\n\t\t\tobj[ struct.name ] = typeof struct.val === 'function' ?\n\t\t\t\tmethodScoping( scope, struct.val, struct ) :\n\t\t\t\t$.isPlainObject( struct.val ) ?\n\t\t\t\t\t{} :\n\t\t\t\t\tstruct.val;\n\t\n\t\t\tobj[ struct.name ].__dt_wrapper = true;\n\t\n\t\t\t// Property extension\n\t\t\t_Api.extend( scope, obj[ struct.name ], struct.propExt );\n\t\t}\n\t};\n\t\n\t\n\t// @todo - Is there need for an augment function?\n\t// _Api.augment = function ( inst, name )\n\t// {\n\t// \t// Find src object in the structure from the name\n\t// \tvar parts = name.split('.');\n\t\n\t// \t_Api.extend( inst, obj );\n\t// };\n\t\n\t\n\t//     [\n\t//       {\n\t//         name:      'data'                -- string   - Property name\n\t//         val:       function () {},       -- function - Api method (or undefined if just an object\n\t//         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n\t//         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n\t//       },\n\t//       {\n\t//         name:     'row'\n\t//         val:       {},\n\t//         methodExt: [ ... ],\n\t//         propExt:   [\n\t//           {\n\t//             name:      'data'\n\t//             val:       function () {},\n\t//             methodExt: [ ... ],\n\t//             propExt:   [ ... ]\n\t//           },\n\t//           ...\n\t//         ]\n\t//       }\n\t//     ]\n\t\n\t_Api.register = _api_register = function ( name, val )\n\t{\n\t\tif ( $.isArray( name ) ) {\n\t\t\tfor ( var j=0, jen=name.length ; j<jen ; j++ ) {\n\t\t\t\t_Api.register( name[j], val );\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar\n\t\t\ti, ien,\n\t\t\their = name.split('.'),\n\t\t\tstruct = __apiStruct,\n\t\t\tkey, method;\n\t\n\t\tvar find = function ( src, name ) {\n\t\t\tfor ( var i=0, ien=src.length ; i<ien ; i++ ) {\n\t\t\t\tif ( src[i].name === name ) {\n\t\t\t\t\treturn src[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\t\n\t\tfor ( i=0, ien=heir.length ; i<ien ; i++ ) {\n\t\t\tmethod = heir[i].indexOf('()') !== -1;\n\t\t\tkey = method ?\n\t\t\t\their[i].replace('()', '') :\n\t\t\t\their[i];\n\t\n\t\t\tvar src = find( struct, key );\n\t\t\tif ( ! src ) {\n\t\t\t\tsrc = {\n\t\t\t\t\tname:      key,\n\t\t\t\t\tval:       {},\n\t\t\t\t\tmethodExt: [],\n\t\t\t\t\tpropExt:   []\n\t\t\t\t};\n\t\t\t\tstruct.push( src );\n\t\t\t}\n\t\n\t\t\tif ( i === ien-1 ) {\n\t\t\t\tsrc.val = val;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tstruct = method ?\n\t\t\t\t\tsrc.methodExt :\n\t\t\t\t\tsrc.propExt;\n\t\t\t}\n\t\t}\n\t};\n\t\n\t\n\t_Api.registerPlural = _api_registerPlural = function ( pluralName, singularName, val ) {\n\t\t_Api.register( pluralName, val );\n\t\n\t\t_Api.register( singularName, function () {\n\t\t\tvar ret = val.apply( this, arguments );\n\t\n\t\t\tif ( ret === this ) {\n\t\t\t\t// Returned item is the API instance that was passed in, return it\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\telse if ( ret instanceof _Api ) {\n\t\t\t\t// New API instance returned, want the value from the first item\n\t\t\t\t// in the returned array for the singular result.\n\t\t\t\treturn ret.length ?\n\t\t\t\t\t$.isArray( ret[0] ) ?\n\t\t\t\t\t\tnew _Api( ret.context, ret[0] ) : // Array results are 'enhanced'\n\t\t\t\t\t\tret[0] :\n\t\t\t\t\tundefined;\n\t\t\t}\n\t\n\t\t\t// Non-API return - just fire it back\n\t\t\treturn ret;\n\t\t} );\n\t};\n\t\n\t\n\t/**\n\t * Selector for HTML tables. Apply the given selector to the give array of\n\t * DataTables settings objects.\n\t *\n\t * @param {string|integer} [selector] jQuery selector string or integer\n\t * @param  {array} Array of DataTables settings objects to be filtered\n\t * @return {array}\n\t * @ignore\n\t */\n\tvar __table_selector = function ( selector, a )\n\t{\n\t\t// Integer is used to pick out a table by index\n\t\tif ( typeof selector === 'number' ) {\n\t\t\treturn [ a[ selector ] ];\n\t\t}\n\t\n\t\t// Perform a jQuery selector on the table nodes\n\t\tvar nodes = $.map( a, function (el, i) {\n\t\t\treturn el.nTable;\n\t\t} );\n\t\n\t\treturn $(nodes)\n\t\t\t.filter( selector )\n\t\t\t.map( function (i) {\n\t\t\t\t// Need to translate back from the table node to the settings\n\t\t\t\tvar idx = $.inArray( this, nodes );\n\t\t\t\treturn a[ idx ];\n\t\t\t} )\n\t\t\t.toArray();\n\t};\n\t\n\t\n\t\n\t/**\n\t * Context selector for the API's context (i.e. the tables the API instance\n\t * refers to.\n\t *\n\t * @name    DataTable.Api#tables\n\t * @param {string|integer} [selector] Selector to pick which tables the iterator\n\t *   should operate on. If not given, all tables in the current context are\n\t *   used. This can be given as a jQuery selector (for example `':gt(0)'`) to\n\t *   select multiple tables or as an integer to select a single table.\n\t * @returns {DataTable.Api} Returns a new API instance if a selector is given.\n\t */\n\t_api_register( 'tables()', function ( selector ) {\n\t\t// A new instance is created if there was a selector specified\n\t\treturn selector ?\n\t\t\tnew _Api( __table_selector( selector, this.context ) ) :\n\t\t\tthis;\n\t} );\n\t\n\t\n\t_api_register( 'table()', function ( selector ) {\n\t\tvar tables = this.tables( selector );\n\t\tvar ctx = tables.context;\n\t\n\t\t// Truncate to the first matched table\n\t\treturn ctx.length ?\n\t\t\tnew _Api( ctx[0] ) :\n\t\t\ttables;\n\t} );\n\t\n\t\n\t_api_registerPlural( 'tables().nodes()', 'table().node()' , function () {\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\treturn ctx.nTable;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'tables().body()', 'table().body()' , function () {\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\treturn ctx.nTBody;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'tables().header()', 'table().header()' , function () {\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\treturn ctx.nTHead;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'tables().footer()', 'table().footer()' , function () {\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\treturn ctx.nTFoot;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'tables().containers()', 'table().container()' , function () {\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\treturn ctx.nTableWrapper;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t\n\t/**\n\t * Redraw the tables in the current context.\n\t */\n\t_api_register( 'draw()', function ( paging ) {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tif ( paging === 'page' ) {\n\t\t\t\t_fnDraw( settings );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif ( typeof paging === 'string' ) {\n\t\t\t\t\tpaging = paging === 'full-hold' ?\n\t\t\t\t\t\tfalse :\n\t\t\t\t\t\ttrue;\n\t\t\t\t}\n\t\n\t\t\t\t_fnReDraw( settings, paging===false );\n\t\t\t}\n\t\t} );\n\t} );\n\t\n\t\n\t\n\t/**\n\t * Get the current page index.\n\t *\n\t * @return {integer} Current page index (zero based)\n\t *//**\n\t * Set the current page.\n\t *\n\t * Note that if you attempt to show a page which does not exist, DataTables will\n\t * not throw an error, but rather reset the paging.\n\t *\n\t * @param {integer|string} action The paging action to take. This can be one of:\n\t *  * `integer` - The page index to jump to\n\t *  * `string` - An action to take:\n\t *    * `first` - Jump to first page.\n\t *    * `next` - Jump to the next page\n\t *    * `previous` - Jump to previous page\n\t *    * `last` - Jump to the last page.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'page()', function ( action ) {\n\t\tif ( action === undefined ) {\n\t\t\treturn this.page.info().page; // not an expensive call\n\t\t}\n\t\n\t\t// else, have an action to take on all tables\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnPageChange( settings, action );\n\t\t} );\n\t} );\n\t\n\t\n\t/**\n\t * Paging information for the first table in the current context.\n\t *\n\t * If you require paging information for another table, use the `table()` method\n\t * with a suitable selector.\n\t *\n\t * @return {object} Object with the following properties set:\n\t *  * `page` - Current page index (zero based - i.e. the first page is `0`)\n\t *  * `pages` - Total number of pages\n\t *  * `start` - Display index for the first record shown on the current page\n\t *  * `end` - Display index for the last record shown on the current page\n\t *  * `length` - Display length (number of records). Note that generally `start\n\t *    + length = end`, but this is not always true, for example if there are\n\t *    only 2 records to show on the final page, with a length of 10.\n\t *  * `recordsTotal` - Full data set length\n\t *  * `recordsDisplay` - Data set length once the current filtering criterion\n\t *    are applied.\n\t */\n\t_api_register( 'page.info()', function ( action ) {\n\t\tif ( this.context.length === 0 ) {\n\t\t\treturn undefined;\n\t\t}\n\t\n\t\tvar\n\t\t\tsettings   = this.context[0],\n\t\t\tstart      = settings._iDisplayStart,\n\t\t\tlen        = settings.oFeatures.bPaginate ? settings._iDisplayLength : -1,\n\t\t\tvisRecords = settings.fnRecordsDisplay(),\n\t\t\tall        = len === -1;\n\t\n\t\treturn {\n\t\t\t\"page\":           all ? 0 : Math.floor( start / len ),\n\t\t\t\"pages\":          all ? 1 : Math.ceil( visRecords / len ),\n\t\t\t\"start\":          start,\n\t\t\t\"end\":            settings.fnDisplayEnd(),\n\t\t\t\"length\":         len,\n\t\t\t\"recordsTotal\":   settings.fnRecordsTotal(),\n\t\t\t\"recordsDisplay\": visRecords,\n\t\t\t\"serverSide\":     _fnDataSource( settings ) === 'ssp'\n\t\t};\n\t} );\n\t\n\t\n\t/**\n\t * Get the current page length.\n\t *\n\t * @return {integer} Current page length. Note `-1` indicates that all records\n\t *   are to be shown.\n\t *//**\n\t * Set the current page length.\n\t *\n\t * @param {integer} Page length to set. Use `-1` to show all records.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'page.len()', function ( len ) {\n\t\t// Note that we can't call this function 'length()' because `length`\n\t\t// is a Javascript property of functions which defines how many arguments\n\t\t// the function expects.\n\t\tif ( len === undefined ) {\n\t\t\treturn this.context.length !== 0 ?\n\t\t\t\tthis.context[0]._iDisplayLength :\n\t\t\t\tundefined;\n\t\t}\n\t\n\t\t// else, set the page length\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnLengthChange( settings, len );\n\t\t} );\n\t} );\n\t\n\t\n\t\n\tvar __reload = function ( settings, holdPosition, callback ) {\n\t\t// Use the draw event to trigger a callback\n\t\tif ( callback ) {\n\t\t\tvar api = new _Api( settings );\n\t\n\t\t\tapi.one( 'draw', function () {\n\t\t\t\tcallback( api.ajax.json() );\n\t\t\t} );\n\t\t}\n\t\n\t\tif ( _fnDataSource( settings ) == 'ssp' ) {\n\t\t\t_fnReDraw( settings, holdPosition );\n\t\t}\n\t\telse {\n\t\t\t_fnProcessingDisplay( settings, true );\n\t\n\t\t\t// Cancel an existing request\n\t\t\tvar xhr = settings.jqXHR;\n\t\t\tif ( xhr && xhr.readyState !== 4 ) {\n\t\t\t\txhr.abort();\n\t\t\t}\n\t\n\t\t\t// Trigger xhr\n\t\t\t_fnBuildAjax( settings, [], function( json ) {\n\t\t\t\t_fnClearTable( settings );\n\t\n\t\t\t\tvar data = _fnAjaxDataSrc( settings, json );\n\t\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\t\t_fnAddData( settings, data[i] );\n\t\t\t\t}\n\t\n\t\t\t\t_fnReDraw( settings, holdPosition );\n\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t} );\n\t\t}\n\t};\n\t\n\t\n\t/**\n\t * Get the JSON response from the last Ajax request that DataTables made to the\n\t * server. Note that this returns the JSON from the first table in the current\n\t * context.\n\t *\n\t * @return {object} JSON received from the server.\n\t */\n\t_api_register( 'ajax.json()', function () {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( ctx.length > 0 ) {\n\t\t\treturn ctx[0].json;\n\t\t}\n\t\n\t\t// else return undefined;\n\t} );\n\t\n\t\n\t/**\n\t * Get the data submitted in the last Ajax request\n\t */\n\t_api_register( 'ajax.params()', function () {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( ctx.length > 0 ) {\n\t\t\treturn ctx[0].oAjaxData;\n\t\t}\n\t\n\t\t// else return undefined;\n\t} );\n\t\n\t\n\t/**\n\t * Reload tables from the Ajax data source. Note that this function will\n\t * automatically re-draw the table when the remote data has been loaded.\n\t *\n\t * @param {boolean} [reset=true] Reset (default) or hold the current paging\n\t *   position. A full re-sort and re-filter is performed when this method is\n\t *   called, which is why the pagination reset is the default action.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'ajax.reload()', function ( callback, resetPaging ) {\n\t\treturn this.iterator( 'table', function (settings) {\n\t\t\t__reload( settings, resetPaging===false, callback );\n\t\t} );\n\t} );\n\t\n\t\n\t/**\n\t * Get the current Ajax URL. Note that this returns the URL from the first\n\t * table in the current context.\n\t *\n\t * @return {string} Current Ajax source URL\n\t *//**\n\t * Set the Ajax URL. Note that this will set the URL for all tables in the\n\t * current context.\n\t *\n\t * @param {string} url URL to set.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'ajax.url()', function ( url ) {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( url === undefined ) {\n\t\t\t// get\n\t\t\tif ( ctx.length === 0 ) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tctx = ctx[0];\n\t\n\t\t\treturn ctx.ajax ?\n\t\t\t\t$.isPlainObject( ctx.ajax ) ?\n\t\t\t\t\tctx.ajax.url :\n\t\t\t\t\tctx.ajax :\n\t\t\t\tctx.sAjaxSource;\n\t\t}\n\t\n\t\t// set\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tif ( $.isPlainObject( settings.ajax ) ) {\n\t\t\t\tsettings.ajax.url = url;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsettings.ajax = url;\n\t\t\t}\n\t\t\t// No need to consider sAjaxSource here since DataTables gives priority\n\t\t\t// to `ajax` over `sAjaxSource`. So setting `ajax` here, renders any\n\t\t\t// value of `sAjaxSource` redundant.\n\t\t} );\n\t} );\n\t\n\t\n\t/**\n\t * Load data from the newly set Ajax URL. Note that this method is only\n\t * available when `ajax.url()` is used to set a URL. Additionally, this method\n\t * has the same effect as calling `ajax.reload()` but is provided for\n\t * convenience when setting a new URL. Like `ajax.reload()` it will\n\t * automatically redraw the table once the remote data has been loaded.\n\t *\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'ajax.url().load()', function ( callback, resetPaging ) {\n\t\t// Same as a reload, but makes sense to present it for easy access after a\n\t\t// url change\n\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\t__reload( ctx, resetPaging===false, callback );\n\t\t} );\n\t} );\n\t\n\t\n\t\n\t\n\tvar _selector_run = function ( type, selector, selectFn, settings, opts )\n\t{\n\t\tvar\n\t\t\tout = [], res,\n\t\t\ta, i, ien, j, jen,\n\t\t\tselectorType = typeof selector;\n\t\n\t\t// Can't just check for isArray here, as an API or jQuery instance might be\n\t\t// given with their array like look\n\t\tif ( ! selector || selectorType === 'string' || selectorType === 'function' || selector.length === undefined ) {\n\t\t\tselector = [ selector ];\n\t\t}\n\t\n\t\tfor ( i=0, ien=selector.length ; i<ien ; i++ ) {\n\t\t\t// Only split on simple strings - complex expressions will be jQuery selectors\n\t\t\ta = selector[i] && selector[i].split && ! selector[i].match(/[\\[\\(:]/) ?\n\t\t\t\tselector[i].split(',') :\n\t\t\t\t[ selector[i] ];\n\t\n\t\t\tfor ( j=0, jen=a.length ; j<jen ; j++ ) {\n\t\t\t\tres = selectFn( typeof a[j] === 'string' ? $.trim(a[j]) : a[j] );\n\t\n\t\t\t\tif ( res && res.length ) {\n\t\t\t\t\tout = out.concat( res );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// selector extensions\n\t\tvar ext = _ext.selector[ type ];\n\t\tif ( ext.length ) {\n\t\t\tfor ( i=0, ien=ext.length ; i<ien ; i++ ) {\n\t\t\t\tout = ext[i]( settings, opts, out );\n\t\t\t}\n\t\t}\n\t\n\t\treturn _unique( out );\n\t};\n\t\n\t\n\tvar _selector_opts = function ( opts )\n\t{\n\t\tif ( ! opts ) {\n\t\t\topts = {};\n\t\t}\n\t\n\t\t// Backwards compatibility for 1.9- which used the terminology filter rather\n\t\t// than search\n\t\tif ( opts.filter && opts.search === undefined ) {\n\t\t\topts.search = opts.filter;\n\t\t}\n\t\n\t\treturn $.extend( {\n\t\t\tsearch: 'none',\n\t\t\torder: 'current',\n\t\t\tpage: 'all'\n\t\t}, opts );\n\t};\n\t\n\t\n\tvar _selector_first = function ( inst )\n\t{\n\t\t// Reduce the API instance to the first item found\n\t\tfor ( var i=0, ien=inst.length ; i<ien ; i++ ) {\n\t\t\tif ( inst[i].length > 0 ) {\n\t\t\t\t// Assign the first element to the first item in the instance\n\t\t\t\t// and truncate the instance and context\n\t\t\t\tinst[0] = inst[i];\n\t\t\t\tinst[0].length = 1;\n\t\t\t\tinst.length = 1;\n\t\t\t\tinst.context = [ inst.context[i] ];\n\t\n\t\t\t\treturn inst;\n\t\t\t}\n\t\t}\n\t\n\t\t// Not found - return an empty instance\n\t\tinst.length = 0;\n\t\treturn inst;\n\t};\n\t\n\t\n\tvar _selector_row_indexes = function ( settings, opts )\n\t{\n\t\tvar\n\t\t\ti, ien, tmp, a=[],\n\t\t\tdisplayFiltered = settings.aiDisplay,\n\t\t\tdisplayMaster = settings.aiDisplayMaster;\n\t\n\t\tvar\n\t\t\tsearch = opts.search,  // none, applied, removed\n\t\t\torder  = opts.order,   // applied, current, index (original - compatibility with 1.9)\n\t\t\tpage   = opts.page;    // all, current\n\t\n\t\tif ( _fnDataSource( settings ) == 'ssp' ) {\n\t\t\t// In server-side processing mode, most options are irrelevant since\n\t\t\t// rows not shown don't exist and the index order is the applied order\n\t\t\t// Removed is a special case - for consistency just return an empty\n\t\t\t// array\n\t\t\treturn search === 'removed' ?\n\t\t\t\t[] :\n\t\t\t\t_range( 0, displayMaster.length );\n\t\t}\n\t\telse if ( page == 'current' ) {\n\t\t\t// Current page implies that order=current and fitler=applied, since it is\n\t\t\t// fairly senseless otherwise, regardless of what order and search actually\n\t\t\t// are\n\t\t\tfor ( i=settings._iDisplayStart, ien=settings.fnDisplayEnd() ; i<ien ; i++ ) {\n\t\t\t\ta.push( displayFiltered[i] );\n\t\t\t}\n\t\t}\n\t\telse if ( order == 'current' || order == 'applied' ) {\n\t\t\tif ( search == 'none') {\n\t\t\t\ta = displayMaster.slice();\n\t\t\t}\n\t\t\telse if ( search == 'applied' ) {\n\t\t\t\ta = displayFiltered.slice();\n\t\t\t}\n\t\t\telse if ( search == 'removed' ) {\n\t\t\t\t// O(n+m) solution by creating a hash map\n\t\t\t\tvar displayFilteredMap = {};\n\t\n\t\t\t\tfor ( var i=0, ien=displayFiltered.length ; i<ien ; i++ ) {\n\t\t\t\t\tdisplayFilteredMap[displayFiltered[i]] = null;\n\t\t\t\t}\n\t\n\t\t\t\ta = $.map( displayMaster, function (el) {\n\t\t\t\t\treturn ! displayFilteredMap.hasOwnProperty(el) ?\n\t\t\t\t\t\tel :\n\t\t\t\t\t\tnull;\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t\telse if ( order == 'index' || order == 'original' ) {\n\t\t\tfor ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\t\tif ( search == 'none' ) {\n\t\t\t\t\ta.push( i );\n\t\t\t\t}\n\t\t\t\telse { // applied | removed\n\t\t\t\t\ttmp = $.inArray( i, displayFiltered );\n\t\n\t\t\t\t\tif ((tmp === -1 && search == 'removed') ||\n\t\t\t\t\t\t(tmp >= 0   && search == 'applied') )\n\t\t\t\t\t{\n\t\t\t\t\t\ta.push( i );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn a;\n\t};\n\t\n\t\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Rows\n\t *\n\t * {}          - no selector - use all available rows\n\t * {integer}   - row aoData index\n\t * {node}      - TR node\n\t * {string}    - jQuery selector to apply to the TR elements\n\t * {array}     - jQuery array of nodes, or simply an array of TR nodes\n\t *\n\t */\n\tvar __row_selector = function ( settings, selector, opts )\n\t{\n\t\tvar rows;\n\t\tvar run = function ( sel ) {\n\t\t\tvar selInt = _intVal( sel );\n\t\t\tvar i, ien;\n\t\t\tvar aoData = settings.aoData;\n\t\n\t\t\t// Short cut - selector is a number and no options provided (default is\n\t\t\t// all records, so no need to check if the index is in there, since it\n\t\t\t// must be - dev error if the index doesn't exist).\n\t\t\tif ( selInt !== null && ! opts ) {\n\t\t\t\treturn [ selInt ];\n\t\t\t}\n\t\n\t\t\tif ( ! rows ) {\n\t\t\t\trows = _selector_row_indexes( settings, opts );\n\t\t\t}\n\t\n\t\t\tif ( selInt !== null && $.inArray( selInt, rows ) !== -1 ) {\n\t\t\t\t// Selector - integer\n\t\t\t\treturn [ selInt ];\n\t\t\t}\n\t\t\telse if ( sel === null || sel === undefined || sel === '' ) {\n\t\t\t\t// Selector - none\n\t\t\t\treturn rows;\n\t\t\t}\n\t\n\t\t\t// Selector - function\n\t\t\tif ( typeof sel === 'function' ) {\n\t\t\t\treturn $.map( rows, function (idx) {\n\t\t\t\t\tvar row = aoData[ idx ];\n\t\t\t\t\treturn sel( idx, row._aData, row.nTr ) ? idx : null;\n\t\t\t\t} );\n\t\t\t}\n\t\n\t\t\t// Selector - node\n\t\t\tif ( sel.nodeName ) {\n\t\t\t\tvar rowIdx = sel._DT_RowIndex;  // Property added by DT for fast lookup\n\t\t\t\tvar cellIdx = sel._DT_CellIndex;\n\t\n\t\t\t\tif ( rowIdx !== undefined ) {\n\t\t\t\t\t// Make sure that the row is actually still present in the table\n\t\t\t\t\treturn aoData[ rowIdx ] && aoData[ rowIdx ].nTr === sel ?\n\t\t\t\t\t\t[ rowIdx ] :\n\t\t\t\t\t\t[];\n\t\t\t\t}\n\t\t\t\telse if ( cellIdx ) {\n\t\t\t\t\treturn aoData[ cellIdx.row ] && aoData[ cellIdx.row ].nTr === sel ?\n\t\t\t\t\t\t[ cellIdx.row ] :\n\t\t\t\t\t\t[];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvar host = $(sel).closest('*[data-dt-row]');\n\t\t\t\t\treturn host.length ?\n\t\t\t\t\t\t[ host.data('dt-row') ] :\n\t\t\t\t\t\t[];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// ID selector. Want to always be able to select rows by id, regardless\n\t\t\t// of if the tr element has been created or not, so can't rely upon\n\t\t\t// jQuery here - hence a custom implementation. This does not match\n\t\t\t// Sizzle's fast selector or HTML4 - in HTML5 the ID can be anything,\n\t\t\t// but to select it using a CSS selector engine (like Sizzle or\n\t\t\t// querySelect) it would need to need to be escaped for some characters.\n\t\t\t// DataTables simplifies this for row selectors since you can select\n\t\t\t// only a row. A # indicates an id any anything that follows is the id -\n\t\t\t// unescaped.\n\t\t\tif ( typeof sel === 'string' && sel.charAt(0) === '#' ) {\n\t\t\t\t// get row index from id\n\t\t\t\tvar rowObj = settings.aIds[ sel.replace( /^#/, '' ) ];\n\t\t\t\tif ( rowObj !== undefined ) {\n\t\t\t\t\treturn [ rowObj.idx ];\n\t\t\t\t}\n\t\n\t\t\t\t// need to fall through to jQuery in case there is DOM id that\n\t\t\t\t// matches\n\t\t\t}\n\t\t\t\n\t\t\t// Get nodes in the order from the `rows` array with null values removed\n\t\t\tvar nodes = _removeEmpty(\n\t\t\t\t_pluck_order( settings.aoData, rows, 'nTr' )\n\t\t\t);\n\t\n\t\t\t// Selector - jQuery selector string, array of nodes or jQuery object/\n\t\t\t// As jQuery's .filter() allows jQuery objects to be passed in filter,\n\t\t\t// it also allows arrays, so this will cope with all three options\n\t\t\treturn $(nodes)\n\t\t\t\t.filter( sel )\n\t\t\t\t.map( function () {\n\t\t\t\t\treturn this._DT_RowIndex;\n\t\t\t\t} )\n\t\t\t\t.toArray();\n\t\t};\n\t\n\t\treturn _selector_run( 'row', selector, run, settings, opts );\n\t};\n\t\n\t\n\t_api_register( 'rows()', function ( selector, opts ) {\n\t\t// argument shifting\n\t\tif ( selector === undefined ) {\n\t\t\tselector = '';\n\t\t}\n\t\telse if ( $.isPlainObject( selector ) ) {\n\t\t\topts = selector;\n\t\t\tselector = '';\n\t\t}\n\t\n\t\topts = _selector_opts( opts );\n\t\n\t\tvar inst = this.iterator( 'table', function ( settings ) {\n\t\t\treturn __row_selector( settings, selector, opts );\n\t\t}, 1 );\n\t\n\t\t// Want argument shifting here and in __row_selector?\n\t\tinst.selector.rows = selector;\n\t\tinst.selector.opts = opts;\n\t\n\t\treturn inst;\n\t} );\n\t\n\t_api_register( 'rows().nodes()', function () {\n\t\treturn this.iterator( 'row', function ( settings, row ) {\n\t\t\treturn settings.aoData[ row ].nTr || undefined;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_register( 'rows().data()', function () {\n\t\treturn this.iterator( true, 'rows', function ( settings, rows ) {\n\t\t\treturn _pluck_order( settings.aoData, rows, '_aData' );\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'rows().cache()', 'row().cache()', function ( type ) {\n\t\treturn this.iterator( 'row', function ( settings, row ) {\n\t\t\tvar r = settings.aoData[ row ];\n\t\t\treturn type === 'search' ? r._aFilterData : r._aSortData;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'rows().invalidate()', 'row().invalidate()', function ( src ) {\n\t\treturn this.iterator( 'row', function ( settings, row ) {\n\t\t\t_fnInvalidate( settings, row, src );\n\t\t} );\n\t} );\n\t\n\t_api_registerPlural( 'rows().indexes()', 'row().index()', function () {\n\t\treturn this.iterator( 'row', function ( settings, row ) {\n\t\t\treturn row;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'rows().ids()', 'row().id()', function ( hash ) {\n\t\tvar a = [];\n\t\tvar context = this.context;\n\t\n\t\t// `iterator` will drop undefined values, but in this case we want them\n\t\tfor ( var i=0, ien=context.length ; i<ien ; i++ ) {\n\t\t\tfor ( var j=0, jen=this[i].length ; j<jen ; j++ ) {\n\t\t\t\tvar id = context[i].rowIdFn( context[i].aoData[ this[i][j] ]._aData );\n\t\t\t\ta.push( (hash === true ? '#' : '' )+ id );\n\t\t\t}\n\t\t}\n\t\n\t\treturn new _Api( context, a );\n\t} );\n\t\n\t_api_registerPlural( 'rows().remove()', 'row().remove()', function () {\n\t\tvar that = this;\n\t\n\t\tthis.iterator( 'row', function ( settings, row, thatIdx ) {\n\t\t\tvar data = settings.aoData;\n\t\t\tvar rowData = data[ row ];\n\t\t\tvar i, ien, j, jen;\n\t\t\tvar loopRow, loopCells;\n\t\n\t\t\tdata.splice( row, 1 );\n\t\n\t\t\t// Update the cached indexes\n\t\t\tfor ( i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\tloopRow = data[i];\n\t\t\t\tloopCells = loopRow.anCells;\n\t\n\t\t\t\t// Rows\n\t\t\t\tif ( loopRow.nTr !== null ) {\n\t\t\t\t\tloopRow.nTr._DT_RowIndex = i;\n\t\t\t\t}\n\t\n\t\t\t\t// Cells\n\t\t\t\tif ( loopCells !== null ) {\n\t\t\t\t\tfor ( j=0, jen=loopCells.length ; j<jen ; j++ ) {\n\t\t\t\t\t\tloopCells[j]._DT_CellIndex.row = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Delete from the display arrays\n\t\t\t_fnDeleteIndex( settings.aiDisplayMaster, row );\n\t\t\t_fnDeleteIndex( settings.aiDisplay, row );\n\t\t\t_fnDeleteIndex( that[ thatIdx ], row, false ); // maintain local indexes\n\t\n\t\t\t// For server-side processing tables - subtract the deleted row from the count\n\t\t\tif ( settings._iRecordsDisplay > 0 ) {\n\t\t\t\tsettings._iRecordsDisplay--;\n\t\t\t}\n\t\n\t\t\t// Check for an 'overflow' they case for displaying the table\n\t\t\t_fnLengthOverflow( settings );\n\t\n\t\t\t// Remove the row's ID reference if there is one\n\t\t\tvar id = settings.rowIdFn( rowData._aData );\n\t\t\tif ( id !== undefined ) {\n\t\t\t\tdelete settings.aIds[ id ];\n\t\t\t}\n\t\t} );\n\t\n\t\tthis.iterator( 'table', function ( settings ) {\n\t\t\tfor ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\t\tsettings.aoData[i].idx = i;\n\t\t\t}\n\t\t} );\n\t\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( 'rows.add()', function ( rows ) {\n\t\tvar newRows = this.iterator( 'table', function ( settings ) {\n\t\t\t\tvar row, i, ien;\n\t\t\t\tvar out = [];\n\t\n\t\t\t\tfor ( i=0, ien=rows.length ; i<ien ; i++ ) {\n\t\t\t\t\trow = rows[i];\n\t\n\t\t\t\t\tif ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {\n\t\t\t\t\t\tout.push( _fnAddTr( settings, row )[0] );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tout.push( _fnAddData( settings, row ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn out;\n\t\t\t}, 1 );\n\t\n\t\t// Return an Api.rows() extended instance, so rows().nodes() etc can be used\n\t\tvar modRows = this.rows( -1 );\n\t\tmodRows.pop();\n\t\t$.merge( modRows, newRows );\n\t\n\t\treturn modRows;\n\t} );\n\t\n\t\n\t\n\t\n\t\n\t/**\n\t *\n\t */\n\t_api_register( 'row()', function ( selector, opts ) {\n\t\treturn _selector_first( this.rows( selector, opts ) );\n\t} );\n\t\n\t\n\t_api_register( 'row().data()', function ( data ) {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( data === undefined ) {\n\t\t\t// Get\n\t\t\treturn ctx.length && this.length ?\n\t\t\t\tctx[0].aoData[ this[0] ]._aData :\n\t\t\t\tundefined;\n\t\t}\n\t\n\t\t// Set\n\t\tvar row = ctx[0].aoData[ this[0] ];\n\t\trow._aData = data;\n\t\n\t\t// If the DOM has an id, and the data source is an array\n\t\tif ( $.isArray( data ) && row.nTr.id ) {\n\t\t\t_fnSetObjectDataFn( ctx[0].rowId )( data, row.nTr.id );\n\t\t}\n\t\n\t\t// Automatically invalidate\n\t\t_fnInvalidate( ctx[0], this[0], 'data' );\n\t\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( 'row().node()', function () {\n\t\tvar ctx = this.context;\n\t\n\t\treturn ctx.length && this.length ?\n\t\t\tctx[0].aoData[ this[0] ].nTr || null :\n\t\t\tnull;\n\t} );\n\t\n\t\n\t_api_register( 'row.add()', function ( row ) {\n\t\t// Allow a jQuery object to be passed in - only a single row is added from\n\t\t// it though - the first element in the set\n\t\tif ( row instanceof $ && row.length ) {\n\t\t\trow = row[0];\n\t\t}\n\t\n\t\tvar rows = this.iterator( 'table', function ( settings ) {\n\t\t\tif ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {\n\t\t\t\treturn _fnAddTr( settings, row )[0];\n\t\t\t}\n\t\t\treturn _fnAddData( settings, row );\n\t\t} );\n\t\n\t\t// Return an Api.rows() extended instance, with the newly added row selected\n\t\treturn this.row( rows[0] );\n\t} );\n\t\n\t\n\t\n\tvar __details_add = function ( ctx, row, data, klass )\n\t{\n\t\t// Convert to array of TR elements\n\t\tvar rows = [];\n\t\tvar addRow = function ( r, k ) {\n\t\t\t// Recursion to allow for arrays of jQuery objects\n\t\t\tif ( $.isArray( r ) || r instanceof $ ) {\n\t\t\t\tfor ( var i=0, ien=r.length ; i<ien ; i++ ) {\n\t\t\t\t\taddRow( r[i], k );\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// If we get a TR element, then just add it directly - up to the dev\n\t\t\t// to add the correct number of columns etc\n\t\t\tif ( r.nodeName && r.nodeName.toLowerCase() === 'tr' ) {\n\t\t\t\trows.push( r );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Otherwise create a row with a wrapper\n\t\t\t\tvar created = $('<tr><td/></tr>').addClass( k );\n\t\t\t\t$('td', created)\n\t\t\t\t\t.addClass( k )\n\t\t\t\t\t.html( r )\n\t\t\t\t\t[0].colSpan = _fnVisbleColumns( ctx );\n\t\n\t\t\t\trows.push( created[0] );\n\t\t\t}\n\t\t};\n\t\n\t\taddRow( data, klass );\n\t\n\t\tif ( row._details ) {\n\t\t\trow._details.detach();\n\t\t}\n\t\n\t\trow._details = $(rows);\n\t\n\t\t// If the children were already shown, that state should be retained\n\t\tif ( row._detailsShow ) {\n\t\t\trow._details.insertAfter( row.nTr );\n\t\t}\n\t};\n\t\n\t\n\tvar __details_remove = function ( api, idx )\n\t{\n\t\tvar ctx = api.context;\n\t\n\t\tif ( ctx.length ) {\n\t\t\tvar row = ctx[0].aoData[ idx !== undefined ? idx : api[0] ];\n\t\n\t\t\tif ( row && row._details ) {\n\t\t\t\trow._details.remove();\n\t\n\t\t\t\trow._detailsShow = undefined;\n\t\t\t\trow._details = undefined;\n\t\t\t}\n\t\t}\n\t};\n\t\n\t\n\tvar __details_display = function ( api, show ) {\n\t\tvar ctx = api.context;\n\t\n\t\tif ( ctx.length && api.length ) {\n\t\t\tvar row = ctx[0].aoData[ api[0] ];\n\t\n\t\t\tif ( row._details ) {\n\t\t\t\trow._detailsShow = show;\n\t\n\t\t\t\tif ( show ) {\n\t\t\t\t\trow._details.insertAfter( row.nTr );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\trow._details.detach();\n\t\t\t\t}\n\t\n\t\t\t\t__details_events( ctx[0] );\n\t\t\t}\n\t\t}\n\t};\n\t\n\t\n\tvar __details_events = function ( settings )\n\t{\n\t\tvar api = new _Api( settings );\n\t\tvar namespace = '.dt.DT_details';\n\t\tvar drawEvent = 'draw'+namespace;\n\t\tvar colvisEvent = 'column-visibility'+namespace;\n\t\tvar destroyEvent = 'destroy'+namespace;\n\t\tvar data = settings.aoData;\n\t\n\t\tapi.off( drawEvent +' '+ colvisEvent +' '+ destroyEvent );\n\t\n\t\tif ( _pluck( data, '_details' ).length > 0 ) {\n\t\t\t// On each draw, insert the required elements into the document\n\t\t\tapi.on( drawEvent, function ( e, ctx ) {\n\t\t\t\tif ( settings !== ctx ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tapi.rows( {page:'current'} ).eq(0).each( function (idx) {\n\t\t\t\t\t// Internal data grab\n\t\t\t\t\tvar row = data[ idx ];\n\t\n\t\t\t\t\tif ( row._detailsShow ) {\n\t\t\t\t\t\trow._details.insertAfter( row.nTr );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t} );\n\t\n\t\t\t// Column visibility change - update the colspan\n\t\t\tapi.on( colvisEvent, function ( e, ctx, idx, vis ) {\n\t\t\t\tif ( settings !== ctx ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\t// Update the colspan for the details rows (note, only if it already has\n\t\t\t\t// a colspan)\n\t\t\t\tvar row, visible = _fnVisbleColumns( ctx );\n\t\n\t\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\t\trow = data[i];\n\t\n\t\t\t\t\tif ( row._details ) {\n\t\t\t\t\t\trow._details.children('td[colspan]').attr('colspan', visible );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\n\t\t\t// Table destroyed - nuke any child rows\n\t\t\tapi.on( destroyEvent, function ( e, ctx ) {\n\t\t\t\tif ( settings !== ctx ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\t\tif ( data[i]._details ) {\n\t\t\t\t\t\t__details_remove( api, i );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t};\n\t\n\t// Strings for the method names to help minification\n\tvar _emp = '';\n\tvar _child_obj = _emp+'row().child';\n\tvar _child_mth = _child_obj+'()';\n\t\n\t// data can be:\n\t//  tr\n\t//  string\n\t//  jQuery or array of any of the above\n\t_api_register( _child_mth, function ( data, klass ) {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( data === undefined ) {\n\t\t\t// get\n\t\t\treturn ctx.length && this.length ?\n\t\t\t\tctx[0].aoData[ this[0] ]._details :\n\t\t\t\tundefined;\n\t\t}\n\t\telse if ( data === true ) {\n\t\t\t// show\n\t\t\tthis.child.show();\n\t\t}\n\t\telse if ( data === false ) {\n\t\t\t// remove\n\t\t\t__details_remove( this );\n\t\t}\n\t\telse if ( ctx.length && this.length ) {\n\t\t\t// set\n\t\t\t__details_add( ctx[0], ctx[0].aoData[ this[0] ], data, klass );\n\t\t}\n\t\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( [\n\t\t_child_obj+'.show()',\n\t\t_child_mth+'.show()' // only when `child()` was called with parameters (without\n\t], function ( show ) {   // it returns an object and this method is not executed)\n\t\t__details_display( this, true );\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( [\n\t\t_child_obj+'.hide()',\n\t\t_child_mth+'.hide()' // only when `child()` was called with parameters (without\n\t], function () {         // it returns an object and this method is not executed)\n\t\t__details_display( this, false );\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( [\n\t\t_child_obj+'.remove()',\n\t\t_child_mth+'.remove()' // only when `child()` was called with parameters (without\n\t], function () {           // it returns an object and this method is not executed)\n\t\t__details_remove( this );\n\t\treturn this;\n\t} );\n\t\n\t\n\t_api_register( _child_obj+'.isShown()', function () {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( ctx.length && this.length ) {\n\t\t\t// _detailsShown as false or undefined will fall through to return false\n\t\t\treturn ctx[0].aoData[ this[0] ]._detailsShow || false;\n\t\t}\n\t\treturn false;\n\t} );\n\t\n\t\n\t\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Columns\n\t *\n\t * {integer}           - column index (>=0 count from left, <0 count from right)\n\t * \"{integer}:visIdx\"  - visible column index (i.e. translate to column index)  (>=0 count from left, <0 count from right)\n\t * \"{integer}:visible\" - alias for {integer}:visIdx  (>=0 count from left, <0 count from right)\n\t * \"{string}:name\"     - column name\n\t * \"{string}\"          - jQuery selector on column header nodes\n\t *\n\t */\n\t\n\t// can be an array of these items, comma separated list, or an array of comma\n\t// separated lists\n\t\n\tvar __re_column_selector = /^([^:]+):(name|visIdx|visible)$/;\n\t\n\t\n\t// r1 and r2 are redundant - but it means that the parameters match for the\n\t// iterator callback in columns().data()\n\tvar __columnData = function ( settings, column, r1, r2, rows ) {\n\t\tvar a = [];\n\t\tfor ( var row=0, ien=rows.length ; row<ien ; row++ ) {\n\t\t\ta.push( _fnGetCellData( settings, rows[row], column ) );\n\t\t}\n\t\treturn a;\n\t};\n\t\n\t\n\tvar __column_selector = function ( settings, selector, opts )\n\t{\n\t\tvar\n\t\t\tcolumns = settings.aoColumns,\n\t\t\tnames = _pluck( columns, 'sName' ),\n\t\t\tnodes = _pluck( columns, 'nTh' );\n\t\n\t\tvar run = function ( s ) {\n\t\t\tvar selInt = _intVal( s );\n\t\n\t\t\t// Selector - all\n\t\t\tif ( s === '' ) {\n\t\t\t\treturn _range( columns.length );\n\t\t\t}\n\t\n\t\t\t// Selector - index\n\t\t\tif ( selInt !== null ) {\n\t\t\t\treturn [ selInt >= 0 ?\n\t\t\t\t\tselInt : // Count from left\n\t\t\t\t\tcolumns.length + selInt // Count from right (+ because its a negative value)\n\t\t\t\t];\n\t\t\t}\n\t\n\t\t\t// Selector = function\n\t\t\tif ( typeof s === 'function' ) {\n\t\t\t\tvar rows = _selector_row_indexes( settings, opts );\n\t\n\t\t\t\treturn $.map( columns, function (col, idx) {\n\t\t\t\t\treturn s(\n\t\t\t\t\t\t\tidx,\n\t\t\t\t\t\t\t__columnData( settings, idx, 0, 0, rows ),\n\t\t\t\t\t\t\tnodes[ idx ]\n\t\t\t\t\t\t) ? idx : null;\n\t\t\t\t} );\n\t\t\t}\n\t\n\t\t\t// jQuery or string selector\n\t\t\tvar match = typeof s === 'string' ?\n\t\t\t\ts.match( __re_column_selector ) :\n\t\t\t\t'';\n\t\n\t\t\tif ( match ) {\n\t\t\t\tswitch( match[2] ) {\n\t\t\t\t\tcase 'visIdx':\n\t\t\t\t\tcase 'visible':\n\t\t\t\t\t\tvar idx = parseInt( match[1], 10 );\n\t\t\t\t\t\t// Visible index given, convert to column index\n\t\t\t\t\t\tif ( idx < 0 ) {\n\t\t\t\t\t\t\t// Counting from the right\n\t\t\t\t\t\t\tvar visColumns = $.map( columns, function (col,i) {\n\t\t\t\t\t\t\t\treturn col.bVisible ? i : null;\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\treturn [ visColumns[ visColumns.length + idx ] ];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Counting from the left\n\t\t\t\t\t\treturn [ _fnVisibleToColumnIndex( settings, idx ) ];\n\t\n\t\t\t\t\tcase 'name':\n\t\t\t\t\t\t// match by name. `names` is column index complete and in order\n\t\t\t\t\t\treturn $.map( names, function (name, i) {\n\t\t\t\t\t\t\treturn name === match[1] ? i : null;\n\t\t\t\t\t\t} );\n\t\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Cell in the table body\n\t\t\tif ( s.nodeName && s._DT_CellIndex ) {\n\t\t\t\treturn [ s._DT_CellIndex.column ];\n\t\t\t}\n\t\n\t\t\t// jQuery selector on the TH elements for the columns\n\t\t\tvar jqResult = $( nodes )\n\t\t\t\t.filter( s )\n\t\t\t\t.map( function () {\n\t\t\t\t\treturn $.inArray( this, nodes ); // `nodes` is column index complete and in order\n\t\t\t\t} )\n\t\t\t\t.toArray();\n\t\n\t\t\tif ( jqResult.length || ! s.nodeName ) {\n\t\t\t\treturn jqResult;\n\t\t\t}\n\t\n\t\t\t// Otherwise a node which might have a `dt-column` data attribute, or be\n\t\t\t// a child or such an element\n\t\t\tvar host = $(s).closest('*[data-dt-column]');\n\t\t\treturn host.length ?\n\t\t\t\t[ host.data('dt-column') ] :\n\t\t\t\t[];\n\t\t};\n\t\n\t\treturn _selector_run( 'column', selector, run, settings, opts );\n\t};\n\t\n\t\n\tvar __setColumnVis = function ( settings, column, vis ) {\n\t\tvar\n\t\t\tcols = settings.aoColumns,\n\t\t\tcol  = cols[ column ],\n\t\t\tdata = settings.aoData,\n\t\t\trow, cells, i, ien, tr;\n\t\n\t\t// Get\n\t\tif ( vis === undefined ) {\n\t\t\treturn col.bVisible;\n\t\t}\n\t\n\t\t// Set\n\t\t// No change\n\t\tif ( col.bVisible === vis ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tif ( vis ) {\n\t\t\t// Insert column\n\t\t\t// Need to decide if we should use appendChild or insertBefore\n\t\t\tvar insertBefore = $.inArray( true, _pluck(cols, 'bVisible'), column+1 );\n\t\n\t\t\tfor ( i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\ttr = data[i].nTr;\n\t\t\t\tcells = data[i].anCells;\n\t\n\t\t\t\tif ( tr ) {\n\t\t\t\t\t// insertBefore can act like appendChild if 2nd arg is null\n\t\t\t\t\ttr.insertBefore( cells[ column ], cells[ insertBefore ] || null );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// Remove column\n\t\t\t$( _pluck( settings.aoData, 'anCells', column ) ).detach();\n\t\t}\n\t\n\t\t// Common actions\n\t\tcol.bVisible = vis;\n\t\t_fnDrawHead( settings, settings.aoHeader );\n\t\t_fnDrawHead( settings, settings.aoFooter );\n\t\n\t\t// Update colspan for no records display. Child rows and extensions will use their own\n\t\t// listeners to do this - only need to update the empty table item here\n\t\tif ( ! settings.aiDisplay.length ) {\n\t\t\t$(settings.nTBody).find('td[colspan]').attr('colspan', _fnVisbleColumns(settings));\n\t\t}\n\t\n\t\t_fnSaveState( settings );\n\t};\n\t\n\t\n\t_api_register( 'columns()', function ( selector, opts ) {\n\t\t// argument shifting\n\t\tif ( selector === undefined ) {\n\t\t\tselector = '';\n\t\t}\n\t\telse if ( $.isPlainObject( selector ) ) {\n\t\t\topts = selector;\n\t\t\tselector = '';\n\t\t}\n\t\n\t\topts = _selector_opts( opts );\n\t\n\t\tvar inst = this.iterator( 'table', function ( settings ) {\n\t\t\treturn __column_selector( settings, selector, opts );\n\t\t}, 1 );\n\t\n\t\t// Want argument shifting here and in _row_selector?\n\t\tinst.selector.cols = selector;\n\t\tinst.selector.opts = opts;\n\t\n\t\treturn inst;\n\t} );\n\t\n\t_api_registerPlural( 'columns().header()', 'column().header()', function ( selector, opts ) {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\treturn settings.aoColumns[column].nTh;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().footer()', 'column().footer()', function ( selector, opts ) {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\treturn settings.aoColumns[column].nTf;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().data()', 'column().data()', function () {\n\t\treturn this.iterator( 'column-rows', __columnData, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().dataSrc()', 'column().dataSrc()', function () {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\treturn settings.aoColumns[column].mData;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().cache()', 'column().cache()', function ( type ) {\n\t\treturn this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\n\t\t\treturn _pluck_order( settings.aoData, rows,\n\t\t\t\ttype === 'search' ? '_aFilterData' : '_aSortData', column\n\t\t\t);\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().nodes()', 'column().nodes()', function () {\n\t\treturn this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\n\t\t\treturn _pluck_order( settings.aoData, rows, 'anCells', column ) ;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_registerPlural( 'columns().visible()', 'column().visible()', function ( vis, calc ) {\n\t\tvar ret = this.iterator( 'column', function ( settings, column ) {\n\t\t\tif ( vis === undefined ) {\n\t\t\t\treturn settings.aoColumns[ column ].bVisible;\n\t\t\t} // else\n\t\t\t__setColumnVis( settings, column, vis );\n\t\t} );\n\t\n\t\t// Group the column visibility changes\n\t\tif ( vis !== undefined ) {\n\t\t\t// Second loop once the first is done for events\n\t\t\tthis.iterator( 'column', function ( settings, column ) {\n\t\t\t\t_fnCallbackFire( settings, null, 'column-visibility', [settings, column, vis, calc] );\n\t\t\t} );\n\t\n\t\t\tif ( calc === undefined || calc ) {\n\t\t\t\tthis.columns.adjust();\n\t\t\t}\n\t\t}\n\t\n\t\treturn ret;\n\t} );\n\t\n\t_api_registerPlural( 'columns().indexes()', 'column().index()', function ( type ) {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\treturn type === 'visible' ?\n\t\t\t\t_fnColumnIndexToVisible( settings, column ) :\n\t\t\t\tcolumn;\n\t\t}, 1 );\n\t} );\n\t\n\t_api_register( 'columns.adjust()', function () {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnAdjustColumnSizing( settings );\n\t\t}, 1 );\n\t} );\n\t\n\t_api_register( 'column.index()', function ( type, idx ) {\n\t\tif ( this.context.length !== 0 ) {\n\t\t\tvar ctx = this.context[0];\n\t\n\t\t\tif ( type === 'fromVisible' || type === 'toData' ) {\n\t\t\t\treturn _fnVisibleToColumnIndex( ctx, idx );\n\t\t\t}\n\t\t\telse if ( type === 'fromData' || type === 'toVisible' ) {\n\t\t\t\treturn _fnColumnIndexToVisible( ctx, idx );\n\t\t\t}\n\t\t}\n\t} );\n\t\n\t_api_register( 'column()', function ( selector, opts ) {\n\t\treturn _selector_first( this.columns( selector, opts ) );\n\t} );\n\t\n\t\n\t\n\tvar __cell_selector = function ( settings, selector, opts )\n\t{\n\t\tvar data = settings.aoData;\n\t\tvar rows = _selector_row_indexes( settings, opts );\n\t\tvar cells = _removeEmpty( _pluck_order( data, rows, 'anCells' ) );\n\t\tvar allCells = $( [].concat.apply([], cells) );\n\t\tvar row;\n\t\tvar columns = settings.aoColumns.length;\n\t\tvar a, i, ien, j, o, host;\n\t\n\t\tvar run = function ( s ) {\n\t\t\tvar fnSelector = typeof s === 'function';\n\t\n\t\t\tif ( s === null || s === undefined || fnSelector ) {\n\t\t\t\t// All cells and function selectors\n\t\t\t\ta = [];\n\t\n\t\t\t\tfor ( i=0, ien=rows.length ; i<ien ; i++ ) {\n\t\t\t\t\trow = rows[i];\n\t\n\t\t\t\t\tfor ( j=0 ; j<columns ; j++ ) {\n\t\t\t\t\t\to = {\n\t\t\t\t\t\t\trow: row,\n\t\t\t\t\t\t\tcolumn: j\n\t\t\t\t\t\t};\n\t\n\t\t\t\t\t\tif ( fnSelector ) {\n\t\t\t\t\t\t\t// Selector - function\n\t\t\t\t\t\t\thost = data[ row ];\n\t\n\t\t\t\t\t\t\tif ( s( o, _fnGetCellData(settings, row, j), host.anCells ? host.anCells[j] : null ) ) {\n\t\t\t\t\t\t\t\ta.push( o );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// Selector - all\n\t\t\t\t\t\t\ta.push( o );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn a;\n\t\t\t}\n\t\t\t\n\t\t\t// Selector - index\n\t\t\tif ( $.isPlainObject( s ) ) {\n\t\t\t\t// Valid cell index and its in the array of selectable rows\n\t\t\t\treturn s.column !== undefined && s.row !== undefined && $.inArray( s.row, rows ) !== -1 ?\n\t\t\t\t\t[s] :\n\t\t\t\t\t[];\n\t\t\t}\n\t\n\t\t\t// Selector - jQuery filtered cells\n\t\t\tvar jqResult = allCells\n\t\t\t\t.filter( s )\n\t\t\t\t.map( function (i, el) {\n\t\t\t\t\treturn { // use a new object, in case someone changes the values\n\t\t\t\t\t\trow:    el._DT_CellIndex.row,\n\t\t\t\t\t\tcolumn: el._DT_CellIndex.column\n\t \t\t\t\t};\n\t\t\t\t} )\n\t\t\t\t.toArray();\n\t\n\t\t\tif ( jqResult.length || ! s.nodeName ) {\n\t\t\t\treturn jqResult;\n\t\t\t}\n\t\n\t\t\t// Otherwise the selector is a node, and there is one last option - the\n\t\t\t// element might be a child of an element which has dt-row and dt-column\n\t\t\t// data attributes\n\t\t\thost = $(s).closest('*[data-dt-row]');\n\t\t\treturn host.length ?\n\t\t\t\t[ {\n\t\t\t\t\trow: host.data('dt-row'),\n\t\t\t\t\tcolumn: host.data('dt-column')\n\t\t\t\t} ] :\n\t\t\t\t[];\n\t\t};\n\t\n\t\treturn _selector_run( 'cell', selector, run, settings, opts );\n\t};\n\t\n\t\n\t\n\t\n\t_api_register( 'cells()', function ( rowSelector, columnSelector, opts ) {\n\t\t// Argument shifting\n\t\tif ( $.isPlainObject( rowSelector ) ) {\n\t\t\t// Indexes\n\t\t\tif ( rowSelector.row === undefined ) {\n\t\t\t\t// Selector options in first parameter\n\t\t\t\topts = rowSelector;\n\t\t\t\trowSelector = null;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Cell index objects in first parameter\n\t\t\t\topts = columnSelector;\n\t\t\t\tcolumnSelector = null;\n\t\t\t}\n\t\t}\n\t\tif ( $.isPlainObject( columnSelector ) ) {\n\t\t\topts = columnSelector;\n\t\t\tcolumnSelector = null;\n\t\t}\n\t\n\t\t// Cell selector\n\t\tif ( columnSelector === null || columnSelector === undefined ) {\n\t\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t\treturn __cell_selector( settings, rowSelector, _selector_opts( opts ) );\n\t\t\t} );\n\t\t}\n\t\n\t\t// Row + column selector\n\t\tvar columns = this.columns( columnSelector );\n\t\tvar rows = this.rows( rowSelector );\n\t\tvar a, i, ien, j, jen;\n\t\n\t\tthis.iterator( 'table', function ( settings, idx ) {\n\t\t\ta = [];\n\t\n\t\t\tfor ( i=0, ien=rows[idx].length ; i<ien ; i++ ) {\n\t\t\t\tfor ( j=0, jen=columns[idx].length ; j<jen ; j++ ) {\n\t\t\t\t\ta.push( {\n\t\t\t\t\t\trow:    rows[idx][i],\n\t\t\t\t\t\tcolumn: columns[idx][j]\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}, 1 );\n\t\n\t    // Now pass through the cell selector for options\n\t    var cells = this.cells( a, opts );\n\t\n\t\t$.extend( cells.selector, {\n\t\t\tcols: columnSelector,\n\t\t\trows: rowSelector,\n\t\t\topts: opts\n\t\t} );\n\t\n\t\treturn cells;\n\t} );\n\t\n\t\n\t_api_registerPlural( 'cells().nodes()', 'cell().node()', function () {\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\tvar data = settings.aoData[ row ];\n\t\n\t\t\treturn data && data.anCells ?\n\t\t\t\tdata.anCells[ column ] :\n\t\t\t\tundefined;\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_register( 'cells().data()', function () {\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\treturn _fnGetCellData( settings, row, column );\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'cells().cache()', 'cell().cache()', function ( type ) {\n\t\ttype = type === 'search' ? '_aFilterData' : '_aSortData';\n\t\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\treturn settings.aoData[ row ][ type ][ column ];\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'cells().render()', 'cell().render()', function ( type ) {\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\treturn _fnGetCellData( settings, row, column, type );\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'cells().indexes()', 'cell().index()', function () {\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\treturn {\n\t\t\t\trow: row,\n\t\t\t\tcolumn: column,\n\t\t\t\tcolumnVisible: _fnColumnIndexToVisible( settings, column )\n\t\t\t};\n\t\t}, 1 );\n\t} );\n\t\n\t\n\t_api_registerPlural( 'cells().invalidate()', 'cell().invalidate()', function ( src ) {\n\t\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t\t_fnInvalidate( settings, row, src, column );\n\t\t} );\n\t} );\n\t\n\t\n\t\n\t_api_register( 'cell()', function ( rowSelector, columnSelector, opts ) {\n\t\treturn _selector_first( this.cells( rowSelector, columnSelector, opts ) );\n\t} );\n\t\n\t\n\t_api_register( 'cell().data()', function ( data ) {\n\t\tvar ctx = this.context;\n\t\tvar cell = this[0];\n\t\n\t\tif ( data === undefined ) {\n\t\t\t// Get\n\t\t\treturn ctx.length && cell.length ?\n\t\t\t\t_fnGetCellData( ctx[0], cell[0].row, cell[0].column ) :\n\t\t\t\tundefined;\n\t\t}\n\t\n\t\t// Set\n\t\t_fnSetCellData( ctx[0], cell[0].row, cell[0].column, data );\n\t\t_fnInvalidate( ctx[0], cell[0].row, 'data', cell[0].column );\n\t\n\t\treturn this;\n\t} );\n\t\n\t\n\t\n\t/**\n\t * Get current ordering (sorting) that has been applied to the table.\n\t *\n\t * @returns {array} 2D array containing the sorting information for the first\n\t *   table in the current context. Each element in the parent array represents\n\t *   a column being sorted upon (i.e. multi-sorting with two columns would have\n\t *   2 inner arrays). The inner arrays may have 2 or 3 elements. The first is\n\t *   the column index that the sorting condition applies to, the second is the\n\t *   direction of the sort (`desc` or `asc`) and, optionally, the third is the\n\t *   index of the sorting order from the `column.sorting` initialisation array.\n\t *//**\n\t * Set the ordering for the table.\n\t *\n\t * @param {integer} order Column index to sort upon.\n\t * @param {string} direction Direction of the sort to be applied (`asc` or `desc`)\n\t * @returns {DataTables.Api} this\n\t *//**\n\t * Set the ordering for the table.\n\t *\n\t * @param {array} order 1D array of sorting information to be applied.\n\t * @param {array} [...] Optional additional sorting conditions\n\t * @returns {DataTables.Api} this\n\t *//**\n\t * Set the ordering for the table.\n\t *\n\t * @param {array} order 2D array of sorting information to be applied.\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'order()', function ( order, dir ) {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( order === undefined ) {\n\t\t\t// get\n\t\t\treturn ctx.length !== 0 ?\n\t\t\t\tctx[0].aaSorting :\n\t\t\t\tundefined;\n\t\t}\n\t\n\t\t// set\n\t\tif ( typeof order === 'number' ) {\n\t\t\t// Simple column / direction passed in\n\t\t\torder = [ [ order, dir ] ];\n\t\t}\n\t\telse if ( order.length && ! $.isArray( order[0] ) ) {\n\t\t\t// Arguments passed in (list of 1D arrays)\n\t\t\torder = Array.prototype.slice.call( arguments );\n\t\t}\n\t\t// otherwise a 2D array was passed in\n\t\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tsettings.aaSorting = order.slice();\n\t\t} );\n\t} );\n\t\n\t\n\t/**\n\t * Attach a sort listener to an element for a given column\n\t *\n\t * @param {node|jQuery|string} node Identifier for the element(s) to attach the\n\t *   listener to. This can take the form of a single DOM node, a jQuery\n\t *   collection of nodes or a jQuery selector which will identify the node(s).\n\t * @param {integer} column the column that a click on this node will sort on\n\t * @param {function} [callback] callback function when sort is run\n\t * @returns {DataTables.Api} this\n\t */\n\t_api_register( 'order.listener()', function ( node, column, callback ) {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnSortAttachListener( settings, node, column, callback );\n\t\t} );\n\t} );\n\t\n\t\n\t_api_register( 'order.fixed()', function ( set ) {\n\t\tif ( ! set ) {\n\t\t\tvar ctx = this.context;\n\t\t\tvar fixed = ctx.length ?\n\t\t\t\tctx[0].aaSortingFixed :\n\t\t\t\tundefined;\n\t\n\t\t\treturn $.isArray( fixed ) ?\n\t\t\t\t{ pre: fixed } :\n\t\t\t\tfixed;\n\t\t}\n\t\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tsettings.aaSortingFixed = $.extend( true, {}, set );\n\t\t} );\n\t} );\n\t\n\t\n\t// Order by the selected column(s)\n\t_api_register( [\n\t\t'columns().order()',\n\t\t'column().order()'\n\t], function ( dir ) {\n\t\tvar that = this;\n\t\n\t\treturn this.iterator( 'table', function ( settings, i ) {\n\t\t\tvar sort = [];\n\t\n\t\t\t$.each( that[i], function (j, col) {\n\t\t\t\tsort.push( [ col, dir ] );\n\t\t\t} );\n\t\n\t\t\tsettings.aaSorting = sort;\n\t\t} );\n\t} );\n\t\n\t\n\t\n\t_api_register( 'search()', function ( input, regex, smart, caseInsen ) {\n\t\tvar ctx = this.context;\n\t\n\t\tif ( input === undefined ) {\n\t\t\t// get\n\t\t\treturn ctx.length !== 0 ?\n\t\t\t\tctx[0].oPreviousSearch.sSearch :\n\t\t\t\tundefined;\n\t\t}\n\t\n\t\t// set\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tif ( ! settings.oFeatures.bFilter ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t_fnFilterComplete( settings, $.extend( {}, settings.oPreviousSearch, {\n\t\t\t\t\"sSearch\": input+\"\",\n\t\t\t\t\"bRegex\":  regex === null ? false : regex,\n\t\t\t\t\"bSmart\":  smart === null ? true  : smart,\n\t\t\t\t\"bCaseInsensitive\": caseInsen === null ? true : caseInsen\n\t\t\t} ), 1 );\n\t\t} );\n\t} );\n\t\n\t\n\t_api_registerPlural(\n\t\t'columns().search()',\n\t\t'column().search()',\n\t\tfunction ( input, regex, smart, caseInsen ) {\n\t\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\t\tvar preSearch = settings.aoPreSearchCols;\n\t\n\t\t\t\tif ( input === undefined ) {\n\t\t\t\t\t// get\n\t\t\t\t\treturn preSearch[ column ].sSearch;\n\t\t\t\t}\n\t\n\t\t\t\t// set\n\t\t\t\tif ( ! settings.oFeatures.bFilter ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\t$.extend( preSearch[ column ], {\n\t\t\t\t\t\"sSearch\": input+\"\",\n\t\t\t\t\t\"bRegex\":  regex === null ? false : regex,\n\t\t\t\t\t\"bSmart\":  smart === null ? true  : smart,\n\t\t\t\t\t\"bCaseInsensitive\": caseInsen === null ? true : caseInsen\n\t\t\t\t} );\n\t\n\t\t\t\t_fnFilterComplete( settings, settings.oPreviousSearch, 1 );\n\t\t\t} );\n\t\t}\n\t);\n\t\n\t/*\n\t * State API methods\n\t */\n\t\n\t_api_register( 'state()', function () {\n\t\treturn this.context.length ?\n\t\t\tthis.context[0].oSavedState :\n\t\t\tnull;\n\t} );\n\t\n\t\n\t_api_register( 'state.clear()', function () {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t// Save an empty object\n\t\t\tsettings.fnStateSaveCallback.call( settings.oInstance, settings, {} );\n\t\t} );\n\t} );\n\t\n\t\n\t_api_register( 'state.loaded()', function () {\n\t\treturn this.context.length ?\n\t\t\tthis.context[0].oLoadedState :\n\t\t\tnull;\n\t} );\n\t\n\t\n\t_api_register( 'state.save()', function () {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnSaveState( settings );\n\t\t} );\n\t} );\n\t\n\t\n\t\n\t/**\n\t * Provide a common method for plug-ins to check the version of DataTables being\n\t * used, in order to ensure compatibility.\n\t *\n\t *  @param {string} version Version string to check for, in the format \"X.Y.Z\".\n\t *    Note that the formats \"X\" and \"X.Y\" are also acceptable.\n\t *  @returns {boolean} true if this version of DataTables is greater or equal to\n\t *    the required version, or false if this version of DataTales is not\n\t *    suitable\n\t *  @static\n\t *  @dtopt API-Static\n\t *\n\t *  @example\n\t *    alert( $.fn.dataTable.versionCheck( '1.9.0' ) );\n\t */\n\tDataTable.versionCheck = DataTable.fnVersionCheck = function( version )\n\t{\n\t\tvar aThis = DataTable.version.split('.');\n\t\tvar aThat = version.split('.');\n\t\tvar iThis, iThat;\n\t\n\t\tfor ( var i=0, iLen=aThat.length ; i<iLen ; i++ ) {\n\t\t\tiThis = parseInt( aThis[i], 10 ) || 0;\n\t\t\tiThat = parseInt( aThat[i], 10 ) || 0;\n\t\n\t\t\t// Parts are the same, keep comparing\n\t\t\tif (iThis === iThat) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\n\t\t\t// Parts are different, return immediately\n\t\t\treturn iThis > iThat;\n\t\t}\n\t\n\t\treturn true;\n\t};\n\t\n\t\n\t/**\n\t * Check if a `<table>` node is a DataTable table already or not.\n\t *\n\t *  @param {node|jquery|string} table Table node, jQuery object or jQuery\n\t *      selector for the table to test. Note that if more than more than one\n\t *      table is passed on, only the first will be checked\n\t *  @returns {boolean} true the table given is a DataTable, or false otherwise\n\t *  @static\n\t *  @dtopt API-Static\n\t *\n\t *  @example\n\t *    if ( ! $.fn.DataTable.isDataTable( '#example' ) ) {\n\t *      $('#example').dataTable();\n\t *    }\n\t */\n\tDataTable.isDataTable = DataTable.fnIsDataTable = function ( table )\n\t{\n\t\tvar t = $(table).get(0);\n\t\tvar is = false;\n\t\n\t\tif ( table instanceof DataTable.Api ) {\n\t\t\treturn true;\n\t\t}\n\t\n\t\t$.each( DataTable.settings, function (i, o) {\n\t\t\tvar head = o.nScrollHead ? $('table', o.nScrollHead)[0] : null;\n\t\t\tvar foot = o.nScrollFoot ? $('table', o.nScrollFoot)[0] : null;\n\t\n\t\t\tif ( o.nTable === t || head === t || foot === t ) {\n\t\t\t\tis = true;\n\t\t\t}\n\t\t} );\n\t\n\t\treturn is;\n\t};\n\t\n\t\n\t/**\n\t * Get all DataTable tables that have been initialised - optionally you can\n\t * select to get only currently visible tables.\n\t *\n\t *  @param {boolean} [visible=false] Flag to indicate if you want all (default)\n\t *    or visible tables only.\n\t *  @returns {array} Array of `table` nodes (not DataTable instances) which are\n\t *    DataTables\n\t *  @static\n\t *  @dtopt API-Static\n\t *\n\t *  @example\n\t *    $.each( $.fn.dataTable.tables(true), function () {\n\t *      $(table).DataTable().columns.adjust();\n\t *    } );\n\t */\n\tDataTable.tables = DataTable.fnTables = function ( visible )\n\t{\n\t\tvar api = false;\n\t\n\t\tif ( $.isPlainObject( visible ) ) {\n\t\t\tapi = visible.api;\n\t\t\tvisible = visible.visible;\n\t\t}\n\t\n\t\tvar a = $.map( DataTable.settings, function (o) {\n\t\t\tif ( !visible || (visible && $(o.nTable).is(':visible')) ) {\n\t\t\t\treturn o.nTable;\n\t\t\t}\n\t\t} );\n\t\n\t\treturn api ?\n\t\t\tnew _Api( a ) :\n\t\t\ta;\n\t};\n\t\n\t\n\t/**\n\t * Convert from camel case parameters to Hungarian notation. This is made public\n\t * for the extensions to provide the same ability as DataTables core to accept\n\t * either the 1.9 style Hungarian notation, or the 1.10+ style camelCase\n\t * parameters.\n\t *\n\t *  @param {object} src The model object which holds all parameters that can be\n\t *    mapped.\n\t *  @param {object} user The object to convert from camel case to Hungarian.\n\t *  @param {boolean} force When set to `true`, properties which already have a\n\t *    Hungarian value in the `user` object will be overwritten. Otherwise they\n\t *    won't be.\n\t */\n\tDataTable.camelToHungarian = _fnCamelToHungarian;\n\t\n\t\n\t\n\t/**\n\t *\n\t */\n\t_api_register( '$()', function ( selector, opts ) {\n\t\tvar\n\t\t\trows   = this.rows( opts ).nodes(), // Get all rows\n\t\t\tjqRows = $(rows);\n\t\n\t\treturn $( [].concat(\n\t\t\tjqRows.filter( selector ).toArray(),\n\t\t\tjqRows.find( selector ).toArray()\n\t\t) );\n\t} );\n\t\n\t\n\t// jQuery functions to operate on the tables\n\t$.each( [ 'on', 'one', 'off' ], function (i, key) {\n\t\t_api_register( key+'()', function ( /* event, handler */ ) {\n\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\n\t\t\t// Add the `dt` namespace automatically if it isn't already present\n\t\t\targs[0] = $.map( args[0].split( /\\s/ ), function ( e ) {\n\t\t\t\treturn ! e.match(/\\.dt\\b/) ?\n\t\t\t\t\te+'.dt' :\n\t\t\t\t\te;\n\t\t\t\t} ).join( ' ' );\n\t\n\t\t\tvar inst = $( this.tables().nodes() );\n\t\t\tinst[key].apply( inst, args );\n\t\t\treturn this;\n\t\t} );\n\t} );\n\t\n\t\n\t_api_register( 'clear()', function () {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\t_fnClearTable( settings );\n\t\t} );\n\t} );\n\t\n\t\n\t_api_register( 'settings()', function () {\n\t\treturn new _Api( this.context, this.context );\n\t} );\n\t\n\t\n\t_api_register( 'init()', function () {\n\t\tvar ctx = this.context;\n\t\treturn ctx.length ? ctx[0].oInit : null;\n\t} );\n\t\n\t\n\t_api_register( 'data()', function () {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\treturn _pluck( settings.aoData, '_aData' );\n\t\t} ).flatten();\n\t} );\n\t\n\t\n\t_api_register( 'destroy()', function ( remove ) {\n\t\tremove = remove || false;\n\t\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\tvar orig      = settings.nTableWrapper.parentNode;\n\t\t\tvar classes   = settings.oClasses;\n\t\t\tvar table     = settings.nTable;\n\t\t\tvar tbody     = settings.nTBody;\n\t\t\tvar thead     = settings.nTHead;\n\t\t\tvar tfoot     = settings.nTFoot;\n\t\t\tvar jqTable   = $(table);\n\t\t\tvar jqTbody   = $(tbody);\n\t\t\tvar jqWrapper = $(settings.nTableWrapper);\n\t\t\tvar rows      = $.map( settings.aoData, function (r) { return r.nTr; } );\n\t\t\tvar i, ien;\n\t\n\t\t\t// Flag to note that the table is currently being destroyed - no action\n\t\t\t// should be taken\n\t\t\tsettings.bDestroying = true;\n\t\n\t\t\t// Fire off the destroy callbacks for plug-ins etc\n\t\t\t_fnCallbackFire( settings, \"aoDestroyCallback\", \"destroy\", [settings] );\n\t\n\t\t\t// If not being removed from the document, make all columns visible\n\t\t\tif ( ! remove ) {\n\t\t\t\tnew _Api( settings ).columns().visible( true );\n\t\t\t}\n\t\n\t\t\t// Blitz all `DT` namespaced events (these are internal events, the\n\t\t\t// lowercase, `dt` events are user subscribed and they are responsible\n\t\t\t// for removing them\n\t\t\tjqWrapper.off('.DT').find(':not(tbody *)').off('.DT');\n\t\t\t$(window).off('.DT-'+settings.sInstance);\n\t\n\t\t\t// When scrolling we had to break the table up - restore it\n\t\t\tif ( table != thead.parentNode ) {\n\t\t\t\tjqTable.children('thead').detach();\n\t\t\t\tjqTable.append( thead );\n\t\t\t}\n\t\n\t\t\tif ( tfoot && table != tfoot.parentNode ) {\n\t\t\t\tjqTable.children('tfoot').detach();\n\t\t\t\tjqTable.append( tfoot );\n\t\t\t}\n\t\n\t\t\tsettings.aaSorting = [];\n\t\t\tsettings.aaSortingFixed = [];\n\t\t\t_fnSortingClasses( settings );\n\t\n\t\t\t$( rows ).removeClass( settings.asStripeClasses.join(' ') );\n\t\n\t\t\t$('th, td', thead).removeClass( classes.sSortable+' '+\n\t\t\t\tclasses.sSortableAsc+' '+classes.sSortableDesc+' '+classes.sSortableNone\n\t\t\t);\n\t\n\t\t\t// Add the TR elements back into the table in their original order\n\t\t\tjqTbody.children().detach();\n\t\t\tjqTbody.append( rows );\n\t\n\t\t\t// Remove the DataTables generated nodes, events and classes\n\t\t\tvar removedMethod = remove ? 'remove' : 'detach';\n\t\t\tjqTable[ removedMethod ]();\n\t\t\tjqWrapper[ removedMethod ]();\n\t\n\t\t\t// If we need to reattach the table to the document\n\t\t\tif ( ! remove && orig ) {\n\t\t\t\t// insertBefore acts like appendChild if !arg[1]\n\t\t\t\torig.insertBefore( table, settings.nTableReinsertBefore );\n\t\n\t\t\t\t// Restore the width of the original table - was read from the style property,\n\t\t\t\t// so we can restore directly to that\n\t\t\t\tjqTable\n\t\t\t\t\t.css( 'width', settings.sDestroyWidth )\n\t\t\t\t\t.removeClass( classes.sTable );\n\t\n\t\t\t\t// If the were originally stripe classes - then we add them back here.\n\t\t\t\t// Note this is not fool proof (for example if not all rows had stripe\n\t\t\t\t// classes - but it's a good effort without getting carried away\n\t\t\t\tien = settings.asDestroyStripes.length;\n\t\n\t\t\t\tif ( ien ) {\n\t\t\t\t\tjqTbody.children().each( function (i) {\n\t\t\t\t\t\t$(this).addClass( settings.asDestroyStripes[i % ien] );\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t/* Remove the settings object from the settings array */\n\t\t\tvar idx = $.inArray( settings, DataTable.settings );\n\t\t\tif ( idx !== -1 ) {\n\t\t\t\tDataTable.settings.splice( idx, 1 );\n\t\t\t}\n\t\t} );\n\t} );\n\t\n\t\n\t// Add the `every()` method for rows, columns and cells in a compact form\n\t$.each( [ 'column', 'row', 'cell' ], function ( i, type ) {\n\t\t_api_register( type+'s().every()', function ( fn ) {\n\t\t\tvar opts = this.selector.opts;\n\t\t\tvar api = this;\n\t\n\t\t\treturn this.iterator( type, function ( settings, arg1, arg2, arg3, arg4 ) {\n\t\t\t\t// Rows and columns:\n\t\t\t\t//  arg1 - index\n\t\t\t\t//  arg2 - table counter\n\t\t\t\t//  arg3 - loop counter\n\t\t\t\t//  arg4 - undefined\n\t\t\t\t// Cells:\n\t\t\t\t//  arg1 - row index\n\t\t\t\t//  arg2 - column index\n\t\t\t\t//  arg3 - table counter\n\t\t\t\t//  arg4 - loop counter\n\t\t\t\tfn.call(\n\t\t\t\t\tapi[ type ](\n\t\t\t\t\t\targ1,\n\t\t\t\t\t\ttype==='cell' ? arg2 : opts,\n\t\t\t\t\t\ttype==='cell' ? opts : undefined\n\t\t\t\t\t),\n\t\t\t\t\targ1, arg2, arg3, arg4\n\t\t\t\t);\n\t\t\t} );\n\t\t} );\n\t} );\n\t\n\t\n\t// i18n method for extensions to be able to use the language object from the\n\t// DataTable\n\t_api_register( 'i18n()', function ( token, def, plural ) {\n\t\tvar ctx = this.context[0];\n\t\tvar resolved = _fnGetObjectDataFn( token )( ctx.oLanguage );\n\t\n\t\tif ( resolved === undefined ) {\n\t\t\tresolved = def;\n\t\t}\n\t\n\t\tif ( plural !== undefined && $.isPlainObject( resolved ) ) {\n\t\t\tresolved = resolved[ plural ] !== undefined ?\n\t\t\t\tresolved[ plural ] :\n\t\t\t\tresolved._;\n\t\t}\n\t\n\t\treturn resolved.replace( '%d', plural ); // nb: plural might be undefined,\n\t} );\n\n\t/**\n\t * Version string for plug-ins to check compatibility. Allowed format is\n\t * `a.b.c-d` where: a:int, b:int, c:int, d:string(dev|beta|alpha). `d` is used\n\t * only for non-release builds. See http://semver.org/ for more information.\n\t *  @member\n\t *  @type string\n\t *  @default Version number\n\t */\n\tDataTable.version = \"1.10.18\";\n\n\t/**\n\t * Private data store, containing all of the settings objects that are\n\t * created for the tables on a given page.\n\t *\n\t * Note that the `DataTable.settings` object is aliased to\n\t * `jQuery.fn.dataTableExt` through which it may be accessed and\n\t * manipulated, or `jQuery.fn.dataTable.settings`.\n\t *  @member\n\t *  @type array\n\t *  @default []\n\t *  @private\n\t */\n\tDataTable.settings = [];\n\n\t/**\n\t * Object models container, for the various models that DataTables has\n\t * available to it. These models define the objects that are used to hold\n\t * the active state and configuration of the table.\n\t *  @namespace\n\t */\n\tDataTable.models = {};\n\t\n\t\n\t\n\t/**\n\t * Template object for the way in which DataTables holds information about\n\t * search information for the global filter and individual column filters.\n\t *  @namespace\n\t */\n\tDataTable.models.oSearch = {\n\t\t/**\n\t\t * Flag to indicate if the filtering should be case insensitive or not\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t */\n\t\t\"bCaseInsensitive\": true,\n\t\n\t\t/**\n\t\t * Applied search term\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t */\n\t\t\"sSearch\": \"\",\n\t\n\t\t/**\n\t\t * Flag to indicate if the search term should be interpreted as a\n\t\t * regular expression (true) or not (false) and therefore and special\n\t\t * regex characters escaped.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bRegex\": false,\n\t\n\t\t/**\n\t\t * Flag to indicate if DataTables is to use its smart filtering or not.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t */\n\t\t\"bSmart\": true\n\t};\n\t\n\t\n\t\n\t\n\t/**\n\t * Template object for the way in which DataTables holds information about\n\t * each individual row. This is the object format used for the settings\n\t * aoData array.\n\t *  @namespace\n\t */\n\tDataTable.models.oRow = {\n\t\t/**\n\t\t * TR element for the row\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTr\": null,\n\t\n\t\t/**\n\t\t * Array of TD elements for each row. This is null until the row has been\n\t\t * created.\n\t\t *  @type array nodes\n\t\t *  @default []\n\t\t */\n\t\t\"anCells\": null,\n\t\n\t\t/**\n\t\t * Data object from the original data source for the row. This is either\n\t\t * an array if using the traditional form of DataTables, or an object if\n\t\t * using mData options. The exact type will depend on the passed in\n\t\t * data from the data source, or will be an array if using DOM a data\n\t\t * source.\n\t\t *  @type array|object\n\t\t *  @default []\n\t\t */\n\t\t\"_aData\": [],\n\t\n\t\t/**\n\t\t * Sorting data cache - this array is ostensibly the same length as the\n\t\t * number of columns (although each index is generated only as it is\n\t\t * needed), and holds the data that is used for sorting each column in the\n\t\t * row. We do this cache generation at the start of the sort in order that\n\t\t * the formatting of the sort data need be done only once for each cell\n\t\t * per sort. This array should not be read from or written to by anything\n\t\t * other than the master sorting methods.\n\t\t *  @type array\n\t\t *  @default null\n\t\t *  @private\n\t\t */\n\t\t\"_aSortData\": null,\n\t\n\t\t/**\n\t\t * Per cell filtering data cache. As per the sort data cache, used to\n\t\t * increase the performance of the filtering in DataTables\n\t\t *  @type array\n\t\t *  @default null\n\t\t *  @private\n\t\t */\n\t\t\"_aFilterData\": null,\n\t\n\t\t/**\n\t\t * Filtering data cache. This is the same as the cell filtering cache, but\n\t\t * in this case a string rather than an array. This is easily computed with\n\t\t * a join on `_aFilterData`, but is provided as a cache so the join isn't\n\t\t * needed on every search (memory traded for performance)\n\t\t *  @type array\n\t\t *  @default null\n\t\t *  @private\n\t\t */\n\t\t\"_sFilterRow\": null,\n\t\n\t\t/**\n\t\t * Cache of the class name that DataTables has applied to the row, so we\n\t\t * can quickly look at this variable rather than needing to do a DOM check\n\t\t * on className for the nTr property.\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t *  @private\n\t\t */\n\t\t\"_sRowStripe\": \"\",\n\t\n\t\t/**\n\t\t * Denote if the original data source was from the DOM, or the data source\n\t\t * object. This is used for invalidating data, so DataTables can\n\t\t * automatically read data from the original source, unless uninstructed\n\t\t * otherwise.\n\t\t *  @type string\n\t\t *  @default null\n\t\t *  @private\n\t\t */\n\t\t\"src\": null,\n\t\n\t\t/**\n\t\t * Index in the aoData array. This saves an indexOf lookup when we have the\n\t\t * object, but want to know the index\n\t\t *  @type integer\n\t\t *  @default -1\n\t\t *  @private\n\t\t */\n\t\t\"idx\": -1\n\t};\n\t\n\t\n\t/**\n\t * Template object for the column information object in DataTables. This object\n\t * is held in the settings aoColumns array and contains all the information that\n\t * DataTables needs about each individual column.\n\t *\n\t * Note that this object is related to {@link DataTable.defaults.column}\n\t * but this one is the internal data store for DataTables's cache of columns.\n\t * It should NOT be manipulated outside of DataTables. Any configuration should\n\t * be done through the initialisation options.\n\t *  @namespace\n\t */\n\tDataTable.models.oColumn = {\n\t\t/**\n\t\t * Column index. This could be worked out on-the-fly with $.inArray, but it\n\t\t * is faster to just hold it as a variable\n\t\t *  @type integer\n\t\t *  @default null\n\t\t */\n\t\t\"idx\": null,\n\t\n\t\t/**\n\t\t * A list of the columns that sorting should occur on when this column\n\t\t * is sorted. That this property is an array allows multi-column sorting\n\t\t * to be defined for a column (for example first name / last name columns\n\t\t * would benefit from this). The values are integers pointing to the\n\t\t * columns to be sorted on (typically it will be a single integer pointing\n\t\t * at itself, but that doesn't need to be the case).\n\t\t *  @type array\n\t\t */\n\t\t\"aDataSort\": null,\n\t\n\t\t/**\n\t\t * Define the sorting directions that are applied to the column, in sequence\n\t\t * as the column is repeatedly sorted upon - i.e. the first value is used\n\t\t * as the sorting direction when the column if first sorted (clicked on).\n\t\t * Sort it again (click again) and it will move on to the next index.\n\t\t * Repeat until loop.\n\t\t *  @type array\n\t\t */\n\t\t\"asSorting\": null,\n\t\n\t\t/**\n\t\t * Flag to indicate if the column is searchable, and thus should be included\n\t\t * in the filtering or not.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bSearchable\": null,\n\t\n\t\t/**\n\t\t * Flag to indicate if the column is sortable or not.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bSortable\": null,\n\t\n\t\t/**\n\t\t * Flag to indicate if the column is currently visible in the table or not\n\t\t *  @type boolean\n\t\t */\n\t\t\"bVisible\": null,\n\t\n\t\t/**\n\t\t * Store for manual type assignment using the `column.type` option. This\n\t\t * is held in store so we can manipulate the column's `sType` property.\n\t\t *  @type string\n\t\t *  @default null\n\t\t *  @private\n\t\t */\n\t\t\"_sManualType\": null,\n\t\n\t\t/**\n\t\t * Flag to indicate if HTML5 data attributes should be used as the data\n\t\t * source for filtering or sorting. True is either are.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *  @private\n\t\t */\n\t\t\"_bAttrSrc\": false,\n\t\n\t\t/**\n\t\t * Developer definable function that is called whenever a cell is created (Ajax source,\n\t\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n\t\t * allowing you to modify the DOM element (add background colour for example) when the\n\t\t * element is available.\n\t\t *  @type function\n\t\t *  @param {element} nTd The TD node that has been created\n\t\t *  @param {*} sData The Data for the cell\n\t\t *  @param {array|object} oData The data for the whole row\n\t\t *  @param {int} iRow The row index for the aoData data store\n\t\t *  @default null\n\t\t */\n\t\t\"fnCreatedCell\": null,\n\t\n\t\t/**\n\t\t * Function to get data from a cell in a column. You should <b>never</b>\n\t\t * access data directly through _aData internally in DataTables - always use\n\t\t * the method attached to this property. It allows mData to function as\n\t\t * required. This function is automatically assigned by the column\n\t\t * initialisation method\n\t\t *  @type function\n\t\t *  @param {array|object} oData The data array/object for the array\n\t\t *    (i.e. aoData[]._aData)\n\t\t *  @param {string} sSpecific The specific data type you want to get -\n\t\t *    'display', 'type' 'filter' 'sort'\n\t\t *  @returns {*} The data for the cell from the given row's data\n\t\t *  @default null\n\t\t */\n\t\t\"fnGetData\": null,\n\t\n\t\t/**\n\t\t * Function to set data for a cell in the column. You should <b>never</b>\n\t\t * set the data directly to _aData internally in DataTables - always use\n\t\t * this method. It allows mData to function as required. This function\n\t\t * is automatically assigned by the column initialisation method\n\t\t *  @type function\n\t\t *  @param {array|object} oData The data array/object for the array\n\t\t *    (i.e. aoData[]._aData)\n\t\t *  @param {*} sValue Value to set\n\t\t *  @default null\n\t\t */\n\t\t\"fnSetData\": null,\n\t\n\t\t/**\n\t\t * Property to read the value for the cells in the column from the data\n\t\t * source array / object. If null, then the default content is used, if a\n\t\t * function is given then the return from the function is used.\n\t\t *  @type function|int|string|null\n\t\t *  @default null\n\t\t */\n\t\t\"mData\": null,\n\t\n\t\t/**\n\t\t * Partner property to mData which is used (only when defined) to get\n\t\t * the data - i.e. it is basically the same as mData, but without the\n\t\t * 'set' option, and also the data fed to it is the result from mData.\n\t\t * This is the rendering method to match the data method of mData.\n\t\t *  @type function|int|string|null\n\t\t *  @default null\n\t\t */\n\t\t\"mRender\": null,\n\t\n\t\t/**\n\t\t * Unique header TH/TD element for this column - this is what the sorting\n\t\t * listener is attached to (if sorting is enabled.)\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTh\": null,\n\t\n\t\t/**\n\t\t * Unique footer TH/TD element for this column (if there is one). Not used\n\t\t * in DataTables as such, but can be used for plug-ins to reference the\n\t\t * footer for each column.\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTf\": null,\n\t\n\t\t/**\n\t\t * The class to apply to all TD elements in the table's TBODY for the column\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sClass\": null,\n\t\n\t\t/**\n\t\t * When DataTables calculates the column widths to assign to each column,\n\t\t * it finds the longest string in each column and then constructs a\n\t\t * temporary table and reads the widths from that. The problem with this\n\t\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n\t\t * string - thus the calculation can go wrong (doing it properly and putting\n\t\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\n\t\t * a \"work around\" we provide this option. It will append its value to the\n\t\t * text that is found to be the longest string for the column - i.e. padding.\n\t\t *  @type string\n\t\t */\n\t\t\"sContentPadding\": null,\n\t\n\t\t/**\n\t\t * Allows a default value to be given for a column's data, and will be used\n\t\t * whenever a null data source is encountered (this can be because mData\n\t\t * is set to null, or because the data source itself is null).\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sDefaultContent\": null,\n\t\n\t\t/**\n\t\t * Name for the column, allowing reference to the column by name as well as\n\t\t * by index (needs a lookup to work by name).\n\t\t *  @type string\n\t\t */\n\t\t\"sName\": null,\n\t\n\t\t/**\n\t\t * Custom sorting data type - defines which of the available plug-ins in\n\t\t * afnSortData the custom sorting will use - if any is defined.\n\t\t *  @type string\n\t\t *  @default std\n\t\t */\n\t\t\"sSortDataType\": 'std',\n\t\n\t\t/**\n\t\t * Class to be applied to the header element when sorting on this column\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sSortingClass\": null,\n\t\n\t\t/**\n\t\t * Class to be applied to the header element when sorting on this column -\n\t\t * when jQuery UI theming is used.\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sSortingClassJUI\": null,\n\t\n\t\t/**\n\t\t * Title of the column - what is seen in the TH element (nTh).\n\t\t *  @type string\n\t\t */\n\t\t\"sTitle\": null,\n\t\n\t\t/**\n\t\t * Column sorting and filtering type\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sType\": null,\n\t\n\t\t/**\n\t\t * Width of the column\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sWidth\": null,\n\t\n\t\t/**\n\t\t * Width of the column when it was first \"encountered\"\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sWidthOrig\": null\n\t};\n\t\n\t\n\t/*\n\t * Developer note: The properties of the object below are given in Hungarian\n\t * notation, that was used as the interface for DataTables prior to v1.10, however\n\t * from v1.10 onwards the primary interface is camel case. In order to avoid\n\t * breaking backwards compatibility utterly with this change, the Hungarian\n\t * version is still, internally the primary interface, but is is not documented\n\t * - hence the @name tags in each doc comment. This allows a Javascript function\n\t * to create a map from Hungarian notation to camel case (going the other direction\n\t * would require each property to be listed, which would at around 3K to the size\n\t * of DataTables, while this method is about a 0.5K hit.\n\t *\n\t * Ultimately this does pave the way for Hungarian notation to be dropped\n\t * completely, but that is a massive amount of work and will break current\n\t * installs (therefore is on-hold until v2).\n\t */\n\t\n\t/**\n\t * Initialisation options that can be given to DataTables at initialisation\n\t * time.\n\t *  @namespace\n\t */\n\tDataTable.defaults = {\n\t\t/**\n\t\t * An array of data to use for the table, passed in at initialisation which\n\t\t * will be used in preference to any data which is already in the DOM. This is\n\t\t * particularly useful for constructing tables purely in Javascript, for\n\t\t * example with a custom Ajax call.\n\t\t *  @type array\n\t\t *  @default null\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.data\n\t\t *\n\t\t *  @example\n\t\t *    // Using a 2D array data source\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"data\": [\n\t\t *          ['Trident', 'Internet Explorer 4.0', 'Win 95+', 4, 'X'],\n\t\t *          ['Trident', 'Internet Explorer 5.0', 'Win 95+', 5, 'C'],\n\t\t *        ],\n\t\t *        \"columns\": [\n\t\t *          { \"title\": \"Engine\" },\n\t\t *          { \"title\": \"Browser\" },\n\t\t *          { \"title\": \"Platform\" },\n\t\t *          { \"title\": \"Version\" },\n\t\t *          { \"title\": \"Grade\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using an array of objects as a data source (`data`)\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"data\": [\n\t\t *          {\n\t\t *            \"engine\":   \"Trident\",\n\t\t *            \"browser\":  \"Internet Explorer 4.0\",\n\t\t *            \"platform\": \"Win 95+\",\n\t\t *            \"version\":  4,\n\t\t *            \"grade\":    \"X\"\n\t\t *          },\n\t\t *          {\n\t\t *            \"engine\":   \"Trident\",\n\t\t *            \"browser\":  \"Internet Explorer 5.0\",\n\t\t *            \"platform\": \"Win 95+\",\n\t\t *            \"version\":  5,\n\t\t *            \"grade\":    \"C\"\n\t\t *          }\n\t\t *        ],\n\t\t *        \"columns\": [\n\t\t *          { \"title\": \"Engine\",   \"data\": \"engine\" },\n\t\t *          { \"title\": \"Browser\",  \"data\": \"browser\" },\n\t\t *          { \"title\": \"Platform\", \"data\": \"platform\" },\n\t\t *          { \"title\": \"Version\",  \"data\": \"version\" },\n\t\t *          { \"title\": \"Grade\",    \"data\": \"grade\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"aaData\": null,\n\t\n\t\n\t\t/**\n\t\t * If ordering is enabled, then DataTables will perform a first pass sort on\n\t\t * initialisation. You can define which column(s) the sort is performed\n\t\t * upon, and the sorting direction, with this variable. The `sorting` array\n\t\t * should contain an array for each column to be sorted initially containing\n\t\t * the column's index and a direction string ('asc' or 'desc').\n\t\t *  @type array\n\t\t *  @default [[0,'asc']]\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.order\n\t\t *\n\t\t *  @example\n\t\t *    // Sort by 3rd column first, and then 4th column\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"order\": [[2,'asc'], [3,'desc']]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *    // No initial sorting\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"order\": []\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"aaSorting\": [[0,'asc']],\n\t\n\t\n\t\t/**\n\t\t * This parameter is basically identical to the `sorting` parameter, but\n\t\t * cannot be overridden by user interaction with the table. What this means\n\t\t * is that you could have a column (visible or hidden) which the sorting\n\t\t * will always be forced on first - any sorting after that (from the user)\n\t\t * will then be performed as required. This can be useful for grouping rows\n\t\t * together.\n\t\t *  @type array\n\t\t *  @default null\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.orderFixed\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"orderFixed\": [[0,'asc']]\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"aaSortingFixed\": [],\n\t\n\t\n\t\t/**\n\t\t * DataTables can be instructed to load data to display in the table from a\n\t\t * Ajax source. This option defines how that Ajax call is made and where to.\n\t\t *\n\t\t * The `ajax` property has three different modes of operation, depending on\n\t\t * how it is defined. These are:\n\t\t *\n\t\t * * `string` - Set the URL from where the data should be loaded from.\n\t\t * * `object` - Define properties for `jQuery.ajax`.\n\t\t * * `function` - Custom data get function\n\t\t *\n\t\t * `string`\n\t\t * --------\n\t\t *\n\t\t * As a string, the `ajax` property simply defines the URL from which\n\t\t * DataTables will load data.\n\t\t *\n\t\t * `object`\n\t\t * --------\n\t\t *\n\t\t * As an object, the parameters in the object are passed to\n\t\t * [jQuery.ajax](http://api.jquery.com/jQuery.ajax/) allowing fine control\n\t\t * of the Ajax request. DataTables has a number of default parameters which\n\t\t * you can override using this option. Please refer to the jQuery\n\t\t * documentation for a full description of the options available, although\n\t\t * the following parameters provide additional options in DataTables or\n\t\t * require special consideration:\n\t\t *\n\t\t * * `data` - As with jQuery, `data` can be provided as an object, but it\n\t\t *   can also be used as a function to manipulate the data DataTables sends\n\t\t *   to the server. The function takes a single parameter, an object of\n\t\t *   parameters with the values that DataTables has readied for sending. An\n\t\t *   object may be returned which will be merged into the DataTables\n\t\t *   defaults, or you can add the items to the object that was passed in and\n\t\t *   not return anything from the function. This supersedes `fnServerParams`\n\t\t *   from DataTables 1.9-.\n\t\t *\n\t\t * * `dataSrc` - By default DataTables will look for the property `data` (or\n\t\t *   `aaData` for compatibility with DataTables 1.9-) when obtaining data\n\t\t *   from an Ajax source or for server-side processing - this parameter\n\t\t *   allows that property to be changed. You can use Javascript dotted\n\t\t *   object notation to get a data source for multiple levels of nesting, or\n\t\t *   it my be used as a function. As a function it takes a single parameter,\n\t\t *   the JSON returned from the server, which can be manipulated as\n\t\t *   required, with the returned value being that used by DataTables as the\n\t\t *   data source for the table. This supersedes `sAjaxDataProp` from\n\t\t *   DataTables 1.9-.\n\t\t *\n\t\t * * `success` - Should not be overridden it is used internally in\n\t\t *   DataTables. To manipulate / transform the data returned by the server\n\t\t *   use `ajax.dataSrc`, or use `ajax` as a function (see below).\n\t\t *\n\t\t * `function`\n\t\t * ----------\n\t\t *\n\t\t * As a function, making the Ajax call is left up to yourself allowing\n\t\t * complete control of the Ajax request. Indeed, if desired, a method other\n\t\t * than Ajax could be used to obtain the required data, such as Web storage\n\t\t * or an AIR database.\n\t\t *\n\t\t * The function is given four parameters and no return is required. The\n\t\t * parameters are:\n\t\t *\n\t\t * 1. _object_ - Data to send to the server\n\t\t * 2. _function_ - Callback function that must be executed when the required\n\t\t *    data has been obtained. That data should be passed into the callback\n\t\t *    as the only parameter\n\t\t * 3. _object_ - DataTables settings object for the table\n\t\t *\n\t\t * Note that this supersedes `fnServerData` from DataTables 1.9-.\n\t\t *\n\t\t *  @type string|object|function\n\t\t *  @default null\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.ajax\n\t\t *  @since 1.10.0\n\t\t *\n\t\t * @example\n\t\t *   // Get JSON data from a file via Ajax.\n\t\t *   // Note DataTables expects data in the form `{ data: [ ...data... ] }` by default).\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": \"data.json\"\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Get JSON data from a file via Ajax, using `dataSrc` to change\n\t\t *   // `data` to `tableData` (i.e. `{ tableData: [ ...data... ] }`)\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"dataSrc\": \"tableData\"\n\t\t *     }\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Get JSON data from a file via Ajax, using `dataSrc` to read data\n\t\t *   // from a plain array rather than an array in an object\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"dataSrc\": \"\"\n\t\t *     }\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Manipulate the data returned from the server - add a link to data\n\t\t *   // (note this can, should, be done using `render` for the column - this\n\t\t *   // is just a simple example of how the data can be manipulated).\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"dataSrc\": function ( json ) {\n\t\t *         for ( var i=0, ien=json.length ; i<ien ; i++ ) {\n\t\t *           json[i][0] = '<a href=\"/message/'+json[i][0]+'>View message</a>';\n\t\t *         }\n\t\t *         return json;\n\t\t *       }\n\t\t *     }\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Add data to the request\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"data\": function ( d ) {\n\t\t *         return {\n\t\t *           \"extra_search\": $('#extra').val()\n\t\t *         };\n\t\t *       }\n\t\t *     }\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Send request as POST\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": {\n\t\t *       \"url\": \"data.json\",\n\t\t *       \"type\": \"POST\"\n\t\t *     }\n\t\t *   } );\n\t\t *\n\t\t * @example\n\t\t *   // Get the data from localStorage (could interface with a form for\n\t\t *   // adding, editing and removing rows).\n\t\t *   $('#example').dataTable( {\n\t\t *     \"ajax\": function (data, callback, settings) {\n\t\t *       callback(\n\t\t *         JSON.parse( localStorage.getItem('dataTablesData') )\n\t\t *       );\n\t\t *     }\n\t\t *   } );\n\t\t */\n\t\t\"ajax\": null,\n\t\n\t\n\t\t/**\n\t\t * This parameter allows you to readily specify the entries in the length drop\n\t\t * down menu that DataTables shows when pagination is enabled. It can be\n\t\t * either a 1D array of options which will be used for both the displayed\n\t\t * option and the value, or a 2D array which will use the array in the first\n\t\t * position as the value, and the array in the second position as the\n\t\t * displayed options (useful for language strings such as 'All').\n\t\t *\n\t\t * Note that the `pageLength` property will be automatically set to the\n\t\t * first value given in this array, unless `pageLength` is also provided.\n\t\t *  @type array\n\t\t *  @default [ 10, 25, 50, 100 ]\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.lengthMenu\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"lengthMenu\": [[10, 25, 50, -1], [10, 25, 50, \"All\"]]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"aLengthMenu\": [ 10, 25, 50, 100 ],\n\t\n\t\n\t\t/**\n\t\t * The `columns` option in the initialisation parameter allows you to define\n\t\t * details about the way individual columns behave. For a full list of\n\t\t * column options that can be set, please see\n\t\t * {@link DataTable.defaults.column}. Note that if you use `columns` to\n\t\t * define your columns, you must have an entry in the array for every single\n\t\t * column that you have in your table (these can be null if you don't which\n\t\t * to specify any options).\n\t\t *  @member\n\t\t *\n\t\t *  @name DataTable.defaults.column\n\t\t */\n\t\t\"aoColumns\": null,\n\t\n\t\t/**\n\t\t * Very similar to `columns`, `columnDefs` allows you to target a specific\n\t\t * column, multiple columns, or all columns, using the `targets` property of\n\t\t * each object in the array. This allows great flexibility when creating\n\t\t * tables, as the `columnDefs` arrays can be of any length, targeting the\n\t\t * columns you specifically want. `columnDefs` may use any of the column\n\t\t * options available: {@link DataTable.defaults.column}, but it _must_\n\t\t * have `targets` defined in each object in the array. Values in the `targets`\n\t\t * array may be:\n\t\t *   <ul>\n\t\t *     <li>a string - class name will be matched on the TH for the column</li>\n\t\t *     <li>0 or a positive integer - column index counting from the left</li>\n\t\t *     <li>a negative integer - column index counting from the right</li>\n\t\t *     <li>the string \"_all\" - all columns (i.e. assign a default)</li>\n\t\t *   </ul>\n\t\t *  @member\n\t\t *\n\t\t *  @name DataTable.defaults.columnDefs\n\t\t */\n\t\t\"aoColumnDefs\": null,\n\t\n\t\n\t\t/**\n\t\t * Basically the same as `search`, this parameter defines the individual column\n\t\t * filtering state at initialisation time. The array must be of the same size\n\t\t * as the number of columns, and each element be an object with the parameters\n\t\t * `search` and `escapeRegex` (the latter is optional). 'null' is also\n\t\t * accepted and the default will be used.\n\t\t *  @type array\n\t\t *  @default []\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.searchCols\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"searchCols\": [\n\t\t *          null,\n\t\t *          { \"search\": \"My filter\" },\n\t\t *          null,\n\t\t *          { \"search\": \"^[0-9]\", \"escapeRegex\": false }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"aoSearchCols\": [],\n\t\n\t\n\t\t/**\n\t\t * An array of CSS classes that should be applied to displayed rows. This\n\t\t * array may be of any length, and DataTables will apply each class\n\t\t * sequentially, looping when required.\n\t\t *  @type array\n\t\t *  @default null <i>Will take the values determined by the `oClasses.stripe*`\n\t\t *    options</i>\n\t\t *\n\t\t *  @dtopt Option\n\t\t *  @name DataTable.defaults.stripeClasses\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stripeClasses\": [ 'strip1', 'strip2', 'strip3' ]\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"asStripeClasses\": null,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable automatic column width calculation. This can be disabled\n\t\t * as an optimisation (it takes some time to calculate the widths) if the\n\t\t * tables widths are passed in using `columns`.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.autoWidth\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"autoWidth\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bAutoWidth\": true,\n\t\n\t\n\t\t/**\n\t\t * Deferred rendering can provide DataTables with a huge speed boost when you\n\t\t * are using an Ajax or JS data source for the table. This option, when set to\n\t\t * true, will cause DataTables to defer the creation of the table elements for\n\t\t * each row until they are needed for a draw - saving a significant amount of\n\t\t * time.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.deferRender\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ajax\": \"sources/arrays.txt\",\n\t\t *        \"deferRender\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bDeferRender\": false,\n\t\n\t\n\t\t/**\n\t\t * Replace a DataTable which matches the given selector and replace it with\n\t\t * one which has the properties of the new initialisation object passed. If no\n\t\t * table matches the selector, then the new DataTable will be constructed as\n\t\t * per normal.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.destroy\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"srollY\": \"200px\",\n\t\t *        \"paginate\": false\n\t\t *      } );\n\t\t *\n\t\t *      // Some time later....\n\t\t *      $('#example').dataTable( {\n\t\t *        \"filter\": false,\n\t\t *        \"destroy\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bDestroy\": false,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable filtering of data. Filtering in DataTables is \"smart\" in\n\t\t * that it allows the end user to input multiple words (space separated) and\n\t\t * will match a row containing those words, even if not in the order that was\n\t\t * specified (this allow matching across multiple columns). Note that if you\n\t\t * wish to use filtering in DataTables this must remain 'true' - to remove the\n\t\t * default filtering input box and retain filtering abilities, please use\n\t\t * {@link DataTable.defaults.dom}.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.searching\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"searching\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bFilter\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable the table information display. This shows information\n\t\t * about the data that is currently visible on the page, including information\n\t\t * about filtered data if that action is being performed.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.info\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"info\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bInfo\": true,\n\t\n\t\n\t\t/**\n\t\t * Allows the end user to select the size of a formatted page from a select\n\t\t * menu (sizes are 10, 25, 50 and 100). Requires pagination (`paginate`).\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.lengthChange\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"lengthChange\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bLengthChange\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable pagination.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.paging\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"paging\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bPaginate\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable the display of a 'processing' indicator when the table is\n\t\t * being processed (e.g. a sort). This is particularly useful for tables with\n\t\t * large amounts of data where it can take a noticeable amount of time to sort\n\t\t * the entries.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.processing\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"processing\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bProcessing\": false,\n\t\n\t\n\t\t/**\n\t\t * Retrieve the DataTables object for the given selector. Note that if the\n\t\t * table has already been initialised, this parameter will cause DataTables\n\t\t * to simply return the object that has already been set up - it will not take\n\t\t * account of any changes you might have made to the initialisation object\n\t\t * passed to DataTables (setting this parameter to true is an acknowledgement\n\t\t * that you understand this). `destroy` can be used to reinitialise a table if\n\t\t * you need.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.retrieve\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      initTable();\n\t\t *      tableActions();\n\t\t *    } );\n\t\t *\n\t\t *    function initTable ()\n\t\t *    {\n\t\t *      return $('#example').dataTable( {\n\t\t *        \"scrollY\": \"200px\",\n\t\t *        \"paginate\": false,\n\t\t *        \"retrieve\": true\n\t\t *      } );\n\t\t *    }\n\t\t *\n\t\t *    function tableActions ()\n\t\t *    {\n\t\t *      var table = initTable();\n\t\t *      // perform API operations with oTable\n\t\t *    }\n\t\t */\n\t\t\"bRetrieve\": false,\n\t\n\t\n\t\t/**\n\t\t * When vertical (y) scrolling is enabled, DataTables will force the height of\n\t\t * the table's viewport to the given height at all times (useful for layout).\n\t\t * However, this can look odd when filtering data down to a small data set,\n\t\t * and the footer is left \"floating\" further down. This parameter (when\n\t\t * enabled) will cause DataTables to collapse the table's viewport down when\n\t\t * the result set will fit within the given Y height.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.scrollCollapse\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"scrollY\": \"200\",\n\t\t *        \"scrollCollapse\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bScrollCollapse\": false,\n\t\n\t\n\t\t/**\n\t\t * Configure DataTables to use server-side processing. Note that the\n\t\t * `ajax` parameter must also be given in order to give DataTables a\n\t\t * source to obtain the required data for each draw.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.serverSide\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"serverSide\": true,\n\t\t *        \"ajax\": \"xhr.php\"\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bServerSide\": false,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable sorting of columns. Sorting of individual columns can be\n\t\t * disabled by the `sortable` option for each column.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.ordering\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ordering\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bSort\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or display DataTables' ability to sort multiple columns at the\n\t\t * same time (activated by shift-click by the user).\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.orderMulti\n\t\t *\n\t\t *  @example\n\t\t *    // Disable multiple column sorting ability\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"orderMulti\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bSortMulti\": true,\n\t\n\t\n\t\t/**\n\t\t * Allows control over whether DataTables should use the top (true) unique\n\t\t * cell that is found for a single column, or the bottom (false - default).\n\t\t * This is useful when using complex headers.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.orderCellsTop\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"orderCellsTop\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bSortCellsTop\": false,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable the addition of the classes `sorting\\_1`, `sorting\\_2` and\n\t\t * `sorting\\_3` to the columns which are currently being sorted on. This is\n\t\t * presented as a feature switch as it can increase processing time (while\n\t\t * classes are removed and added) so for large data sets you might want to\n\t\t * turn this off.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.orderClasses\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"orderClasses\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bSortClasses\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable state saving. When enabled HTML5 `localStorage` will be\n\t\t * used to save table display information such as pagination information,\n\t\t * display length, filtering and sorting. As such when the end user reloads\n\t\t * the page the display display will match what thy had previously set up.\n\t\t *\n\t\t * Due to the use of `localStorage` the default state saving is not supported\n\t\t * in IE6 or 7. If state saving is required in those browsers, use\n\t\t * `stateSaveCallback` to provide a storage solution such as cookies.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.stateSave\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bStateSave\": false,\n\t\n\t\n\t\t/**\n\t\t * This function is called when a TR element is created (and all TD child\n\t\t * elements have been inserted), or registered if using a DOM source, allowing\n\t\t * manipulation of the TR element (adding classes etc).\n\t\t *  @type function\n\t\t *  @param {node} row \"TR\" element for the current row\n\t\t *  @param {array} data Raw data array for this row\n\t\t *  @param {int} dataIndex The index of this row in the internal aoData array\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.createdRow\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"createdRow\": function( row, data, dataIndex ) {\n\t\t *          // Bold the grade for all 'A' grade browsers\n\t\t *          if ( data[4] == \"A\" )\n\t\t *          {\n\t\t *            $('td:eq(4)', row).html( '<b>A</b>' );\n\t\t *          }\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnCreatedRow\": null,\n\t\n\t\n\t\t/**\n\t\t * This function is called on every 'draw' event, and allows you to\n\t\t * dynamically modify any aspect you want about the created DOM.\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.drawCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"drawCallback\": function( settings ) {\n\t\t *          alert( 'DataTables has redrawn the table' );\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnDrawCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * Identical to fnHeaderCallback() but for the table footer this function\n\t\t * allows you to modify the table footer on every 'draw' event.\n\t\t *  @type function\n\t\t *  @param {node} foot \"TR\" element for the footer\n\t\t *  @param {array} data Full table data (as derived from the original HTML)\n\t\t *  @param {int} start Index for the current display starting point in the\n\t\t *    display array\n\t\t *  @param {int} end Index for the current display ending point in the\n\t\t *    display array\n\t\t *  @param {array int} display Index array to translate the visual position\n\t\t *    to the full data array\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.footerCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"footerCallback\": function( tfoot, data, start, end, display ) {\n\t\t *          tfoot.getElementsByTagName('th')[0].innerHTML = \"Starting index is \"+start;\n\t\t *        }\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"fnFooterCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * When rendering large numbers in the information element for the table\n\t\t * (i.e. \"Showing 1 to 10 of 57 entries\") DataTables will render large numbers\n\t\t * to have a comma separator for the 'thousands' units (e.g. 1 million is\n\t\t * rendered as \"1,000,000\") to help readability for the end user. This\n\t\t * function will override the default method DataTables uses.\n\t\t *  @type function\n\t\t *  @member\n\t\t *  @param {int} toFormat number to be formatted\n\t\t *  @returns {string} formatted string for DataTables to show the number\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.formatNumber\n\t\t *\n\t\t *  @example\n\t\t *    // Format a number using a single quote for the separator (note that\n\t\t *    // this can also be done with the language.thousands option)\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"formatNumber\": function ( toFormat ) {\n\t\t *          return toFormat.toString().replace(\n\t\t *            /\\B(?=(\\d{3})+(?!\\d))/g, \"'\"\n\t\t *          );\n\t\t *        };\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnFormatNumber\": function ( toFormat ) {\n\t\t\treturn toFormat.toString().replace(\n\t\t\t\t/\\B(?=(\\d{3})+(?!\\d))/g,\n\t\t\t\tthis.oLanguage.sThousands\n\t\t\t);\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * This function is called on every 'draw' event, and allows you to\n\t\t * dynamically modify the header row. This can be used to calculate and\n\t\t * display useful information about the table.\n\t\t *  @type function\n\t\t *  @param {node} head \"TR\" element for the header\n\t\t *  @param {array} data Full table data (as derived from the original HTML)\n\t\t *  @param {int} start Index for the current display starting point in the\n\t\t *    display array\n\t\t *  @param {int} end Index for the current display ending point in the\n\t\t *    display array\n\t\t *  @param {array int} display Index array to translate the visual position\n\t\t *    to the full data array\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.headerCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"fheaderCallback\": function( head, data, start, end, display ) {\n\t\t *          head.getElementsByTagName('th')[0].innerHTML = \"Displaying \"+(end-start)+\" records\";\n\t\t *        }\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"fnHeaderCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * The information element can be used to convey information about the current\n\t\t * state of the table. Although the internationalisation options presented by\n\t\t * DataTables are quite capable of dealing with most customisations, there may\n\t\t * be times where you wish to customise the string further. This callback\n\t\t * allows you to do exactly that.\n\t\t *  @type function\n\t\t *  @param {object} oSettings DataTables settings object\n\t\t *  @param {int} start Starting position in data for the draw\n\t\t *  @param {int} end End position in data for the draw\n\t\t *  @param {int} max Total number of rows in the table (regardless of\n\t\t *    filtering)\n\t\t *  @param {int} total Total number of rows in the data set, after filtering\n\t\t *  @param {string} pre The string that DataTables has formatted using it's\n\t\t *    own rules\n\t\t *  @returns {string} The string to be displayed in the information element.\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.infoCallback\n\t\t *\n\t\t *  @example\n\t\t *    $('#example').dataTable( {\n\t\t *      \"infoCallback\": function( settings, start, end, max, total, pre ) {\n\t\t *        return start +\" to \"+ end;\n\t\t *      }\n\t\t *    } );\n\t\t */\n\t\t\"fnInfoCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * Called when the table has been initialised. Normally DataTables will\n\t\t * initialise sequentially and there will be no need for this function,\n\t\t * however, this does not hold true when using external language information\n\t\t * since that is obtained using an async XHR call.\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} json The JSON object request from the server - only\n\t\t *    present if client-side Ajax sourced data is used\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.initComplete\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"initComplete\": function(settings, json) {\n\t\t *          alert( 'DataTables has finished its initialisation.' );\n\t\t *        }\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"fnInitComplete\": null,\n\t\n\t\n\t\t/**\n\t\t * Called at the very start of each table draw and can be used to cancel the\n\t\t * draw by returning false, any other return (including undefined) results in\n\t\t * the full draw occurring).\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @returns {boolean} False will cancel the draw, anything else (including no\n\t\t *    return) will allow it to complete.\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.preDrawCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"preDrawCallback\": function( settings ) {\n\t\t *          if ( $('#test').val() == 1 ) {\n\t\t *            return false;\n\t\t *          }\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnPreDrawCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * This function allows you to 'post process' each row after it have been\n\t\t * generated for each table draw, but before it is rendered on screen. This\n\t\t * function might be used for setting the row class name etc.\n\t\t *  @type function\n\t\t *  @param {node} row \"TR\" element for the current row\n\t\t *  @param {array} data Raw data array for this row\n\t\t *  @param {int} displayIndex The display index for the current table draw\n\t\t *  @param {int} displayIndexFull The index of the data in the full list of\n\t\t *    rows (after filtering)\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.rowCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"rowCallback\": function( row, data, displayIndex, displayIndexFull ) {\n\t\t *          // Bold the grade for all 'A' grade browsers\n\t\t *          if ( data[4] == \"A\" ) {\n\t\t *            $('td:eq(4)', row).html( '<b>A</b>' );\n\t\t *          }\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnRowCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t * This parameter allows you to override the default function which obtains\n\t\t * the data from the server so something more suitable for your application.\n\t\t * For example you could use POST data, or pull information from a Gears or\n\t\t * AIR database.\n\t\t *  @type function\n\t\t *  @member\n\t\t *  @param {string} source HTTP source to obtain the data from (`ajax`)\n\t\t *  @param {array} data A key/value pair object containing the data to send\n\t\t *    to the server\n\t\t *  @param {function} callback to be called on completion of the data get\n\t\t *    process that will draw the data on the page.\n\t\t *  @param {object} settings DataTables settings object\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.serverData\n\t\t *\n\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t */\n\t\t\"fnServerData\": null,\n\t\n\t\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t *  It is often useful to send extra data to the server when making an Ajax\n\t\t * request - for example custom filtering information, and this callback\n\t\t * function makes it trivial to send extra information to the server. The\n\t\t * passed in parameter is the data set that has been constructed by\n\t\t * DataTables, and you can add to this or modify it as you require.\n\t\t *  @type function\n\t\t *  @param {array} data Data array (array of objects which are name/value\n\t\t *    pairs) that has been constructed by DataTables and will be sent to the\n\t\t *    server. In the case of Ajax sourced data with server-side processing\n\t\t *    this will be an empty array, for server-side processing there will be a\n\t\t *    significant number of parameters!\n\t\t *  @returns {undefined} Ensure that you modify the data array passed in,\n\t\t *    as this is passed by reference.\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.serverParams\n\t\t *\n\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t */\n\t\t\"fnServerParams\": null,\n\t\n\t\n\t\t/**\n\t\t * Load the table state. With this function you can define from where, and how, the\n\t\t * state of a table is loaded. By default DataTables will load from `localStorage`\n\t\t * but you might wish to use a server-side database or cookies.\n\t\t *  @type function\n\t\t *  @member\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} callback Callback that can be executed when done. It\n\t\t *    should be passed the loaded state object.\n\t\t *  @return {object} The DataTables state object to be loaded\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.stateLoadCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateLoadCallback\": function (settings, callback) {\n\t\t *          $.ajax( {\n\t\t *            \"url\": \"/state_load\",\n\t\t *            \"dataType\": \"json\",\n\t\t *            \"success\": function (json) {\n\t\t *              callback( json );\n\t\t *            }\n\t\t *          } );\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateLoadCallback\": function ( settings ) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(\n\t\t\t\t\t(settings.iStateDuration === -1 ? sessionStorage : localStorage).getItem(\n\t\t\t\t\t\t'DataTables_'+settings.sInstance+'_'+location.pathname\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} catch (e) {}\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Callback which allows modification of the saved state prior to loading that state.\n\t\t * This callback is called when the table is loading state from the stored data, but\n\t\t * prior to the settings object being modified by the saved state. Note that for\n\t\t * plug-in authors, you should use the `stateLoadParams` event to load parameters for\n\t\t * a plug-in.\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} data The state object that is to be loaded\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.stateLoadParams\n\t\t *\n\t\t *  @example\n\t\t *    // Remove a saved filter, so filtering is never loaded\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateLoadParams\": function (settings, data) {\n\t\t *          data.oSearch.sSearch = \"\";\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Disallow state loading by returning false\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateLoadParams\": function (settings, data) {\n\t\t *          return false;\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateLoadParams\": null,\n\t\n\t\n\t\t/**\n\t\t * Callback that is called when the state has been loaded from the state saving method\n\t\t * and the DataTables settings object has been modified as a result of the loaded state.\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} data The state object that was loaded\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.stateLoaded\n\t\t *\n\t\t *  @example\n\t\t *    // Show an alert with the filtering value that was saved\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateLoaded\": function (settings, data) {\n\t\t *          alert( 'Saved filter was: '+data.oSearch.sSearch );\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateLoaded\": null,\n\t\n\t\n\t\t/**\n\t\t * Save the table state. This function allows you to define where and how the state\n\t\t * information for the table is stored By default DataTables will use `localStorage`\n\t\t * but you might wish to use a server-side database or cookies.\n\t\t *  @type function\n\t\t *  @member\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} data The state object to be saved\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.stateSaveCallback\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateSaveCallback\": function (settings, data) {\n\t\t *          // Send an Ajax request to the server with the state object\n\t\t *          $.ajax( {\n\t\t *            \"url\": \"/state_save\",\n\t\t *            \"data\": data,\n\t\t *            \"dataType\": \"json\",\n\t\t *            \"method\": \"POST\"\n\t\t *            \"success\": function () {}\n\t\t *          } );\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateSaveCallback\": function ( settings, data ) {\n\t\t\ttry {\n\t\t\t\t(settings.iStateDuration === -1 ? sessionStorage : localStorage).setItem(\n\t\t\t\t\t'DataTables_'+settings.sInstance+'_'+location.pathname,\n\t\t\t\t\tJSON.stringify( data )\n\t\t\t\t);\n\t\t\t} catch (e) {}\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Callback which allows modification of the state to be saved. Called when the table\n\t\t * has changed state a new state save is required. This method allows modification of\n\t\t * the state saving object prior to actually doing the save, including addition or\n\t\t * other state properties or modification. Note that for plug-in authors, you should\n\t\t * use the `stateSaveParams` event to save parameters for a plug-in.\n\t\t *  @type function\n\t\t *  @param {object} settings DataTables settings object\n\t\t *  @param {object} data The state object to be saved\n\t\t *\n\t\t *  @dtopt Callbacks\n\t\t *  @name DataTable.defaults.stateSaveParams\n\t\t *\n\t\t *  @example\n\t\t *    // Remove a saved filter, so filtering is never saved\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateSave\": true,\n\t\t *        \"stateSaveParams\": function (settings, data) {\n\t\t *          data.oSearch.sSearch = \"\";\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateSaveParams\": null,\n\t\n\t\n\t\t/**\n\t\t * Duration for which the saved state information is considered valid. After this period\n\t\t * has elapsed the state will be returned to the default.\n\t\t * Value is given in seconds.\n\t\t *  @type int\n\t\t *  @default 7200 <i>(2 hours)</i>\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.stateDuration\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"stateDuration\": 60*60*24; // 1 day\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"iStateDuration\": 7200,\n\t\n\t\n\t\t/**\n\t\t * When enabled DataTables will not make a request to the server for the first\n\t\t * page draw - rather it will use the data already on the page (no sorting etc\n\t\t * will be applied to it), thus saving on an XHR at load time. `deferLoading`\n\t\t * is used to indicate that deferred loading is required, but it is also used\n\t\t * to tell DataTables how many records there are in the full table (allowing\n\t\t * the information element and pagination to be displayed correctly). In the case\n\t\t * where a filtering is applied to the table on initial load, this can be\n\t\t * indicated by giving the parameter as an array, where the first element is\n\t\t * the number of records available after filtering and the second element is the\n\t\t * number of records without filtering (allowing the table information element\n\t\t * to be shown correctly).\n\t\t *  @type int | array\n\t\t *  @default null\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.deferLoading\n\t\t *\n\t\t *  @example\n\t\t *    // 57 records available in the table, no filtering applied\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"serverSide\": true,\n\t\t *        \"ajax\": \"scripts/server_processing.php\",\n\t\t *        \"deferLoading\": 57\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // 57 records after filtering, 100 without filtering (an initial filter applied)\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"serverSide\": true,\n\t\t *        \"ajax\": \"scripts/server_processing.php\",\n\t\t *        \"deferLoading\": [ 57, 100 ],\n\t\t *        \"search\": {\n\t\t *          \"search\": \"my_filter\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"iDeferLoading\": null,\n\t\n\t\n\t\t/**\n\t\t * Number of rows to display on a single page when using pagination. If\n\t\t * feature enabled (`lengthChange`) then the end user will be able to override\n\t\t * this to a custom setting using a pop-up menu.\n\t\t *  @type int\n\t\t *  @default 10\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.pageLength\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"pageLength\": 50\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"iDisplayLength\": 10,\n\t\n\t\n\t\t/**\n\t\t * Define the starting point for data display when using DataTables with\n\t\t * pagination. Note that this parameter is the number of records, rather than\n\t\t * the page number, so if you have 10 records per page and want to start on\n\t\t * the third page, it should be \"20\".\n\t\t *  @type int\n\t\t *  @default 0\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.displayStart\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"displayStart\": 20\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"iDisplayStart\": 0,\n\t\n\t\n\t\t/**\n\t\t * By default DataTables allows keyboard navigation of the table (sorting, paging,\n\t\t * and filtering) by adding a `tabindex` attribute to the required elements. This\n\t\t * allows you to tab through the controls and press the enter key to activate them.\n\t\t * The tabindex is default 0, meaning that the tab follows the flow of the document.\n\t\t * You can overrule this using this parameter if you wish. Use a value of -1 to\n\t\t * disable built-in keyboard navigation.\n\t\t *  @type int\n\t\t *  @default 0\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.tabIndex\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"tabIndex\": 1\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"iTabIndex\": 0,\n\t\n\t\n\t\t/**\n\t\t * Classes that DataTables assigns to the various components and features\n\t\t * that it adds to the HTML table. This allows classes to be configured\n\t\t * during initialisation in addition to through the static\n\t\t * {@link DataTable.ext.oStdClasses} object).\n\t\t *  @namespace\n\t\t *  @name DataTable.defaults.classes\n\t\t */\n\t\t\"oClasses\": {},\n\t\n\t\n\t\t/**\n\t\t * All strings that DataTables uses in the user interface that it creates\n\t\t * are defined in this object, allowing you to modified them individually or\n\t\t * completely replace them all as required.\n\t\t *  @namespace\n\t\t *  @name DataTable.defaults.language\n\t\t */\n\t\t\"oLanguage\": {\n\t\t\t/**\n\t\t\t * Strings that are used for WAI-ARIA labels and controls only (these are not\n\t\t\t * actually visible on the page, but will be read by screenreaders, and thus\n\t\t\t * must be internationalised as well).\n\t\t\t *  @namespace\n\t\t\t *  @name DataTable.defaults.language.aria\n\t\t\t */\n\t\t\t\"oAria\": {\n\t\t\t\t/**\n\t\t\t\t * ARIA label that is added to the table headers when the column may be\n\t\t\t\t * sorted ascending by activing the column (click or return when focused).\n\t\t\t\t * Note that the column header is prefixed to this string.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default : activate to sort column ascending\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.aria.sortAscending\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"aria\": {\n\t\t\t\t *            \"sortAscending\": \" - click/return to sort ascending\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sSortAscending\": \": activate to sort column ascending\",\n\t\n\t\t\t\t/**\n\t\t\t\t * ARIA label that is added to the table headers when the column may be\n\t\t\t\t * sorted descending by activing the column (click or return when focused).\n\t\t\t\t * Note that the column header is prefixed to this string.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default : activate to sort column ascending\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.aria.sortDescending\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"aria\": {\n\t\t\t\t *            \"sortDescending\": \" - click/return to sort descending\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sSortDescending\": \": activate to sort column descending\"\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * Pagination string used by DataTables for the built-in pagination\n\t\t\t * control types.\n\t\t\t *  @namespace\n\t\t\t *  @name DataTable.defaults.language.paginate\n\t\t\t */\n\t\t\t\"oPaginate\": {\n\t\t\t\t/**\n\t\t\t\t * Text to use when using the 'full_numbers' type of pagination for the\n\t\t\t\t * button to take the user to the first page.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default First\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.paginate.first\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"paginate\": {\n\t\t\t\t *            \"first\": \"First page\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sFirst\": \"First\",\n\t\n\t\n\t\t\t\t/**\n\t\t\t\t * Text to use when using the 'full_numbers' type of pagination for the\n\t\t\t\t * button to take the user to the last page.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default Last\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.paginate.last\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"paginate\": {\n\t\t\t\t *            \"last\": \"Last page\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sLast\": \"Last\",\n\t\n\t\n\t\t\t\t/**\n\t\t\t\t * Text to use for the 'next' pagination button (to take the user to the\n\t\t\t\t * next page).\n\t\t\t\t *  @type string\n\t\t\t\t *  @default Next\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.paginate.next\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"paginate\": {\n\t\t\t\t *            \"next\": \"Next page\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sNext\": \"Next\",\n\t\n\t\n\t\t\t\t/**\n\t\t\t\t * Text to use for the 'previous' pagination button (to take the user to\n\t\t\t\t * the previous page).\n\t\t\t\t *  @type string\n\t\t\t\t *  @default Previous\n\t\t\t\t *\n\t\t\t\t *  @dtopt Language\n\t\t\t\t *  @name DataTable.defaults.language.paginate.previous\n\t\t\t\t *\n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"language\": {\n\t\t\t\t *          \"paginate\": {\n\t\t\t\t *            \"previous\": \"Previous page\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sPrevious\": \"Previous\"\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * This string is shown in preference to `zeroRecords` when the table is\n\t\t\t * empty of data (regardless of filtering). Note that this is an optional\n\t\t\t * parameter - if it is not given, the value of `zeroRecords` will be used\n\t\t\t * instead (either the default or given value).\n\t\t\t *  @type string\n\t\t\t *  @default No data available in table\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.emptyTable\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"emptyTable\": \"No data available in table\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sEmptyTable\": \"No data available in table\",\n\t\n\t\n\t\t\t/**\n\t\t\t * This string gives information to the end user about the information\n\t\t\t * that is current on display on the page. The following tokens can be\n\t\t\t * used in the string and will be dynamically replaced as the table\n\t\t\t * display updates. This tokens can be placed anywhere in the string, or\n\t\t\t * removed as needed by the language requires:\n\t\t\t *\n\t\t\t * * `\\_START\\_` - Display index of the first record on the current page\n\t\t\t * * `\\_END\\_` - Display index of the last record on the current page\n\t\t\t * * `\\_TOTAL\\_` - Number of records in the table after filtering\n\t\t\t * * `\\_MAX\\_` - Number of records in the table without filtering\n\t\t\t * * `\\_PAGE\\_` - Current page number\n\t\t\t * * `\\_PAGES\\_` - Total number of pages of data in the table\n\t\t\t *\n\t\t\t *  @type string\n\t\t\t *  @default Showing _START_ to _END_ of _TOTAL_ entries\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.info\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"info\": \"Showing page _PAGE_ of _PAGES_\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sInfo\": \"Showing _START_ to _END_ of _TOTAL_ entries\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Display information string for when the table is empty. Typically the\n\t\t\t * format of this string should match `info`.\n\t\t\t *  @type string\n\t\t\t *  @default Showing 0 to 0 of 0 entries\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.infoEmpty\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"infoEmpty\": \"No entries to show\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sInfoEmpty\": \"Showing 0 to 0 of 0 entries\",\n\t\n\t\n\t\t\t/**\n\t\t\t * When a user filters the information in a table, this string is appended\n\t\t\t * to the information (`info`) to give an idea of how strong the filtering\n\t\t\t * is. The variable _MAX_ is dynamically updated.\n\t\t\t *  @type string\n\t\t\t *  @default (filtered from _MAX_ total entries)\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.infoFiltered\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"infoFiltered\": \" - filtering from _MAX_ records\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sInfoFiltered\": \"(filtered from _MAX_ total entries)\",\n\t\n\t\n\t\t\t/**\n\t\t\t * If can be useful to append extra information to the info string at times,\n\t\t\t * and this variable does exactly that. This information will be appended to\n\t\t\t * the `info` (`infoEmpty` and `infoFiltered` in whatever combination they are\n\t\t\t * being used) at all times.\n\t\t\t *  @type string\n\t\t\t *  @default <i>Empty string</i>\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.infoPostFix\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"infoPostFix\": \"All records shown are derived from real information.\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sInfoPostFix\": \"\",\n\t\n\t\n\t\t\t/**\n\t\t\t * This decimal place operator is a little different from the other\n\t\t\t * language options since DataTables doesn't output floating point\n\t\t\t * numbers, so it won't ever use this for display of a number. Rather,\n\t\t\t * what this parameter does is modify the sort methods of the table so\n\t\t\t * that numbers which are in a format which has a character other than\n\t\t\t * a period (`.`) as a decimal place will be sorted numerically.\n\t\t\t *\n\t\t\t * Note that numbers with different decimal places cannot be shown in\n\t\t\t * the same table and still be sortable, the table must be consistent.\n\t\t\t * However, multiple different tables on the page can use different\n\t\t\t * decimal place characters.\n\t\t\t *  @type string\n\t\t\t *  @default \n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.decimal\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"decimal\": \",\"\n\t\t\t *          \"thousands\": \".\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sDecimal\": \"\",\n\t\n\t\n\t\t\t/**\n\t\t\t * DataTables has a build in number formatter (`formatNumber`) which is\n\t\t\t * used to format large numbers that are used in the table information.\n\t\t\t * By default a comma is used, but this can be trivially changed to any\n\t\t\t * character you wish with this parameter.\n\t\t\t *  @type string\n\t\t\t *  @default ,\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.thousands\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"thousands\": \"'\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sThousands\": \",\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Detail the action that will be taken when the drop down menu for the\n\t\t\t * pagination length option is changed. The '_MENU_' variable is replaced\n\t\t\t * with a default select list of 10, 25, 50 and 100, and can be replaced\n\t\t\t * with a custom select box if required.\n\t\t\t *  @type string\n\t\t\t *  @default Show _MENU_ entries\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.lengthMenu\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Language change only\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"lengthMenu\": \"Display _MENU_ records\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Language and options change\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"lengthMenu\": 'Display <select>'+\n\t\t\t *            '<option value=\"10\">10</option>'+\n\t\t\t *            '<option value=\"20\">20</option>'+\n\t\t\t *            '<option value=\"30\">30</option>'+\n\t\t\t *            '<option value=\"40\">40</option>'+\n\t\t\t *            '<option value=\"50\">50</option>'+\n\t\t\t *            '<option value=\"-1\">All</option>'+\n\t\t\t *            '</select> records'\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sLengthMenu\": \"Show _MENU_ entries\",\n\t\n\t\n\t\t\t/**\n\t\t\t * When using Ajax sourced data and during the first draw when DataTables is\n\t\t\t * gathering the data, this message is shown in an empty row in the table to\n\t\t\t * indicate to the end user the the data is being loaded. Note that this\n\t\t\t * parameter is not used when loading data by server-side processing, just\n\t\t\t * Ajax sourced data with client-side processing.\n\t\t\t *  @type string\n\t\t\t *  @default Loading...\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.loadingRecords\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"loadingRecords\": \"Please wait - loading...\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sLoadingRecords\": \"Loading...\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Text which is displayed when the table is processing a user action\n\t\t\t * (usually a sort command or similar).\n\t\t\t *  @type string\n\t\t\t *  @default Processing...\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.processing\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"processing\": \"DataTables is currently busy\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sProcessing\": \"Processing...\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Details the actions that will be taken when the user types into the\n\t\t\t * filtering input text box. The variable \"_INPUT_\", if used in the string,\n\t\t\t * is replaced with the HTML text box for the filtering input allowing\n\t\t\t * control over where it appears in the string. If \"_INPUT_\" is not given\n\t\t\t * then the input box is appended to the string automatically.\n\t\t\t *  @type string\n\t\t\t *  @default Search:\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.search\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Input text box will be appended at the end automatically\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"search\": \"Filter records:\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Specify where the filter should appear\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"search\": \"Apply filter _INPUT_ to table\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sSearch\": \"Search:\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Assign a `placeholder` attribute to the search `input` element\n\t\t\t *  @type string\n\t\t\t *  @default \n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.searchPlaceholder\n\t\t\t */\n\t\t\t\"sSearchPlaceholder\": \"\",\n\t\n\t\n\t\t\t/**\n\t\t\t * All of the language information can be stored in a file on the\n\t\t\t * server-side, which DataTables will look up if this parameter is passed.\n\t\t\t * It must store the URL of the language file, which is in a JSON format,\n\t\t\t * and the object has the same properties as the oLanguage object in the\n\t\t\t * initialiser object (i.e. the above parameters). Please refer to one of\n\t\t\t * the example language files to see how this works in action.\n\t\t\t *  @type string\n\t\t\t *  @default <i>Empty string - i.e. disabled</i>\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.url\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"url\": \"http://www.sprymedia.co.uk/dataTables/lang.txt\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sUrl\": \"\",\n\t\n\t\n\t\t\t/**\n\t\t\t * Text shown inside the table records when the is no information to be\n\t\t\t * displayed after filtering. `emptyTable` is shown when there is simply no\n\t\t\t * information in the table at all (regardless of filtering).\n\t\t\t *  @type string\n\t\t\t *  @default No matching records found\n\t\t\t *\n\t\t\t *  @dtopt Language\n\t\t\t *  @name DataTable.defaults.language.zeroRecords\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"language\": {\n\t\t\t *          \"zeroRecords\": \"No records to display\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sZeroRecords\": \"No matching records found\"\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * This parameter allows you to have define the global filtering state at\n\t\t * initialisation time. As an object the `search` parameter must be\n\t\t * defined, but all other parameters are optional. When `regex` is true,\n\t\t * the search string will be treated as a regular expression, when false\n\t\t * (default) it will be treated as a straight string. When `smart`\n\t\t * DataTables will use it's smart filtering methods (to word match at\n\t\t * any point in the data), when false this will not be done.\n\t\t *  @namespace\n\t\t *  @extends DataTable.models.oSearch\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.search\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"search\": {\"search\": \"Initial search\"}\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"oSearch\": $.extend( {}, DataTable.models.oSearch ),\n\t\n\t\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t * By default DataTables will look for the property `data` (or `aaData` for\n\t\t * compatibility with DataTables 1.9-) when obtaining data from an Ajax\n\t\t * source or for server-side processing - this parameter allows that\n\t\t * property to be changed. You can use Javascript dotted object notation to\n\t\t * get a data source for multiple levels of nesting.\n\t\t *  @type string\n\t\t *  @default data\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.ajaxDataProp\n\t\t *\n\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t */\n\t\t\"sAjaxDataProp\": \"data\",\n\t\n\t\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t * You can instruct DataTables to load data from an external\n\t\t * source using this parameter (use aData if you want to pass data in you\n\t\t * already have). Simply provide a url a JSON object can be obtained from.\n\t\t *  @type string\n\t\t *  @default null\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.ajaxSource\n\t\t *\n\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t */\n\t\t\"sAjaxSource\": null,\n\t\n\t\n\t\t/**\n\t\t * This initialisation variable allows you to specify exactly where in the\n\t\t * DOM you want DataTables to inject the various controls it adds to the page\n\t\t * (for example you might want the pagination controls at the top of the\n\t\t * table). DIV elements (with or without a custom class) can also be added to\n\t\t * aid styling. The follow syntax is used:\n\t\t *   <ul>\n\t\t *     <li>The following options are allowed:\n\t\t *       <ul>\n\t\t *         <li>'l' - Length changing</li>\n\t\t *         <li>'f' - Filtering input</li>\n\t\t *         <li>'t' - The table!</li>\n\t\t *         <li>'i' - Information</li>\n\t\t *         <li>'p' - Pagination</li>\n\t\t *         <li>'r' - pRocessing</li>\n\t\t *       </ul>\n\t\t *     </li>\n\t\t *     <li>The following constants are allowed:\n\t\t *       <ul>\n\t\t *         <li>'H' - jQueryUI theme \"header\" classes ('fg-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix')</li>\n\t\t *         <li>'F' - jQueryUI theme \"footer\" classes ('fg-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix')</li>\n\t\t *       </ul>\n\t\t *     </li>\n\t\t *     <li>The following syntax is expected:\n\t\t *       <ul>\n\t\t *         <li>'&lt;' and '&gt;' - div elements</li>\n\t\t *         <li>'&lt;\"class\" and '&gt;' - div with a class</li>\n\t\t *         <li>'&lt;\"#id\" and '&gt;' - div with an ID</li>\n\t\t *       </ul>\n\t\t *     </li>\n\t\t *     <li>Examples:\n\t\t *       <ul>\n\t\t *         <li>'&lt;\"wrapper\"flipt&gt;'</li>\n\t\t *         <li>'&lt;lf&lt;t&gt;ip&gt;'</li>\n\t\t *       </ul>\n\t\t *     </li>\n\t\t *   </ul>\n\t\t *  @type string\n\t\t *  @default lfrtip <i>(when `jQueryUI` is false)</i> <b>or</b>\n\t\t *    <\"H\"lfr>t<\"F\"ip> <i>(when `jQueryUI` is true)</i>\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.dom\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"dom\": '&lt;\"top\"i&gt;rt&lt;\"bottom\"flp&gt;&lt;\"clear\"&gt;'\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sDom\": \"lfrtip\",\n\t\n\t\n\t\t/**\n\t\t * Search delay option. This will throttle full table searches that use the\n\t\t * DataTables provided search input element (it does not effect calls to\n\t\t * `dt-api search()`, providing a delay before the search is made.\n\t\t *  @type integer\n\t\t *  @default 0\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.searchDelay\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"searchDelay\": 200\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"searchDelay\": null,\n\t\n\t\n\t\t/**\n\t\t * DataTables features six different built-in options for the buttons to\n\t\t * display for pagination control:\n\t\t *\n\t\t * * `numbers` - Page number buttons only\n\t\t * * `simple` - 'Previous' and 'Next' buttons only\n\t\t * * 'simple_numbers` - 'Previous' and 'Next' buttons, plus page numbers\n\t\t * * `full` - 'First', 'Previous', 'Next' and 'Last' buttons\n\t\t * * `full_numbers` - 'First', 'Previous', 'Next' and 'Last' buttons, plus page numbers\n\t\t * * `first_last_numbers` - 'First' and 'Last' buttons, plus page numbers\n\t\t *  \n\t\t * Further methods can be added using {@link DataTable.ext.oPagination}.\n\t\t *  @type string\n\t\t *  @default simple_numbers\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.pagingType\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"pagingType\": \"full_numbers\"\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"sPaginationType\": \"simple_numbers\",\n\t\n\t\n\t\t/**\n\t\t * Enable horizontal scrolling. When a table is too wide to fit into a\n\t\t * certain layout, or you have a large number of columns in the table, you\n\t\t * can enable x-scrolling to show the table in a viewport, which can be\n\t\t * scrolled. This property can be `true` which will allow the table to\n\t\t * scroll horizontally when needed, or any CSS unit, or a number (in which\n\t\t * case it will be treated as a pixel measurement). Setting as simply `true`\n\t\t * is recommended.\n\t\t *  @type boolean|string\n\t\t *  @default <i>blank string - i.e. disabled</i>\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.scrollX\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"scrollX\": true,\n\t\t *        \"scrollCollapse\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sScrollX\": \"\",\n\t\n\t\n\t\t/**\n\t\t * This property can be used to force a DataTable to use more width than it\n\t\t * might otherwise do when x-scrolling is enabled. For example if you have a\n\t\t * table which requires to be well spaced, this parameter is useful for\n\t\t * \"over-sizing\" the table, and thus forcing scrolling. This property can by\n\t\t * any CSS unit, or a number (in which case it will be treated as a pixel\n\t\t * measurement).\n\t\t *  @type string\n\t\t *  @default <i>blank string - i.e. disabled</i>\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @name DataTable.defaults.scrollXInner\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"scrollX\": \"100%\",\n\t\t *        \"scrollXInner\": \"110%\"\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sScrollXInner\": \"\",\n\t\n\t\n\t\t/**\n\t\t * Enable vertical scrolling. Vertical scrolling will constrain the DataTable\n\t\t * to the given height, and enable scrolling for any data which overflows the\n\t\t * current viewport. This can be used as an alternative to paging to display\n\t\t * a lot of data in a small area (although paging and scrolling can both be\n\t\t * enabled at the same time). This property can be any CSS unit, or a number\n\t\t * (in which case it will be treated as a pixel measurement).\n\t\t *  @type string\n\t\t *  @default <i>blank string - i.e. disabled</i>\n\t\t *\n\t\t *  @dtopt Features\n\t\t *  @name DataTable.defaults.scrollY\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"scrollY\": \"200px\",\n\t\t *        \"paginate\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sScrollY\": \"\",\n\t\n\t\n\t\t/**\n\t\t * __Deprecated__ The functionality provided by this parameter has now been\n\t\t * superseded by that provided through `ajax`, which should be used instead.\n\t\t *\n\t\t * Set the HTTP method that is used to make the Ajax call for server-side\n\t\t * processing or Ajax sourced data.\n\t\t *  @type string\n\t\t *  @default GET\n\t\t *\n\t\t *  @dtopt Options\n\t\t *  @dtopt Server-side\n\t\t *  @name DataTable.defaults.serverMethod\n\t\t *\n\t\t *  @deprecated 1.10. Please use `ajax` for this functionality now.\n\t\t */\n\t\t\"sServerMethod\": \"GET\",\n\t\n\t\n\t\t/**\n\t\t * DataTables makes use of renderers when displaying HTML elements for\n\t\t * a table. These renderers can be added or modified by plug-ins to\n\t\t * generate suitable mark-up for a site. For example the Bootstrap\n\t\t * integration plug-in for DataTables uses a paging button renderer to\n\t\t * display pagination buttons in the mark-up required by Bootstrap.\n\t\t *\n\t\t * For further information about the renderers available see\n\t\t * DataTable.ext.renderer\n\t\t *  @type string|object\n\t\t *  @default null\n\t\t *\n\t\t *  @name DataTable.defaults.renderer\n\t\t *\n\t\t */\n\t\t\"renderer\": null,\n\t\n\t\n\t\t/**\n\t\t * Set the data property name that DataTables should use to get a row's id\n\t\t * to set as the `id` property in the node.\n\t\t *  @type string\n\t\t *  @default DT_RowId\n\t\t *\n\t\t *  @name DataTable.defaults.rowId\n\t\t */\n\t\t\"rowId\": \"DT_RowId\"\n\t};\n\t\n\t_fnHungarianMap( DataTable.defaults );\n\t\n\t\n\t\n\t/*\n\t * Developer note - See note in model.defaults.js about the use of Hungarian\n\t * notation and camel case.\n\t */\n\t\n\t/**\n\t * Column options that can be given to DataTables at initialisation time.\n\t *  @namespace\n\t */\n\tDataTable.defaults.column = {\n\t\t/**\n\t\t * Define which column(s) an order will occur on for this column. This\n\t\t * allows a column's ordering to take multiple columns into account when\n\t\t * doing a sort or use the data from a different column. For example first\n\t\t * name / last name columns make sense to do a multi-column sort over the\n\t\t * two columns.\n\t\t *  @type array|int\n\t\t *  @default null <i>Takes the value of the column index automatically</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.orderData\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"orderData\": [ 0, 1 ], \"targets\": [ 0 ] },\n\t\t *          { \"orderData\": [ 1, 0 ], \"targets\": [ 1 ] },\n\t\t *          { \"orderData\": 2, \"targets\": [ 2 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"orderData\": [ 0, 1 ] },\n\t\t *          { \"orderData\": [ 1, 0 ] },\n\t\t *          { \"orderData\": 2 },\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"aDataSort\": null,\n\t\t\"iDataSort\": -1,\n\t\n\t\n\t\t/**\n\t\t * You can control the default ordering direction, and even alter the\n\t\t * behaviour of the sort handler (i.e. only allow ascending ordering etc)\n\t\t * using this parameter.\n\t\t *  @type array\n\t\t *  @default [ 'asc', 'desc' ]\n\t\t *\n\t\t *  @name DataTable.defaults.column.orderSequence\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"orderSequence\": [ \"asc\" ], \"targets\": [ 1 ] },\n\t\t *          { \"orderSequence\": [ \"desc\", \"asc\", \"asc\" ], \"targets\": [ 2 ] },\n\t\t *          { \"orderSequence\": [ \"desc\" ], \"targets\": [ 3 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          null,\n\t\t *          { \"orderSequence\": [ \"asc\" ] },\n\t\t *          { \"orderSequence\": [ \"desc\", \"asc\", \"asc\" ] },\n\t\t *          { \"orderSequence\": [ \"desc\" ] },\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"asSorting\": [ 'asc', 'desc' ],\n\t\n\t\n\t\t/**\n\t\t * Enable or disable filtering on the data in this column.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @name DataTable.defaults.column.searchable\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"searchable\": false, \"targets\": [ 0 ] }\n\t\t *        ] } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"searchable\": false },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ] } );\n\t\t *    } );\n\t\t */\n\t\t\"bSearchable\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable ordering on this column.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @name DataTable.defaults.column.orderable\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"orderable\": false, \"targets\": [ 0 ] }\n\t\t *        ] } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"orderable\": false },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ] } );\n\t\t *    } );\n\t\t */\n\t\t\"bSortable\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable the display of this column.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *\n\t\t *  @name DataTable.defaults.column.visible\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"visible\": false, \"targets\": [ 0 ] }\n\t\t *        ] } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"visible\": false },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ] } );\n\t\t *    } );\n\t\t */\n\t\t\"bVisible\": true,\n\t\n\t\n\t\t/**\n\t\t * Developer definable function that is called whenever a cell is created (Ajax source,\n\t\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n\t\t * allowing you to modify the DOM element (add background colour for example) when the\n\t\t * element is available.\n\t\t *  @type function\n\t\t *  @param {element} td The TD node that has been created\n\t\t *  @param {*} cellData The Data for the cell\n\t\t *  @param {array|object} rowData The data for the whole row\n\t\t *  @param {int} row The row index for the aoData data store\n\t\t *  @param {int} col The column index for aoColumns\n\t\t *\n\t\t *  @name DataTable.defaults.column.createdCell\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [3],\n\t\t *          \"createdCell\": function (td, cellData, rowData, row, col) {\n\t\t *            if ( cellData == \"1.7\" ) {\n\t\t *              $(td).css('color', 'blue')\n\t\t *            }\n\t\t *          }\n\t\t *        } ]\n\t\t *      });\n\t\t *    } );\n\t\t */\n\t\t\"fnCreatedCell\": null,\n\t\n\t\n\t\t/**\n\t\t * This parameter has been replaced by `data` in DataTables to ensure naming\n\t\t * consistency. `dataProp` can still be used, as there is backwards\n\t\t * compatibility in DataTables for this option, but it is strongly\n\t\t * recommended that you use `data` in preference to `dataProp`.\n\t\t *  @name DataTable.defaults.column.dataProp\n\t\t */\n\t\n\t\n\t\t/**\n\t\t * This property can be used to read data from any data source property,\n\t\t * including deeply nested objects / properties. `data` can be given in a\n\t\t * number of different ways which effect its behaviour:\n\t\t *\n\t\t * * `integer` - treated as an array index for the data source. This is the\n\t\t *   default that DataTables uses (incrementally increased for each column).\n\t\t * * `string` - read an object property from the data source. There are\n\t\t *   three 'special' options that can be used in the string to alter how\n\t\t *   DataTables reads the data from the source object:\n\t\t *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n\t\t *      Javascript to read from nested objects, so to can the options\n\t\t *      specified in `data`. For example: `browser.version` or\n\t\t *      `browser.name`. If your object parameter name contains a period, use\n\t\t *      `\\\\` to escape it - i.e. `first\\\\.name`.\n\t\t *    * `[]` - Array notation. DataTables can automatically combine data\n\t\t *      from and array source, joining the data with the characters provided\n\t\t *      between the two brackets. For example: `name[, ]` would provide a\n\t\t *      comma-space separated list from the source array. If no characters\n\t\t *      are provided between the brackets, the original array source is\n\t\t *      returned.\n\t\t *    * `()` - Function notation. Adding `()` to the end of a parameter will\n\t\t *      execute a function of the name given. For example: `browser()` for a\n\t\t *      simple function on the data source, `browser.version()` for a\n\t\t *      function in a nested property or even `browser().version` to get an\n\t\t *      object property if the function called returns an object. Note that\n\t\t *      function notation is recommended for use in `render` rather than\n\t\t *      `data` as it is much simpler to use as a renderer.\n\t\t * * `null` - use the original data source for the row rather than plucking\n\t\t *   data directly from it. This action has effects on two other\n\t\t *   initialisation options:\n\t\t *    * `defaultContent` - When null is given as the `data` option and\n\t\t *      `defaultContent` is specified for the column, the value defined by\n\t\t *      `defaultContent` will be used for the cell.\n\t\t *    * `render` - When null is used for the `data` option and the `render`\n\t\t *      option is specified for the column, the whole data source for the\n\t\t *      row is used for the renderer.\n\t\t * * `function` - the function given will be executed whenever DataTables\n\t\t *   needs to set or get the data for a cell in the column. The function\n\t\t *   takes three parameters:\n\t\t *    * Parameters:\n\t\t *      * `{array|object}` The data source for the row\n\t\t *      * `{string}` The type call data requested - this will be 'set' when\n\t\t *        setting data or 'filter', 'display', 'type', 'sort' or undefined\n\t\t *        when gathering data. Note that when `undefined` is given for the\n\t\t *        type DataTables expects to get the raw data for the object back<\n\t\t *      * `{*}` Data to set when the second parameter is 'set'.\n\t\t *    * Return:\n\t\t *      * The return value from the function is not required when 'set' is\n\t\t *        the type of call, but otherwise the return is what will be used\n\t\t *        for the data requested.\n\t\t *\n\t\t * Note that `data` is a getter and setter option. If you just require\n\t\t * formatting of data for output, you will likely want to use `render` which\n\t\t * is simply a getter and thus simpler to use.\n\t\t *\n\t\t * Note that prior to DataTables 1.9.2 `data` was called `mDataProp`. The\n\t\t * name change reflects the flexibility of this property and is consistent\n\t\t * with the naming of mRender. If 'mDataProp' is given, then it will still\n\t\t * be used by DataTables, as it automatically maps the old name to the new\n\t\t * if required.\n\t\t *\n\t\t *  @type string|int|function|null\n\t\t *  @default null <i>Use automatically calculated column index</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.data\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Read table data from objects\n\t\t *    // JSON structure for each row:\n\t\t *    //   {\n\t\t *    //      \"engine\": {value},\n\t\t *    //      \"browser\": {value},\n\t\t *    //      \"platform\": {value},\n\t\t *    //      \"version\": {value},\n\t\t *    //      \"grade\": {value}\n\t\t *    //   }\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ajaxSource\": \"sources/objects.txt\",\n\t\t *        \"columns\": [\n\t\t *          { \"data\": \"engine\" },\n\t\t *          { \"data\": \"browser\" },\n\t\t *          { \"data\": \"platform\" },\n\t\t *          { \"data\": \"version\" },\n\t\t *          { \"data\": \"grade\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Read information from deeply nested objects\n\t\t *    // JSON structure for each row:\n\t\t *    //   {\n\t\t *    //      \"engine\": {value},\n\t\t *    //      \"browser\": {value},\n\t\t *    //      \"platform\": {\n\t\t *    //         \"inner\": {value}\n\t\t *    //      },\n\t\t *    //      \"details\": [\n\t\t *    //         {value}, {value}\n\t\t *    //      ]\n\t\t *    //   }\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ajaxSource\": \"sources/deep.txt\",\n\t\t *        \"columns\": [\n\t\t *          { \"data\": \"engine\" },\n\t\t *          { \"data\": \"browser\" },\n\t\t *          { \"data\": \"platform.inner\" },\n\t\t *          { \"data\": \"details.0\" },\n\t\t *          { \"data\": \"details.1\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `data` as a function to provide different information for\n\t\t *    // sorting, filtering and display. In this case, currency (price)\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": function ( source, type, val ) {\n\t\t *            if (type === 'set') {\n\t\t *              source.price = val;\n\t\t *              // Store the computed dislay and filter values for efficiency\n\t\t *              source.price_display = val==\"\" ? \"\" : \"$\"+numberFormat(val);\n\t\t *              source.price_filter  = val==\"\" ? \"\" : \"$\"+numberFormat(val)+\" \"+val;\n\t\t *              return;\n\t\t *            }\n\t\t *            else if (type === 'display') {\n\t\t *              return source.price_display;\n\t\t *            }\n\t\t *            else if (type === 'filter') {\n\t\t *              return source.price_filter;\n\t\t *            }\n\t\t *            // 'sort', 'type' and undefined all just use the integer\n\t\t *            return source.price;\n\t\t *          }\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using default content\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": null,\n\t\t *          \"defaultContent\": \"Click to edit\"\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using array notation - outputting a list from an array\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": \"name[, ]\"\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t */\n\t\t\"mData\": null,\n\t\n\t\n\t\t/**\n\t\t * This property is the rendering partner to `data` and it is suggested that\n\t\t * when you want to manipulate data for display (including filtering,\n\t\t * sorting etc) without altering the underlying data for the table, use this\n\t\t * property. `render` can be considered to be the the read only companion to\n\t\t * `data` which is read / write (then as such more complex). Like `data`\n\t\t * this option can be given in a number of different ways to effect its\n\t\t * behaviour:\n\t\t *\n\t\t * * `integer` - treated as an array index for the data source. This is the\n\t\t *   default that DataTables uses (incrementally increased for each column).\n\t\t * * `string` - read an object property from the data source. There are\n\t\t *   three 'special' options that can be used in the string to alter how\n\t\t *   DataTables reads the data from the source object:\n\t\t *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n\t\t *      Javascript to read from nested objects, so to can the options\n\t\t *      specified in `data`. For example: `browser.version` or\n\t\t *      `browser.name`. If your object parameter name contains a period, use\n\t\t *      `\\\\` to escape it - i.e. `first\\\\.name`.\n\t\t *    * `[]` - Array notation. DataTables can automatically combine data\n\t\t *      from and array source, joining the data with the characters provided\n\t\t *      between the two brackets. For example: `name[, ]` would provide a\n\t\t *      comma-space separated list from the source array. If no characters\n\t\t *      are provided between the brackets, the original array source is\n\t\t *      returned.\n\t\t *    * `()` - Function notation. Adding `()` to the end of a parameter will\n\t\t *      execute a function of the name given. For example: `browser()` for a\n\t\t *      simple function on the data source, `browser.version()` for a\n\t\t *      function in a nested property or even `browser().version` to get an\n\t\t *      object property if the function called returns an object.\n\t\t * * `object` - use different data for the different data types requested by\n\t\t *   DataTables ('filter', 'display', 'type' or 'sort'). The property names\n\t\t *   of the object is the data type the property refers to and the value can\n\t\t *   defined using an integer, string or function using the same rules as\n\t\t *   `render` normally does. Note that an `_` option _must_ be specified.\n\t\t *   This is the default value to use if you haven't specified a value for\n\t\t *   the data type requested by DataTables.\n\t\t * * `function` - the function given will be executed whenever DataTables\n\t\t *   needs to set or get the data for a cell in the column. The function\n\t\t *   takes three parameters:\n\t\t *    * Parameters:\n\t\t *      * {array|object} The data source for the row (based on `data`)\n\t\t *      * {string} The type call data requested - this will be 'filter',\n\t\t *        'display', 'type' or 'sort'.\n\t\t *      * {array|object} The full data source for the row (not based on\n\t\t *        `data`)\n\t\t *    * Return:\n\t\t *      * The return value from the function is what will be used for the\n\t\t *        data requested.\n\t\t *\n\t\t *  @type string|int|function|object|null\n\t\t *  @default null Use the data source value.\n\t\t *\n\t\t *  @name DataTable.defaults.column.render\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Create a comma separated list from an array of objects\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"ajaxSource\": \"sources/deep.txt\",\n\t\t *        \"columns\": [\n\t\t *          { \"data\": \"engine\" },\n\t\t *          { \"data\": \"browser\" },\n\t\t *          {\n\t\t *            \"data\": \"platform\",\n\t\t *            \"render\": \"[, ].name\"\n\t\t *          }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Execute a function to obtain data\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": null, // Use the full data source object for the renderer's source\n\t\t *          \"render\": \"browserName()\"\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // As an object, extracting different data for the different types\n\t\t *    // This would be used with a data source such as:\n\t\t *    //   { \"phone\": 5552368, \"phone_filter\": \"5552368 555-2368\", \"phone_display\": \"555-2368\" }\n\t\t *    // Here the `phone` integer is used for sorting and type detection, while `phone_filter`\n\t\t *    // (which has both forms) is used for filtering for if a user inputs either format, while\n\t\t *    // the formatted phone number is the one that is shown in the table.\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": null, // Use the full data source object for the renderer's source\n\t\t *          \"render\": {\n\t\t *            \"_\": \"phone\",\n\t\t *            \"filter\": \"phone_filter\",\n\t\t *            \"display\": \"phone_display\"\n\t\t *          }\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Use as a function to create a link from the data source\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"data\": \"download_link\",\n\t\t *          \"render\": function ( data, type, full ) {\n\t\t *            return '<a href=\"'+data+'\">Download</a>';\n\t\t *          }\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"mRender\": null,\n\t\n\t\n\t\t/**\n\t\t * Change the cell type created for the column - either TD cells or TH cells. This\n\t\t * can be useful as TH cells have semantic meaning in the table body, allowing them\n\t\t * to act as a header for a row (you may wish to add scope='row' to the TH elements).\n\t\t *  @type string\n\t\t *  @default td\n\t\t *\n\t\t *  @name DataTable.defaults.column.cellType\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Make the first column use TH cells\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [ {\n\t\t *          \"targets\": [ 0 ],\n\t\t *          \"cellType\": \"th\"\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sCellType\": \"td\",\n\t\n\t\n\t\t/**\n\t\t * Class to give to each cell in this column.\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.class\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"class\": \"my_class\", \"targets\": [ 0 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"class\": \"my_class\" },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sClass\": \"\",\n\t\n\t\t/**\n\t\t * When DataTables calculates the column widths to assign to each column,\n\t\t * it finds the longest string in each column and then constructs a\n\t\t * temporary table and reads the widths from that. The problem with this\n\t\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n\t\t * string - thus the calculation can go wrong (doing it properly and putting\n\t\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\n\t\t * a \"work around\" we provide this option. It will append its value to the\n\t\t * text that is found to be the longest string for the column - i.e. padding.\n\t\t * Generally you shouldn't need this!\n\t\t *  @type string\n\t\t *  @default <i>Empty string<i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.contentPadding\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          {\n\t\t *            \"contentPadding\": \"mmm\"\n\t\t *          }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sContentPadding\": \"\",\n\t\n\t\n\t\t/**\n\t\t * Allows a default value to be given for a column's data, and will be used\n\t\t * whenever a null data source is encountered (this can be because `data`\n\t\t * is set to null, or because the data source itself is null).\n\t\t *  @type string\n\t\t *  @default null\n\t\t *\n\t\t *  @name DataTable.defaults.column.defaultContent\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          {\n\t\t *            \"data\": null,\n\t\t *            \"defaultContent\": \"Edit\",\n\t\t *            \"targets\": [ -1 ]\n\t\t *          }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          {\n\t\t *            \"data\": null,\n\t\t *            \"defaultContent\": \"Edit\"\n\t\t *          }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sDefaultContent\": null,\n\t\n\t\n\t\t/**\n\t\t * This parameter is only used in DataTables' server-side processing. It can\n\t\t * be exceptionally useful to know what columns are being displayed on the\n\t\t * client side, and to map these to database fields. When defined, the names\n\t\t * also allow DataTables to reorder information from the server if it comes\n\t\t * back in an unexpected order (i.e. if you switch your columns around on the\n\t\t * client-side, your server-side code does not also need updating).\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.name\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"name\": \"engine\", \"targets\": [ 0 ] },\n\t\t *          { \"name\": \"browser\", \"targets\": [ 1 ] },\n\t\t *          { \"name\": \"platform\", \"targets\": [ 2 ] },\n\t\t *          { \"name\": \"version\", \"targets\": [ 3 ] },\n\t\t *          { \"name\": \"grade\", \"targets\": [ 4 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"name\": \"engine\" },\n\t\t *          { \"name\": \"browser\" },\n\t\t *          { \"name\": \"platform\" },\n\t\t *          { \"name\": \"version\" },\n\t\t *          { \"name\": \"grade\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sName\": \"\",\n\t\n\t\n\t\t/**\n\t\t * Defines a data source type for the ordering which can be used to read\n\t\t * real-time information from the table (updating the internally cached\n\t\t * version) prior to ordering. This allows ordering to occur on user\n\t\t * editable elements such as form inputs.\n\t\t *  @type string\n\t\t *  @default std\n\t\t *\n\t\t *  @name DataTable.defaults.column.orderDataType\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"orderDataType\": \"dom-text\", \"targets\": [ 2, 3 ] },\n\t\t *          { \"type\": \"numeric\", \"targets\": [ 3 ] },\n\t\t *          { \"orderDataType\": \"dom-select\", \"targets\": [ 4 ] },\n\t\t *          { \"orderDataType\": \"dom-checkbox\", \"targets\": [ 5 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          null,\n\t\t *          null,\n\t\t *          { \"orderDataType\": \"dom-text\" },\n\t\t *          { \"orderDataType\": \"dom-text\", \"type\": \"numeric\" },\n\t\t *          { \"orderDataType\": \"dom-select\" },\n\t\t *          { \"orderDataType\": \"dom-checkbox\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sSortDataType\": \"std\",\n\t\n\t\n\t\t/**\n\t\t * The title of this column.\n\t\t *  @type string\n\t\t *  @default null <i>Derived from the 'TH' value for this column in the\n\t\t *    original HTML table.</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.title\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"title\": \"My column title\", \"targets\": [ 0 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"title\": \"My column title\" },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sTitle\": null,\n\t\n\t\n\t\t/**\n\t\t * The type allows you to specify how the data for this column will be\n\t\t * ordered. Four types (string, numeric, date and html (which will strip\n\t\t * HTML tags before ordering)) are currently available. Note that only date\n\t\t * formats understood by Javascript's Date() object will be accepted as type\n\t\t * date. For example: \"Mar 26, 2008 5:03 PM\". May take the values: 'string',\n\t\t * 'numeric', 'date' or 'html' (by default). Further types can be adding\n\t\t * through plug-ins.\n\t\t *  @type string\n\t\t *  @default null <i>Auto-detected from raw data</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.type\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"type\": \"html\", \"targets\": [ 0 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"type\": \"html\" },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sType\": null,\n\t\n\t\n\t\t/**\n\t\t * Defining the width of the column, this parameter may take any CSS value\n\t\t * (3em, 20px etc). DataTables applies 'smart' widths to columns which have not\n\t\t * been given a specific width through this interface ensuring that the table\n\t\t * remains readable.\n\t\t *  @type string\n\t\t *  @default null <i>Automatic</i>\n\t\t *\n\t\t *  @name DataTable.defaults.column.width\n\t\t *  @dtopt Columns\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columnDefs`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columnDefs\": [\n\t\t *          { \"width\": \"20%\", \"targets\": [ 0 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Using `columns`\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"columns\": [\n\t\t *          { \"width\": \"20%\" },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sWidth\": null\n\t};\n\t\n\t_fnHungarianMap( DataTable.defaults.column );\n\t\n\t\n\t\n\t/**\n\t * DataTables settings object - this holds all the information needed for a\n\t * given table, including configuration, data and current application of the\n\t * table options. DataTables does not have a single instance for each DataTable\n\t * with the settings attached to that instance, but rather instances of the\n\t * DataTable \"class\" are created on-the-fly as needed (typically by a\n\t * $().dataTable() call) and the settings object is then applied to that\n\t * instance.\n\t *\n\t * Note that this object is related to {@link DataTable.defaults} but this\n\t * one is the internal data store for DataTables's cache of columns. It should\n\t * NOT be manipulated outside of DataTables. Any configuration should be done\n\t * through the initialisation options.\n\t *  @namespace\n\t *  @todo Really should attach the settings object to individual instances so we\n\t *    don't need to create new instances on each $().dataTable() call (if the\n\t *    table already exists). It would also save passing oSettings around and\n\t *    into every single function. However, this is a very significant\n\t *    architecture change for DataTables and will almost certainly break\n\t *    backwards compatibility with older installations. This is something that\n\t *    will be done in 2.0.\n\t */\n\tDataTable.models.oSettings = {\n\t\t/**\n\t\t * Primary features of DataTables and their enablement state.\n\t\t *  @namespace\n\t\t */\n\t\t\"oFeatures\": {\n\t\n\t\t\t/**\n\t\t\t * Flag to say if DataTables should automatically try to calculate the\n\t\t\t * optimum table and columns widths (true) or not (false).\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bAutoWidth\": null,\n\t\n\t\t\t/**\n\t\t\t * Delay the creation of TR and TD elements until they are actually\n\t\t\t * needed by a driven page draw. This can give a significant speed\n\t\t\t * increase for Ajax source and Javascript source data, but makes no\n\t\t\t * difference at all fro DOM and server-side processing tables.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bDeferRender\": null,\n\t\n\t\t\t/**\n\t\t\t * Enable filtering on the table or not. Note that if this is disabled\n\t\t\t * then there is no filtering at all on the table, including fnFilter.\n\t\t\t * To just remove the filtering input use sDom and remove the 'f' option.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bFilter\": null,\n\t\n\t\t\t/**\n\t\t\t * Table information element (the 'Showing x of y records' div) enable\n\t\t\t * flag.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bInfo\": null,\n\t\n\t\t\t/**\n\t\t\t * Present a user control allowing the end user to change the page size\n\t\t\t * when pagination is enabled.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bLengthChange\": null,\n\t\n\t\t\t/**\n\t\t\t * Pagination enabled or not. Note that if this is disabled then length\n\t\t\t * changing must also be disabled.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bPaginate\": null,\n\t\n\t\t\t/**\n\t\t\t * Processing indicator enable flag whenever DataTables is enacting a\n\t\t\t * user request - typically an Ajax request for server-side processing.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bProcessing\": null,\n\t\n\t\t\t/**\n\t\t\t * Server-side processing enabled flag - when enabled DataTables will\n\t\t\t * get all data from the server for every draw - there is no filtering,\n\t\t\t * sorting or paging done on the client-side.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bServerSide\": null,\n\t\n\t\t\t/**\n\t\t\t * Sorting enablement flag.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bSort\": null,\n\t\n\t\t\t/**\n\t\t\t * Multi-column sorting\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bSortMulti\": null,\n\t\n\t\t\t/**\n\t\t\t * Apply a class to the columns which are being sorted to provide a\n\t\t\t * visual highlight or not. This can slow things down when enabled since\n\t\t\t * there is a lot of DOM interaction.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bSortClasses\": null,\n\t\n\t\t\t/**\n\t\t\t * State saving enablement flag.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bStateSave\": null\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Scrolling settings for a table.\n\t\t *  @namespace\n\t\t */\n\t\t\"oScroll\": {\n\t\t\t/**\n\t\t\t * When the table is shorter in height than sScrollY, collapse the\n\t\t\t * table container down to the height of the table (when true).\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bCollapse\": null,\n\t\n\t\t\t/**\n\t\t\t * Width of the scrollbar for the web-browser's platform. Calculated\n\t\t\t * during table initialisation.\n\t\t\t *  @type int\n\t\t\t *  @default 0\n\t\t\t */\n\t\t\t\"iBarWidth\": 0,\n\t\n\t\t\t/**\n\t\t\t * Viewport width for horizontal scrolling. Horizontal scrolling is\n\t\t\t * disabled if an empty string.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type string\n\t\t\t */\n\t\t\t\"sX\": null,\n\t\n\t\t\t/**\n\t\t\t * Width to expand the table to when using x-scrolling. Typically you\n\t\t\t * should not need to use this.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type string\n\t\t\t *  @deprecated\n\t\t\t */\n\t\t\t\"sXInner\": null,\n\t\n\t\t\t/**\n\t\t\t * Viewport height for vertical scrolling. Vertical scrolling is disabled\n\t\t\t * if an empty string.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type string\n\t\t\t */\n\t\t\t\"sY\": null\n\t\t},\n\t\n\t\t/**\n\t\t * Language information for the table.\n\t\t *  @namespace\n\t\t *  @extends DataTable.defaults.oLanguage\n\t\t */\n\t\t\"oLanguage\": {\n\t\t\t/**\n\t\t\t * Information callback function. See\n\t\t\t * {@link DataTable.defaults.fnInfoCallback}\n\t\t\t *  @type function\n\t\t\t *  @default null\n\t\t\t */\n\t\t\t\"fnInfoCallback\": null\n\t\t},\n\t\n\t\t/**\n\t\t * Browser support parameters\n\t\t *  @namespace\n\t\t */\n\t\t\"oBrowser\": {\n\t\t\t/**\n\t\t\t * Indicate if the browser incorrectly calculates width:100% inside a\n\t\t\t * scrolling element (IE6/7)\n\t\t\t *  @type boolean\n\t\t\t *  @default false\n\t\t\t */\n\t\t\t\"bScrollOversize\": false,\n\t\n\t\t\t/**\n\t\t\t * Determine if the vertical scrollbar is on the right or left of the\n\t\t\t * scrolling container - needed for rtl language layout, although not\n\t\t\t * all browsers move the scrollbar (Safari).\n\t\t\t *  @type boolean\n\t\t\t *  @default false\n\t\t\t */\n\t\t\t\"bScrollbarLeft\": false,\n\t\n\t\t\t/**\n\t\t\t * Flag for if `getBoundingClientRect` is fully supported or not\n\t\t\t *  @type boolean\n\t\t\t *  @default false\n\t\t\t */\n\t\t\t\"bBounding\": false,\n\t\n\t\t\t/**\n\t\t\t * Browser scrollbar width\n\t\t\t *  @type integer\n\t\t\t *  @default 0\n\t\t\t */\n\t\t\t\"barWidth\": 0\n\t\t},\n\t\n\t\n\t\t\"ajax\": null,\n\t\n\t\n\t\t/**\n\t\t * Array referencing the nodes which are used for the features. The\n\t\t * parameters of this object match what is allowed by sDom - i.e.\n\t\t *   <ul>\n\t\t *     <li>'l' - Length changing</li>\n\t\t *     <li>'f' - Filtering input</li>\n\t\t *     <li>'t' - The table!</li>\n\t\t *     <li>'i' - Information</li>\n\t\t *     <li>'p' - Pagination</li>\n\t\t *     <li>'r' - pRocessing</li>\n\t\t *   </ul>\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aanFeatures\": [],\n\t\n\t\t/**\n\t\t * Store data information - see {@link DataTable.models.oRow} for detailed\n\t\t * information.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoData\": [],\n\t\n\t\t/**\n\t\t * Array of indexes which are in the current display (after filtering etc)\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aiDisplay\": [],\n\t\n\t\t/**\n\t\t * Array of indexes for display - no filtering\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aiDisplayMaster\": [],\n\t\n\t\t/**\n\t\t * Map of row ids to data indexes\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\t\"aIds\": {},\n\t\n\t\t/**\n\t\t * Store information about each column that is in use\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoColumns\": [],\n\t\n\t\t/**\n\t\t * Store information about the table's header\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoHeader\": [],\n\t\n\t\t/**\n\t\t * Store information about the table's footer\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoFooter\": [],\n\t\n\t\t/**\n\t\t * Store the applied global search information in case we want to force a\n\t\t * research or compare the old search to a new one.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @namespace\n\t\t *  @extends DataTable.models.oSearch\n\t\t */\n\t\t\"oPreviousSearch\": {},\n\t\n\t\t/**\n\t\t * Store the applied search for each column - see\n\t\t * {@link DataTable.models.oSearch} for the format that is used for the\n\t\t * filtering information for each column.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoPreSearchCols\": [],\n\t\n\t\t/**\n\t\t * Sorting that is applied to the table. Note that the inner arrays are\n\t\t * used in the following manner:\n\t\t * <ul>\n\t\t *   <li>Index 0 - column number</li>\n\t\t *   <li>Index 1 - current sorting direction</li>\n\t\t * </ul>\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type array\n\t\t *  @todo These inner arrays should really be objects\n\t\t */\n\t\t\"aaSorting\": null,\n\t\n\t\t/**\n\t\t * Sorting that is always applied to the table (i.e. prefixed in front of\n\t\t * aaSorting).\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aaSortingFixed\": [],\n\t\n\t\t/**\n\t\t * Classes to use for the striping of a table.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"asStripeClasses\": null,\n\t\n\t\t/**\n\t\t * If restoring a table - we should restore its striping classes as well\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"asDestroyStripes\": [],\n\t\n\t\t/**\n\t\t * If restoring a table - we should restore its width\n\t\t *  @type int\n\t\t *  @default 0\n\t\t */\n\t\t\"sDestroyWidth\": 0,\n\t\n\t\t/**\n\t\t * Callback functions array for every time a row is inserted (i.e. on a draw).\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoRowCallback\": [],\n\t\n\t\t/**\n\t\t * Callback functions for the header on each draw.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoHeaderCallback\": [],\n\t\n\t\t/**\n\t\t * Callback function for the footer on each draw.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoFooterCallback\": [],\n\t\n\t\t/**\n\t\t * Array of callback functions for draw callback functions\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoDrawCallback\": [],\n\t\n\t\t/**\n\t\t * Array of callback functions for row created function\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoRowCreatedCallback\": [],\n\t\n\t\t/**\n\t\t * Callback functions for just before the table is redrawn. A return of\n\t\t * false will be used to cancel the draw.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoPreDrawCallback\": [],\n\t\n\t\t/**\n\t\t * Callback functions for when the table has been initialised.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoInitComplete\": [],\n\t\n\t\n\t\t/**\n\t\t * Callbacks for modifying the settings to be stored for state saving, prior to\n\t\t * saving state.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateSaveParams\": [],\n\t\n\t\t/**\n\t\t * Callbacks for modifying the settings that have been stored for state saving\n\t\t * prior to using the stored values to restore the state.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateLoadParams\": [],\n\t\n\t\t/**\n\t\t * Callbacks for operating on the settings object once the saved state has been\n\t\t * loaded\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateLoaded\": [],\n\t\n\t\t/**\n\t\t * Cache the table ID for quick access\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t */\n\t\t\"sTableId\": \"\",\n\t\n\t\t/**\n\t\t * The TABLE node for the main table\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTable\": null,\n\t\n\t\t/**\n\t\t * Permanent ref to the thead element\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTHead\": null,\n\t\n\t\t/**\n\t\t * Permanent ref to the tfoot element - if it exists\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTFoot\": null,\n\t\n\t\t/**\n\t\t * Permanent ref to the tbody element\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTBody\": null,\n\t\n\t\t/**\n\t\t * Cache the wrapper node (contains all DataTables controlled elements)\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTableWrapper\": null,\n\t\n\t\t/**\n\t\t * Indicate if when using server-side processing the loading of data\n\t\t * should be deferred until the second draw.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bDeferLoading\": false,\n\t\n\t\t/**\n\t\t * Indicate if all required information has been read in\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bInitialised\": false,\n\t\n\t\t/**\n\t\t * Information about open rows. Each object in the array has the parameters\n\t\t * 'nTr' and 'nParent'\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoOpenRows\": [],\n\t\n\t\t/**\n\t\t * Dictate the positioning of DataTables' control elements - see\n\t\t * {@link DataTable.model.oInit.sDom}.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sDom\": null,\n\t\n\t\t/**\n\t\t * Search delay (in mS)\n\t\t *  @type integer\n\t\t *  @default null\n\t\t */\n\t\t\"searchDelay\": null,\n\t\n\t\t/**\n\t\t * Which type of pagination should be used.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t *  @default two_button\n\t\t */\n\t\t\"sPaginationType\": \"two_button\",\n\t\n\t\t/**\n\t\t * The state duration (for `stateSave`) in seconds.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type int\n\t\t *  @default 0\n\t\t */\n\t\t\"iStateDuration\": 0,\n\t\n\t\t/**\n\t\t * Array of callback functions for state saving. Each array element is an\n\t\t * object with the following parameters:\n\t\t *   <ul>\n\t\t *     <li>function:fn - function to call. Takes two parameters, oSettings\n\t\t *       and the JSON string to save that has been thus far created. Returns\n\t\t *       a JSON string to be inserted into a json object\n\t\t *       (i.e. '\"param\": [ 0, 1, 2]')</li>\n\t\t *     <li>string:sName - name of callback</li>\n\t\t *   </ul>\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateSave\": [],\n\t\n\t\t/**\n\t\t * Array of callback functions for state loading. Each array element is an\n\t\t * object with the following parameters:\n\t\t *   <ul>\n\t\t *     <li>function:fn - function to call. Takes two parameters, oSettings\n\t\t *       and the object stored. May return false to cancel state loading</li>\n\t\t *     <li>string:sName - name of callback</li>\n\t\t *   </ul>\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateLoad\": [],\n\t\n\t\t/**\n\t\t * State that was saved. Useful for back reference\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"oSavedState\": null,\n\t\n\t\t/**\n\t\t * State that was loaded. Useful for back reference\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"oLoadedState\": null,\n\t\n\t\t/**\n\t\t * Source url for AJAX data for the table.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sAjaxSource\": null,\n\t\n\t\t/**\n\t\t * Property from a given object from which to read the table data from. This\n\t\t * can be an empty string (when not server-side processing), in which case\n\t\t * it is  assumed an an array is given directly.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t */\n\t\t\"sAjaxDataProp\": null,\n\t\n\t\t/**\n\t\t * Note if draw should be blocked while getting data\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t */\n\t\t\"bAjaxDataGet\": true,\n\t\n\t\t/**\n\t\t * The last jQuery XHR object that was used for server-side data gathering.\n\t\t * This can be used for working with the XHR information in one of the\n\t\t * callbacks\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"jqXHR\": null,\n\t\n\t\t/**\n\t\t * JSON returned from the server in the last Ajax request\n\t\t *  @type object\n\t\t *  @default undefined\n\t\t */\n\t\t\"json\": undefined,\n\t\n\t\t/**\n\t\t * Data submitted as part of the last Ajax request\n\t\t *  @type object\n\t\t *  @default undefined\n\t\t */\n\t\t\"oAjaxData\": undefined,\n\t\n\t\t/**\n\t\t * Function to get the server-side data.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type function\n\t\t */\n\t\t\"fnServerData\": null,\n\t\n\t\t/**\n\t\t * Functions which are called prior to sending an Ajax request so extra\n\t\t * parameters can easily be sent to the server\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoServerParams\": [],\n\t\n\t\t/**\n\t\t * Send the XHR HTTP method - GET or POST (could be PUT or DELETE if\n\t\t * required).\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t */\n\t\t\"sServerMethod\": null,\n\t\n\t\t/**\n\t\t * Format numbers for display.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type function\n\t\t */\n\t\t\"fnFormatNumber\": null,\n\t\n\t\t/**\n\t\t * List of options that can be used for the user selectable length menu.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aLengthMenu\": null,\n\t\n\t\t/**\n\t\t * Counter for the draws that the table does. Also used as a tracker for\n\t\t * server-side processing\n\t\t *  @type int\n\t\t *  @default 0\n\t\t */\n\t\t\"iDraw\": 0,\n\t\n\t\t/**\n\t\t * Indicate if a redraw is being done - useful for Ajax\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bDrawing\": false,\n\t\n\t\t/**\n\t\t * Draw index (iDraw) of the last error when parsing the returned data\n\t\t *  @type int\n\t\t *  @default -1\n\t\t */\n\t\t\"iDrawError\": -1,\n\t\n\t\t/**\n\t\t * Paging display length\n\t\t *  @type int\n\t\t *  @default 10\n\t\t */\n\t\t\"_iDisplayLength\": 10,\n\t\n\t\t/**\n\t\t * Paging start point - aiDisplay index\n\t\t *  @type int\n\t\t *  @default 0\n\t\t */\n\t\t\"_iDisplayStart\": 0,\n\t\n\t\t/**\n\t\t * Server-side processing - number of records in the result set\n\t\t * (i.e. before filtering), Use fnRecordsTotal rather than\n\t\t * this property to get the value of the number of records, regardless of\n\t\t * the server-side processing setting.\n\t\t *  @type int\n\t\t *  @default 0\n\t\t *  @private\n\t\t */\n\t\t\"_iRecordsTotal\": 0,\n\t\n\t\t/**\n\t\t * Server-side processing - number of records in the current display set\n\t\t * (i.e. after filtering). Use fnRecordsDisplay rather than\n\t\t * this property to get the value of the number of records, regardless of\n\t\t * the server-side processing setting.\n\t\t *  @type boolean\n\t\t *  @default 0\n\t\t *  @private\n\t\t */\n\t\t\"_iRecordsDisplay\": 0,\n\t\n\t\t/**\n\t\t * The classes to use for the table\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\t\"oClasses\": {},\n\t\n\t\t/**\n\t\t * Flag attached to the settings object so you can check in the draw\n\t\t * callback if filtering has been done in the draw. Deprecated in favour of\n\t\t * events.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *  @deprecated\n\t\t */\n\t\t\"bFiltered\": false,\n\t\n\t\t/**\n\t\t * Flag attached to the settings object so you can check in the draw\n\t\t * callback if sorting has been done in the draw. Deprecated in favour of\n\t\t * events.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *  @deprecated\n\t\t */\n\t\t\"bSorted\": false,\n\t\n\t\t/**\n\t\t * Indicate that if multiple rows are in the header and there is more than\n\t\t * one unique cell per column, if the top one (true) or bottom one (false)\n\t\t * should be used for sorting / title by DataTables.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bSortCellsTop\": null,\n\t\n\t\t/**\n\t\t * Initialisation object that is used for the table\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"oInit\": null,\n\t\n\t\t/**\n\t\t * Destroy callback functions - for plug-ins to attach themselves to the\n\t\t * destroy so they can clean up markup and events.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoDestroyCallback\": [],\n\t\n\t\n\t\t/**\n\t\t * Get the number of records in the current record set, before filtering\n\t\t *  @type function\n\t\t */\n\t\t\"fnRecordsTotal\": function ()\n\t\t{\n\t\t\treturn _fnDataSource( this ) == 'ssp' ?\n\t\t\t\tthis._iRecordsTotal * 1 :\n\t\t\t\tthis.aiDisplayMaster.length;\n\t\t},\n\t\n\t\t/**\n\t\t * Get the number of records in the current record set, after filtering\n\t\t *  @type function\n\t\t */\n\t\t\"fnRecordsDisplay\": function ()\n\t\t{\n\t\t\treturn _fnDataSource( this ) == 'ssp' ?\n\t\t\t\tthis._iRecordsDisplay * 1 :\n\t\t\t\tthis.aiDisplay.length;\n\t\t},\n\t\n\t\t/**\n\t\t * Get the display end point - aiDisplay index\n\t\t *  @type function\n\t\t */\n\t\t\"fnDisplayEnd\": function ()\n\t\t{\n\t\t\tvar\n\t\t\t\tlen      = this._iDisplayLength,\n\t\t\t\tstart    = this._iDisplayStart,\n\t\t\t\tcalc     = start + len,\n\t\t\t\trecords  = this.aiDisplay.length,\n\t\t\t\tfeatures = this.oFeatures,\n\t\t\t\tpaginate = features.bPaginate;\n\t\n\t\t\tif ( features.bServerSide ) {\n\t\t\t\treturn paginate === false || len === -1 ?\n\t\t\t\t\tstart + records :\n\t\t\t\t\tMath.min( start+len, this._iRecordsDisplay );\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn ! paginate || calc>records || len===-1 ?\n\t\t\t\t\trecords :\n\t\t\t\t\tcalc;\n\t\t\t}\n\t\t},\n\t\n\t\t/**\n\t\t * The DataTables object for this table\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"oInstance\": null,\n\t\n\t\t/**\n\t\t * Unique identifier for each instance of the DataTables object. If there\n\t\t * is an ID on the table node, then it takes that value, otherwise an\n\t\t * incrementing internal counter is used.\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sInstance\": null,\n\t\n\t\t/**\n\t\t * tabindex attribute value that is added to DataTables control elements, allowing\n\t\t * keyboard navigation of the table and its controls.\n\t\t */\n\t\t\"iTabIndex\": 0,\n\t\n\t\t/**\n\t\t * DIV container for the footer scrolling table if scrolling\n\t\t */\n\t\t\"nScrollHead\": null,\n\t\n\t\t/**\n\t\t * DIV container for the footer scrolling table if scrolling\n\t\t */\n\t\t\"nScrollFoot\": null,\n\t\n\t\t/**\n\t\t * Last applied sort\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aLastSort\": [],\n\t\n\t\t/**\n\t\t * Stored plug-in instances\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\t\"oPlugins\": {},\n\t\n\t\t/**\n\t\t * Function used to get a row's id from the row's data\n\t\t *  @type function\n\t\t *  @default null\n\t\t */\n\t\t\"rowIdFn\": null,\n\t\n\t\t/**\n\t\t * Data location where to store a row's id\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"rowId\": null\n\t};\n\n\t/**\n\t * Extension object for DataTables that is used to provide all extension\n\t * options.\n\t *\n\t * Note that the `DataTable.ext` object is available through\n\t * `jQuery.fn.dataTable.ext` where it may be accessed and manipulated. It is\n\t * also aliased to `jQuery.fn.dataTableExt` for historic reasons.\n\t *  @namespace\n\t *  @extends DataTable.models.ext\n\t */\n\t\n\t\n\t/**\n\t * DataTables extensions\n\t * \n\t * This namespace acts as a collection area for plug-ins that can be used to\n\t * extend DataTables capabilities. Indeed many of the build in methods\n\t * use this method to provide their own capabilities (sorting methods for\n\t * example).\n\t *\n\t * Note that this namespace is aliased to `jQuery.fn.dataTableExt` for legacy\n\t * reasons\n\t *\n\t *  @namespace\n\t */\n\tDataTable.ext = _ext = {\n\t\t/**\n\t\t * Buttons. For use with the Buttons extension for DataTables. This is\n\t\t * defined here so other extensions can define buttons regardless of load\n\t\t * order. It is _not_ used by DataTables core.\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\tbuttons: {},\n\t\n\t\n\t\t/**\n\t\t * Element class names\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\tclasses: {},\n\t\n\t\n\t\t/**\n\t\t * DataTables build type (expanded by the download builder)\n\t\t *\n\t\t *  @type string\n\t\t */\n\t\tbuild:\"dt/dt-1.10.18/af-2.3.2/r-2.2.2\",\n\t\n\t\n\t\t/**\n\t\t * Error reporting.\n\t\t * \n\t\t * How should DataTables report an error. Can take the value 'alert',\n\t\t * 'throw', 'none' or a function.\n\t\t *\n\t\t *  @type string|function\n\t\t *  @default alert\n\t\t */\n\t\terrMode: \"alert\",\n\t\n\t\n\t\t/**\n\t\t * Feature plug-ins.\n\t\t * \n\t\t * This is an array of objects which describe the feature plug-ins that are\n\t\t * available to DataTables. These feature plug-ins are then available for\n\t\t * use through the `dom` initialisation option.\n\t\t * \n\t\t * Each feature plug-in is described by an object which must have the\n\t\t * following properties:\n\t\t * \n\t\t * * `fnInit` - function that is used to initialise the plug-in,\n\t\t * * `cFeature` - a character so the feature can be enabled by the `dom`\n\t\t *   instillation option. This is case sensitive.\n\t\t *\n\t\t * The `fnInit` function has the following input parameters:\n\t\t *\n\t\t * 1. `{object}` DataTables settings object: see\n\t\t *    {@link DataTable.models.oSettings}\n\t\t *\n\t\t * And the following return is expected:\n\t\t * \n\t\t * * {node|null} The element which contains your feature. Note that the\n\t\t *   return may also be void if your plug-in does not require to inject any\n\t\t *   DOM elements into DataTables control (`dom`) - for example this might\n\t\t *   be useful when developing a plug-in which allows table control via\n\t\t *   keyboard entry\n\t\t *\n\t\t *  @type array\n\t\t *\n\t\t *  @example\n\t\t *    $.fn.dataTable.ext.features.push( {\n\t\t *      \"fnInit\": function( oSettings ) {\n\t\t *        return new TableTools( { \"oDTSettings\": oSettings } );\n\t\t *      },\n\t\t *      \"cFeature\": \"T\"\n\t\t *    } );\n\t\t */\n\t\tfeature: [],\n\t\n\t\n\t\t/**\n\t\t * Row searching.\n\t\t * \n\t\t * This method of searching is complimentary to the default type based\n\t\t * searching, and a lot more comprehensive as it allows you complete control\n\t\t * over the searching logic. Each element in this array is a function\n\t\t * (parameters described below) that is called for every row in the table,\n\t\t * and your logic decides if it should be included in the searching data set\n\t\t * or not.\n\t\t *\n\t\t * Searching functions have the following input parameters:\n\t\t *\n\t\t * 1. `{object}` DataTables settings object: see\n\t\t *    {@link DataTable.models.oSettings}\n\t\t * 2. `{array|object}` Data for the row to be processed (same as the\n\t\t *    original format that was passed in as the data source, or an array\n\t\t *    from a DOM data source\n\t\t * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which\n\t\t *    can be useful to retrieve the `TR` element if you need DOM interaction.\n\t\t *\n\t\t * And the following return is expected:\n\t\t *\n\t\t * * {boolean} Include the row in the searched result set (true) or not\n\t\t *   (false)\n\t\t *\n\t\t * Note that as with the main search ability in DataTables, technically this\n\t\t * is \"filtering\", since it is subtractive. However, for consistency in\n\t\t * naming we call it searching here.\n\t\t *\n\t\t *  @type array\n\t\t *  @default []\n\t\t *\n\t\t *  @example\n\t\t *    // The following example shows custom search being applied to the\n\t\t *    // fourth column (i.e. the data[3] index) based on two input values\n\t\t *    // from the end-user, matching the data in a certain range.\n\t\t *    $.fn.dataTable.ext.search.push(\n\t\t *      function( settings, data, dataIndex ) {\n\t\t *        var min = document.getElementById('min').value * 1;\n\t\t *        var max = document.getElementById('max').value * 1;\n\t\t *        var version = data[3] == \"-\" ? 0 : data[3]*1;\n\t\t *\n\t\t *        if ( min == \"\" && max == \"\" ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        else if ( min == \"\" && version < max ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        else if ( min < version && \"\" == max ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        else if ( min < version && version < max ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        return false;\n\t\t *      }\n\t\t *    );\n\t\t */\n\t\tsearch: [],\n\t\n\t\n\t\t/**\n\t\t * Selector extensions\n\t\t *\n\t\t * The `selector` option can be used to extend the options available for the\n\t\t * selector modifier options (`selector-modifier` object data type) that\n\t\t * each of the three built in selector types offer (row, column and cell +\n\t\t * their plural counterparts). For example the Select extension uses this\n\t\t * mechanism to provide an option to select only rows, columns and cells\n\t\t * that have been marked as selected by the end user (`{selected: true}`),\n\t\t * which can be used in conjunction with the existing built in selector\n\t\t * options.\n\t\t *\n\t\t * Each property is an array to which functions can be pushed. The functions\n\t\t * take three attributes:\n\t\t *\n\t\t * * Settings object for the host table\n\t\t * * Options object (`selector-modifier` object type)\n\t\t * * Array of selected item indexes\n\t\t *\n\t\t * The return is an array of the resulting item indexes after the custom\n\t\t * selector has been applied.\n\t\t *\n\t\t *  @type object\n\t\t */\n\t\tselector: {\n\t\t\tcell: [],\n\t\t\tcolumn: [],\n\t\t\trow: []\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Internal functions, exposed for used in plug-ins.\n\t\t * \n\t\t * Please note that you should not need to use the internal methods for\n\t\t * anything other than a plug-in (and even then, try to avoid if possible).\n\t\t * The internal function may change between releases.\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\tinternal: {},\n\t\n\t\n\t\t/**\n\t\t * Legacy configuration options. Enable and disable legacy options that\n\t\t * are available in DataTables.\n\t\t *\n\t\t *  @type object\n\t\t */\n\t\tlegacy: {\n\t\t\t/**\n\t\t\t * Enable / disable DataTables 1.9 compatible server-side processing\n\t\t\t * requests\n\t\t\t *\n\t\t\t *  @type boolean\n\t\t\t *  @default null\n\t\t\t */\n\t\t\tajax: null\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Pagination plug-in methods.\n\t\t * \n\t\t * Each entry in this object is a function and defines which buttons should\n\t\t * be shown by the pagination rendering method that is used for the table:\n\t\t * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the\n\t\t * buttons are displayed in the document, while the functions here tell it\n\t\t * what buttons to display. This is done by returning an array of button\n\t\t * descriptions (what each button will do).\n\t\t *\n\t\t * Pagination types (the four built in options and any additional plug-in\n\t\t * options defined here) can be used through the `paginationType`\n\t\t * initialisation parameter.\n\t\t *\n\t\t * The functions defined take two parameters:\n\t\t *\n\t\t * 1. `{int} page` The current page index\n\t\t * 2. `{int} pages` The number of pages in the table\n\t\t *\n\t\t * Each function is expected to return an array where each element of the\n\t\t * array can be one of:\n\t\t *\n\t\t * * `first` - Jump to first page when activated\n\t\t * * `last` - Jump to last page when activated\n\t\t * * `previous` - Show previous page when activated\n\t\t * * `next` - Show next page when activated\n\t\t * * `{int}` - Show page of the index given\n\t\t * * `{array}` - A nested array containing the above elements to add a\n\t\t *   containing 'DIV' element (might be useful for styling).\n\t\t *\n\t\t * Note that DataTables v1.9- used this object slightly differently whereby\n\t\t * an object with two functions would be defined for each plug-in. That\n\t\t * ability is still supported by DataTables 1.10+ to provide backwards\n\t\t * compatibility, but this option of use is now decremented and no longer\n\t\t * documented in DataTables 1.10+.\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t *\n\t\t *  @example\n\t\t *    // Show previous, next and current page buttons only\n\t\t *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {\n\t\t *      return [ 'previous', page, 'next' ];\n\t\t *    };\n\t\t */\n\t\tpager: {},\n\t\n\t\n\t\trenderer: {\n\t\t\tpageButton: {},\n\t\t\theader: {}\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Ordering plug-ins - custom data source\n\t\t * \n\t\t * The extension options for ordering of data available here is complimentary\n\t\t * to the default type based ordering that DataTables typically uses. It\n\t\t * allows much greater control over the the data that is being used to\n\t\t * order a column, but is necessarily therefore more complex.\n\t\t * \n\t\t * This type of ordering is useful if you want to do ordering based on data\n\t\t * live from the DOM (for example the contents of an 'input' element) rather\n\t\t * than just the static string that DataTables knows of.\n\t\t * \n\t\t * The way these plug-ins work is that you create an array of the values you\n\t\t * wish to be ordering for the column in question and then return that\n\t\t * array. The data in the array much be in the index order of the rows in\n\t\t * the table (not the currently ordering order!). Which order data gathering\n\t\t * function is run here depends on the `dt-init columns.orderDataType`\n\t\t * parameter that is used for the column (if any).\n\t\t *\n\t\t * The functions defined take two parameters:\n\t\t *\n\t\t * 1. `{object}` DataTables settings object: see\n\t\t *    {@link DataTable.models.oSettings}\n\t\t * 2. `{int}` Target column index\n\t\t *\n\t\t * Each function is expected to return an array:\n\t\t *\n\t\t * * `{array}` Data for the column to be ordering upon\n\t\t *\n\t\t *  @type array\n\t\t *\n\t\t *  @example\n\t\t *    // Ordering using `input` node values\n\t\t *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )\n\t\t *    {\n\t\t *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {\n\t\t *        return $('input', td).val();\n\t\t *      } );\n\t\t *    }\n\t\t */\n\t\torder: {},\n\t\n\t\n\t\t/**\n\t\t * Type based plug-ins.\n\t\t *\n\t\t * Each column in DataTables has a type assigned to it, either by automatic\n\t\t * detection or by direct assignment using the `type` option for the column.\n\t\t * The type of a column will effect how it is ordering and search (plug-ins\n\t\t * can also make use of the column type if required).\n\t\t *\n\t\t * @namespace\n\t\t */\n\t\ttype: {\n\t\t\t/**\n\t\t\t * Type detection functions.\n\t\t\t *\n\t\t\t * The functions defined in this object are used to automatically detect\n\t\t\t * a column's type, making initialisation of DataTables super easy, even\n\t\t\t * when complex data is in the table.\n\t\t\t *\n\t\t\t * The functions defined take two parameters:\n\t\t\t *\n\t\t     *  1. `{*}` Data from the column cell to be analysed\n\t\t     *  2. `{settings}` DataTables settings object. This can be used to\n\t\t     *     perform context specific type detection - for example detection\n\t\t     *     based on language settings such as using a comma for a decimal\n\t\t     *     place. Generally speaking the options from the settings will not\n\t\t     *     be required\n\t\t\t *\n\t\t\t * Each function is expected to return:\n\t\t\t *\n\t\t\t * * `{string|null}` Data type detected, or null if unknown (and thus\n\t\t\t *   pass it on to the other type detection functions.\n\t\t\t *\n\t\t\t *  @type array\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Currency type detection plug-in:\n\t\t\t *    $.fn.dataTable.ext.type.detect.push(\n\t\t\t *      function ( data, settings ) {\n\t\t\t *        // Check the numeric part\n\t\t\t *        if ( ! data.substring(1).match(/[0-9]/) ) {\n\t\t\t *          return null;\n\t\t\t *        }\n\t\t\t *\n\t\t\t *        // Check prefixed by currency\n\t\t\t *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {\n\t\t\t *          return 'currency';\n\t\t\t *        }\n\t\t\t *        return null;\n\t\t\t *      }\n\t\t\t *    );\n\t\t\t */\n\t\t\tdetect: [],\n\t\n\t\n\t\t\t/**\n\t\t\t * Type based search formatting.\n\t\t\t *\n\t\t\t * The type based searching functions can be used to pre-format the\n\t\t\t * data to be search on. For example, it can be used to strip HTML\n\t\t\t * tags or to de-format telephone numbers for numeric only searching.\n\t\t\t *\n\t\t\t * Note that is a search is not defined for a column of a given type,\n\t\t\t * no search formatting will be performed.\n\t\t\t * \n\t\t\t * Pre-processing of searching data plug-ins - When you assign the sType\n\t\t\t * for a column (or have it automatically detected for you by DataTables\n\t\t\t * or a type detection plug-in), you will typically be using this for\n\t\t\t * custom sorting, but it can also be used to provide custom searching\n\t\t\t * by allowing you to pre-processing the data and returning the data in\n\t\t\t * the format that should be searched upon. This is done by adding\n\t\t\t * functions this object with a parameter name which matches the sType\n\t\t\t * for that target column. This is the corollary of <i>afnSortData</i>\n\t\t\t * for searching data.\n\t\t\t *\n\t\t\t * The functions defined take a single parameter:\n\t\t\t *\n\t\t     *  1. `{*}` Data from the column cell to be prepared for searching\n\t\t\t *\n\t\t\t * Each function is expected to return:\n\t\t\t *\n\t\t\t * * `{string|null}` Formatted string that will be used for the searching.\n\t\t\t *\n\t\t\t *  @type object\n\t\t\t *  @default {}\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {\n\t\t\t *      return d.replace(/\\n/g,\" \").replace( /<.*?>/g, \"\" );\n\t\t\t *    }\n\t\t\t */\n\t\t\tsearch: {},\n\t\n\t\n\t\t\t/**\n\t\t\t * Type based ordering.\n\t\t\t *\n\t\t\t * The column type tells DataTables what ordering to apply to the table\n\t\t\t * when a column is sorted upon. The order for each type that is defined,\n\t\t\t * is defined by the functions available in this object.\n\t\t\t *\n\t\t\t * Each ordering option can be described by three properties added to\n\t\t\t * this object:\n\t\t\t *\n\t\t\t * * `{type}-pre` - Pre-formatting function\n\t\t\t * * `{type}-asc` - Ascending order function\n\t\t\t * * `{type}-desc` - Descending order function\n\t\t\t *\n\t\t\t * All three can be used together, only `{type}-pre` or only\n\t\t\t * `{type}-asc` and `{type}-desc` together. It is generally recommended\n\t\t\t * that only `{type}-pre` is used, as this provides the optimal\n\t\t\t * implementation in terms of speed, although the others are provided\n\t\t\t * for compatibility with existing Javascript sort functions.\n\t\t\t *\n\t\t\t * `{type}-pre`: Functions defined take a single parameter:\n\t\t\t *\n\t\t     *  1. `{*}` Data from the column cell to be prepared for ordering\n\t\t\t *\n\t\t\t * And return:\n\t\t\t *\n\t\t\t * * `{*}` Data to be sorted upon\n\t\t\t *\n\t\t\t * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort\n\t\t\t * functions, taking two parameters:\n\t\t\t *\n\t\t     *  1. `{*}` Data to compare to the second parameter\n\t\t     *  2. `{*}` Data to compare to the first parameter\n\t\t\t *\n\t\t\t * And returning:\n\t\t\t *\n\t\t\t * * `{*}` Ordering match: <0 if first parameter should be sorted lower\n\t\t\t *   than the second parameter, ===0 if the two parameters are equal and\n\t\t\t *   >0 if the first parameter should be sorted height than the second\n\t\t\t *   parameter.\n\t\t\t * \n\t\t\t *  @type object\n\t\t\t *  @default {}\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Numeric ordering of formatted numbers with a pre-formatter\n\t\t\t *    $.extend( $.fn.dataTable.ext.type.order, {\n\t\t\t *      \"string-pre\": function(x) {\n\t\t\t *        a = (a === \"-\" || a === \"\") ? 0 : a.replace( /[^\\d\\-\\.]/g, \"\" );\n\t\t\t *        return parseFloat( a );\n\t\t\t *      }\n\t\t\t *    } );\n\t\t\t *\n\t\t\t *  @example\n\t\t\t *    // Case-sensitive string ordering, with no pre-formatting method\n\t\t\t *    $.extend( $.fn.dataTable.ext.order, {\n\t\t\t *      \"string-case-asc\": function(x,y) {\n\t\t\t *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n\t\t\t *      },\n\t\t\t *      \"string-case-desc\": function(x,y) {\n\t\t\t *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n\t\t\t *      }\n\t\t\t *    } );\n\t\t\t */\n\t\t\torder: {}\n\t\t},\n\t\n\t\t/**\n\t\t * Unique DataTables instance counter\n\t\t *\n\t\t * @type int\n\t\t * @private\n\t\t */\n\t\t_unique: 0,\n\t\n\t\n\t\t//\n\t\t// Depreciated\n\t\t// The following properties are retained for backwards compatiblity only.\n\t\t// The should not be used in new projects and will be removed in a future\n\t\t// version\n\t\t//\n\t\n\t\t/**\n\t\t * Version check function.\n\t\t *  @type function\n\t\t *  @depreciated Since 1.10\n\t\t */\n\t\tfnVersionCheck: DataTable.fnVersionCheck,\n\t\n\t\n\t\t/**\n\t\t * Index for what 'this' index API functions should use\n\t\t *  @type int\n\t\t *  @deprecated Since v1.10\n\t\t */\n\t\tiApiIndex: 0,\n\t\n\t\n\t\t/**\n\t\t * jQuery UI class container\n\t\t *  @type object\n\t\t *  @deprecated Since v1.10\n\t\t */\n\t\toJUIClasses: {},\n\t\n\t\n\t\t/**\n\t\t * Software version\n\t\t *  @type string\n\t\t *  @deprecated Since v1.10\n\t\t */\n\t\tsVersion: DataTable.version\n\t};\n\t\n\t\n\t//\n\t// Backwards compatibility. Alias to pre 1.10 Hungarian notation counter parts\n\t//\n\t$.extend( _ext, {\n\t\tafnFiltering: _ext.search,\n\t\taTypes:       _ext.type.detect,\n\t\tofnSearch:    _ext.type.search,\n\t\toSort:        _ext.type.order,\n\t\tafnSortData:  _ext.order,\n\t\taoFeatures:   _ext.feature,\n\t\toApi:         _ext.internal,\n\t\toStdClasses:  _ext.classes,\n\t\toPagination:  _ext.pager\n\t} );\n\t\n\t\n\t$.extend( DataTable.ext.classes, {\n\t\t\"sTable\": \"dataTable\",\n\t\t\"sNoFooter\": \"no-footer\",\n\t\n\t\t/* Paging buttons */\n\t\t\"sPageButton\": \"paginate_button\",\n\t\t\"sPageButtonActive\": \"current\",\n\t\t\"sPageButtonDisabled\": \"disabled\",\n\t\n\t\t/* Striping classes */\n\t\t\"sStripeOdd\": \"odd\",\n\t\t\"sStripeEven\": \"even\",\n\t\n\t\t/* Empty row */\n\t\t\"sRowEmpty\": \"dataTables_empty\",\n\t\n\t\t/* Features */\n\t\t\"sWrapper\": \"dataTables_wrapper\",\n\t\t\"sFilter\": \"dataTables_filter\",\n\t\t\"sInfo\": \"dataTables_info\",\n\t\t\"sPaging\": \"dataTables_paginate paging_\", /* Note that the type is postfixed */\n\t\t\"sLength\": \"dataTables_length\",\n\t\t\"sProcessing\": \"dataTables_processing\",\n\t\n\t\t/* Sorting */\n\t\t\"sSortAsc\": \"sorting_asc\",\n\t\t\"sSortDesc\": \"sorting_desc\",\n\t\t\"sSortable\": \"sorting\", /* Sortable in both directions */\n\t\t\"sSortableAsc\": \"sorting_asc_disabled\",\n\t\t\"sSortableDesc\": \"sorting_desc_disabled\",\n\t\t\"sSortableNone\": \"sorting_disabled\",\n\t\t\"sSortColumn\": \"sorting_\", /* Note that an int is postfixed for the sorting order */\n\t\n\t\t/* Filtering */\n\t\t\"sFilterInput\": \"\",\n\t\n\t\t/* Page length */\n\t\t\"sLengthSelect\": \"\",\n\t\n\t\t/* Scrolling */\n\t\t\"sScrollWrapper\": \"dataTables_scroll\",\n\t\t\"sScrollHead\": \"dataTables_scrollHead\",\n\t\t\"sScrollHeadInner\": \"dataTables_scrollHeadInner\",\n\t\t\"sScrollBody\": \"dataTables_scrollBody\",\n\t\t\"sScrollFoot\": \"dataTables_scrollFoot\",\n\t\t\"sScrollFootInner\": \"dataTables_scrollFootInner\",\n\t\n\t\t/* Misc */\n\t\t\"sHeaderTH\": \"\",\n\t\t\"sFooterTH\": \"\",\n\t\n\t\t// Deprecated\n\t\t\"sSortJUIAsc\": \"\",\n\t\t\"sSortJUIDesc\": \"\",\n\t\t\"sSortJUI\": \"\",\n\t\t\"sSortJUIAscAllowed\": \"\",\n\t\t\"sSortJUIDescAllowed\": \"\",\n\t\t\"sSortJUIWrapper\": \"\",\n\t\t\"sSortIcon\": \"\",\n\t\t\"sJUIHeader\": \"\",\n\t\t\"sJUIFooter\": \"\"\n\t} );\n\t\n\t\n\tvar extPagination = DataTable.ext.pager;\n\t\n\tfunction _numbers ( page, pages ) {\n\t\tvar\n\t\t\tnumbers = [],\n\t\t\tbuttons = extPagination.numbers_length,\n\t\t\thalf = Math.floor( buttons / 2 ),\n\t\t\ti = 1;\n\t\n\t\tif ( pages <= buttons ) {\n\t\t\tnumbers = _range( 0, pages );\n\t\t}\n\t\telse if ( page <= half ) {\n\t\t\tnumbers = _range( 0, buttons-2 );\n\t\t\tnumbers.push( 'ellipsis' );\n\t\t\tnumbers.push( pages-1 );\n\t\t}\n\t\telse if ( page >= pages - 1 - half ) {\n\t\t\tnumbers = _range( pages-(buttons-2), pages );\n\t\t\tnumbers.splice( 0, 0, 'ellipsis' ); // no unshift in ie6\n\t\t\tnumbers.splice( 0, 0, 0 );\n\t\t}\n\t\telse {\n\t\t\tnumbers = _range( page-half+2, page+half-1 );\n\t\t\tnumbers.push( 'ellipsis' );\n\t\t\tnumbers.push( pages-1 );\n\t\t\tnumbers.splice( 0, 0, 'ellipsis' );\n\t\t\tnumbers.splice( 0, 0, 0 );\n\t\t}\n\t\n\t\tnumbers.DT_el = 'span';\n\t\treturn numbers;\n\t}\n\t\n\t\n\t$.extend( extPagination, {\n\t\tsimple: function ( page, pages ) {\n\t\t\treturn [ 'previous', 'next' ];\n\t\t},\n\t\n\t\tfull: function ( page, pages ) {\n\t\t\treturn [  'first', 'previous', 'next', 'last' ];\n\t\t},\n\t\n\t\tnumbers: function ( page, pages ) {\n\t\t\treturn [ _numbers(page, pages) ];\n\t\t},\n\t\n\t\tsimple_numbers: function ( page, pages ) {\n\t\t\treturn [ 'previous', _numbers(page, pages), 'next' ];\n\t\t},\n\t\n\t\tfull_numbers: function ( page, pages ) {\n\t\t\treturn [ 'first', 'previous', _numbers(page, pages), 'next', 'last' ];\n\t\t},\n\t\t\n\t\tfirst_last_numbers: function (page, pages) {\n\t \t\treturn ['first', _numbers(page, pages), 'last'];\n\t \t},\n\t\n\t\t// For testing and plug-ins to use\n\t\t_numbers: _numbers,\n\t\n\t\t// Number of number buttons (including ellipsis) to show. _Must be odd!_\n\t\tnumbers_length: 7\n\t} );\n\t\n\t\n\t$.extend( true, DataTable.ext.renderer, {\n\t\tpageButton: {\n\t\t\t_: function ( settings, host, idx, buttons, page, pages ) {\n\t\t\t\tvar classes = settings.oClasses;\n\t\t\t\tvar lang = settings.oLanguage.oPaginate;\n\t\t\t\tvar aria = settings.oLanguage.oAria.paginate || {};\n\t\t\t\tvar btnDisplay, btnClass, counter=0;\n\t\n\t\t\t\tvar attach = function( container, buttons ) {\n\t\t\t\t\tvar i, ien, node, button;\n\t\t\t\t\tvar clickHandler = function ( e ) {\n\t\t\t\t\t\t_fnPageChange( settings, e.data.action, true );\n\t\t\t\t\t};\n\t\n\t\t\t\t\tfor ( i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\t\t\t\tbutton = buttons[i];\n\t\n\t\t\t\t\t\tif ( $.isArray( button ) ) {\n\t\t\t\t\t\t\tvar inner = $( '<'+(button.DT_el || 'div')+'/>' )\n\t\t\t\t\t\t\t\t.appendTo( container );\n\t\t\t\t\t\t\tattach( inner, button );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbtnDisplay = null;\n\t\t\t\t\t\t\tbtnClass = '';\n\t\n\t\t\t\t\t\t\tswitch ( button ) {\n\t\t\t\t\t\t\t\tcase 'ellipsis':\n\t\t\t\t\t\t\t\t\tcontainer.append('<span class=\"ellipsis\">&#x2026;</span>');\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\tcase 'first':\n\t\t\t\t\t\t\t\t\tbtnDisplay = lang.sFirst;\n\t\t\t\t\t\t\t\t\tbtnClass = button + (page > 0 ?\n\t\t\t\t\t\t\t\t\t\t'' : ' '+classes.sPageButtonDisabled);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\tcase 'previous':\n\t\t\t\t\t\t\t\t\tbtnDisplay = lang.sPrevious;\n\t\t\t\t\t\t\t\t\tbtnClass = button + (page > 0 ?\n\t\t\t\t\t\t\t\t\t\t'' : ' '+classes.sPageButtonDisabled);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\tcase 'next':\n\t\t\t\t\t\t\t\t\tbtnDisplay = lang.sNext;\n\t\t\t\t\t\t\t\t\tbtnClass = button + (page < pages-1 ?\n\t\t\t\t\t\t\t\t\t\t'' : ' '+classes.sPageButtonDisabled);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\tcase 'last':\n\t\t\t\t\t\t\t\t\tbtnDisplay = lang.sLast;\n\t\t\t\t\t\t\t\t\tbtnClass = button + (page < pages-1 ?\n\t\t\t\t\t\t\t\t\t\t'' : ' '+classes.sPageButtonDisabled);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tbtnDisplay = button + 1;\n\t\t\t\t\t\t\t\t\tbtnClass = page === button ?\n\t\t\t\t\t\t\t\t\t\tclasses.sPageButtonActive : '';\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tif ( btnDisplay !== null ) {\n\t\t\t\t\t\t\t\tnode = $('<a>', {\n\t\t\t\t\t\t\t\t\t\t'class': classes.sPageButton+' '+btnClass,\n\t\t\t\t\t\t\t\t\t\t'aria-controls': settings.sTableId,\n\t\t\t\t\t\t\t\t\t\t'aria-label': aria[ button ],\n\t\t\t\t\t\t\t\t\t\t'data-dt-idx': counter,\n\t\t\t\t\t\t\t\t\t\t'tabindex': settings.iTabIndex,\n\t\t\t\t\t\t\t\t\t\t'id': idx === 0 && typeof button === 'string' ?\n\t\t\t\t\t\t\t\t\t\t\tsettings.sTableId +'_'+ button :\n\t\t\t\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t\t.html( btnDisplay )\n\t\t\t\t\t\t\t\t\t.appendTo( container );\n\t\n\t\t\t\t\t\t\t\t_fnBindAction(\n\t\t\t\t\t\t\t\t\tnode, {action: button}, clickHandler\n\t\t\t\t\t\t\t\t);\n\t\n\t\t\t\t\t\t\t\tcounter++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\n\t\t\t\t// IE9 throws an 'unknown error' if document.activeElement is used\n\t\t\t\t// inside an iframe or frame. Try / catch the error. Not good for\n\t\t\t\t// accessibility, but neither are frames.\n\t\t\t\tvar activeEl;\n\t\n\t\t\t\ttry {\n\t\t\t\t\t// Because this approach is destroying and recreating the paging\n\t\t\t\t\t// elements, focus is lost on the select button which is bad for\n\t\t\t\t\t// accessibility. So we want to restore focus once the draw has\n\t\t\t\t\t// completed\n\t\t\t\t\tactiveEl = $(host).find(document.activeElement).data('dt-idx');\n\t\t\t\t}\n\t\t\t\tcatch (e) {}\n\t\n\t\t\t\tattach( $(host).empty(), buttons );\n\t\n\t\t\t\tif ( activeEl !== undefined ) {\n\t\t\t\t\t$(host).find( '[data-dt-idx='+activeEl+']' ).focus();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} );\n\t\n\t\n\t\n\t// Built in type detection. See model.ext.aTypes for information about\n\t// what is required from this methods.\n\t$.extend( DataTable.ext.type.detect, [\n\t\t// Plain numbers - first since V8 detects some plain numbers as dates\n\t\t// e.g. Date.parse('55') (but not all, e.g. Date.parse('22')...).\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _isNumber( d, decimal ) ? 'num'+decimal : null;\n\t\t},\n\t\n\t\t// Dates (only those recognised by the browser's Date.parse)\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\t// V8 tries _very_ hard to make a string passed into `Date.parse()`\n\t\t\t// valid, so we need to use a regex to restrict date formats. Use a\n\t\t\t// plug-in for anything other than ISO8601 style strings\n\t\t\tif ( d && !(d instanceof Date) && ! _re_date.test(d) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar parsed = Date.parse(d);\n\t\t\treturn (parsed !== null && !isNaN(parsed)) || _empty(d) ? 'date' : null;\n\t\t},\n\t\n\t\t// Formatted numbers\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _isNumber( d, decimal, true ) ? 'num-fmt'+decimal : null;\n\t\t},\n\t\n\t\t// HTML numeric\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _htmlNumeric( d, decimal ) ? 'html-num'+decimal : null;\n\t\t},\n\t\n\t\t// HTML numeric, formatted\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _htmlNumeric( d, decimal, true ) ? 'html-num-fmt'+decimal : null;\n\t\t},\n\t\n\t\t// HTML (this is strict checking - there must be html)\n\t\tfunction ( d, settings )\n\t\t{\n\t\t\treturn _empty( d ) || (typeof d === 'string' && d.indexOf('<') !== -1) ?\n\t\t\t\t'html' : null;\n\t\t}\n\t] );\n\t\n\t\n\t\n\t// Filter formatting functions. See model.ext.ofnSearch for information about\n\t// what is required from these methods.\n\t// \n\t// Note that additional search methods are added for the html numbers and\n\t// html formatted numbers by `_addNumericSort()` when we know what the decimal\n\t// place is\n\t\n\t\n\t$.extend( DataTable.ext.type.search, {\n\t\thtml: function ( data ) {\n\t\t\treturn _empty(data) ?\n\t\t\t\tdata :\n\t\t\t\ttypeof data === 'string' ?\n\t\t\t\t\tdata\n\t\t\t\t\t\t.replace( _re_new_lines, \" \" )\n\t\t\t\t\t\t.replace( _re_html, \"\" ) :\n\t\t\t\t\t'';\n\t\t},\n\t\n\t\tstring: function ( data ) {\n\t\t\treturn _empty(data) ?\n\t\t\t\tdata :\n\t\t\t\ttypeof data === 'string' ?\n\t\t\t\t\tdata.replace( _re_new_lines, \" \" ) :\n\t\t\t\t\tdata;\n\t\t}\n\t} );\n\t\n\t\n\t\n\tvar __numericReplace = function ( d, decimalPlace, re1, re2 ) {\n\t\tif ( d !== 0 && (!d || d === '-') ) {\n\t\t\treturn -Infinity;\n\t\t}\n\t\n\t\t// If a decimal place other than `.` is used, it needs to be given to the\n\t\t// function so we can detect it and replace with a `.` which is the only\n\t\t// decimal place Javascript recognises - it is not locale aware.\n\t\tif ( decimalPlace ) {\n\t\t\td = _numToDecimal( d, decimalPlace );\n\t\t}\n\t\n\t\tif ( d.replace ) {\n\t\t\tif ( re1 ) {\n\t\t\t\td = d.replace( re1, '' );\n\t\t\t}\n\t\n\t\t\tif ( re2 ) {\n\t\t\t\td = d.replace( re2, '' );\n\t\t\t}\n\t\t}\n\t\n\t\treturn d * 1;\n\t};\n\t\n\t\n\t// Add the numeric 'deformatting' functions for sorting and search. This is done\n\t// in a function to provide an easy ability for the language options to add\n\t// additional methods if a non-period decimal place is used.\n\tfunction _addNumericSort ( decimalPlace ) {\n\t\t$.each(\n\t\t\t{\n\t\t\t\t// Plain numbers\n\t\t\t\t\"num\": function ( d ) {\n\t\t\t\t\treturn __numericReplace( d, decimalPlace );\n\t\t\t\t},\n\t\n\t\t\t\t// Formatted numbers\n\t\t\t\t\"num-fmt\": function ( d ) {\n\t\t\t\t\treturn __numericReplace( d, decimalPlace, _re_formatted_numeric );\n\t\t\t\t},\n\t\n\t\t\t\t// HTML numeric\n\t\t\t\t\"html-num\": function ( d ) {\n\t\t\t\t\treturn __numericReplace( d, decimalPlace, _re_html );\n\t\t\t\t},\n\t\n\t\t\t\t// HTML numeric, formatted\n\t\t\t\t\"html-num-fmt\": function ( d ) {\n\t\t\t\t\treturn __numericReplace( d, decimalPlace, _re_html, _re_formatted_numeric );\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction ( key, fn ) {\n\t\t\t\t// Add the ordering method\n\t\t\t\t_ext.type.order[ key+decimalPlace+'-pre' ] = fn;\n\t\n\t\t\t\t// For HTML types add a search formatter that will strip the HTML\n\t\t\t\tif ( key.match(/^html\\-/) ) {\n\t\t\t\t\t_ext.type.search[ key+decimalPlace ] = _ext.type.search.html;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\t\n\t\n\t// Default sort methods\n\t$.extend( _ext.type.order, {\n\t\t// Dates\n\t\t\"date-pre\": function ( d ) {\n\t\t\tvar ts = Date.parse( d );\n\t\t\treturn isNaN(ts) ? -Infinity : ts;\n\t\t},\n\t\n\t\t// html\n\t\t\"html-pre\": function ( a ) {\n\t\t\treturn _empty(a) ?\n\t\t\t\t'' :\n\t\t\t\ta.replace ?\n\t\t\t\t\ta.replace( /<.*?>/g, \"\" ).toLowerCase() :\n\t\t\t\t\ta+'';\n\t\t},\n\t\n\t\t// string\n\t\t\"string-pre\": function ( a ) {\n\t\t\t// This is a little complex, but faster than always calling toString,\n\t\t\t// http://jsperf.com/tostring-v-check\n\t\t\treturn _empty(a) ?\n\t\t\t\t'' :\n\t\t\t\ttypeof a === 'string' ?\n\t\t\t\t\ta.toLowerCase() :\n\t\t\t\t\t! a.toString ?\n\t\t\t\t\t\t'' :\n\t\t\t\t\t\ta.toString();\n\t\t},\n\t\n\t\t// string-asc and -desc are retained only for compatibility with the old\n\t\t// sort methods\n\t\t\"string-asc\": function ( x, y ) {\n\t\t\treturn ((x < y) ? -1 : ((x > y) ? 1 : 0));\n\t\t},\n\t\n\t\t\"string-desc\": function ( x, y ) {\n\t\t\treturn ((x < y) ? 1 : ((x > y) ? -1 : 0));\n\t\t}\n\t} );\n\t\n\t\n\t// Numeric sorting types - order doesn't matter here\n\t_addNumericSort( '' );\n\t\n\t\n\t$.extend( true, DataTable.ext.renderer, {\n\t\theader: {\n\t\t\t_: function ( settings, cell, column, classes ) {\n\t\t\t\t// No additional mark-up required\n\t\t\t\t// Attach a sort listener to update on sort - note that using the\n\t\t\t\t// `DT` namespace will allow the event to be removed automatically\n\t\t\t\t// on destroy, while the `dt` namespaced event is the one we are\n\t\t\t\t// listening for\n\t\t\t\t$(settings.nTable).on( 'order.dt.DT', function ( e, ctx, sorting, columns ) {\n\t\t\t\t\tif ( settings !== ctx ) { // need to check this this is the host\n\t\t\t\t\t\treturn;               // table, not a nested one\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar colIdx = column.idx;\n\t\n\t\t\t\t\tcell\n\t\t\t\t\t\t.removeClass(\n\t\t\t\t\t\t\tcolumn.sSortingClass +' '+\n\t\t\t\t\t\t\tclasses.sSortAsc +' '+\n\t\t\t\t\t\t\tclasses.sSortDesc\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.addClass( columns[ colIdx ] == 'asc' ?\n\t\t\t\t\t\t\tclasses.sSortAsc : columns[ colIdx ] == 'desc' ?\n\t\t\t\t\t\t\t\tclasses.sSortDesc :\n\t\t\t\t\t\t\t\tcolumn.sSortingClass\n\t\t\t\t\t\t);\n\t\t\t\t} );\n\t\t\t},\n\t\n\t\t\tjqueryui: function ( settings, cell, column, classes ) {\n\t\t\t\t$('<div/>')\n\t\t\t\t\t.addClass( classes.sSortJUIWrapper )\n\t\t\t\t\t.append( cell.contents() )\n\t\t\t\t\t.append( $('<span/>')\n\t\t\t\t\t\t.addClass( classes.sSortIcon+' '+column.sSortingClassJUI )\n\t\t\t\t\t)\n\t\t\t\t\t.appendTo( cell );\n\t\n\t\t\t\t// Attach a sort listener to update on sort\n\t\t\t\t$(settings.nTable).on( 'order.dt.DT', function ( e, ctx, sorting, columns ) {\n\t\t\t\t\tif ( settings !== ctx ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar colIdx = column.idx;\n\t\n\t\t\t\t\tcell\n\t\t\t\t\t\t.removeClass( classes.sSortAsc +\" \"+classes.sSortDesc )\n\t\t\t\t\t\t.addClass( columns[ colIdx ] == 'asc' ?\n\t\t\t\t\t\t\tclasses.sSortAsc : columns[ colIdx ] == 'desc' ?\n\t\t\t\t\t\t\t\tclasses.sSortDesc :\n\t\t\t\t\t\t\t\tcolumn.sSortingClass\n\t\t\t\t\t\t);\n\t\n\t\t\t\t\tcell\n\t\t\t\t\t\t.find( 'span.'+classes.sSortIcon )\n\t\t\t\t\t\t.removeClass(\n\t\t\t\t\t\t\tclasses.sSortJUIAsc +\" \"+\n\t\t\t\t\t\t\tclasses.sSortJUIDesc +\" \"+\n\t\t\t\t\t\t\tclasses.sSortJUI +\" \"+\n\t\t\t\t\t\t\tclasses.sSortJUIAscAllowed +\" \"+\n\t\t\t\t\t\t\tclasses.sSortJUIDescAllowed\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.addClass( columns[ colIdx ] == 'asc' ?\n\t\t\t\t\t\t\tclasses.sSortJUIAsc : columns[ colIdx ] == 'desc' ?\n\t\t\t\t\t\t\t\tclasses.sSortJUIDesc :\n\t\t\t\t\t\t\t\tcolumn.sSortingClassJUI\n\t\t\t\t\t\t);\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t} );\n\t\n\t/*\n\t * Public helper functions. These aren't used internally by DataTables, or\n\t * called by any of the options passed into DataTables, but they can be used\n\t * externally by developers working with DataTables. They are helper functions\n\t * to make working with DataTables a little bit easier.\n\t */\n\t\n\tvar __htmlEscapeEntities = function ( d ) {\n\t\treturn typeof d === 'string' ?\n\t\t\td.replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;') :\n\t\t\td;\n\t};\n\t\n\t/**\n\t * Helpers for `columns.render`.\n\t *\n\t * The options defined here can be used with the `columns.render` initialisation\n\t * option to provide a display renderer. The following functions are defined:\n\t *\n\t * * `number` - Will format numeric data (defined by `columns.data`) for\n\t *   display, retaining the original unformatted data for sorting and filtering.\n\t *   It takes 5 parameters:\n\t *   * `string` - Thousands grouping separator\n\t *   * `string` - Decimal point indicator\n\t *   * `integer` - Number of decimal points to show\n\t *   * `string` (optional) - Prefix.\n\t *   * `string` (optional) - Postfix (/suffix).\n\t * * `text` - Escape HTML to help prevent XSS attacks. It has no optional\n\t *   parameters.\n\t *\n\t * @example\n\t *   // Column definition using the number renderer\n\t *   {\n\t *     data: \"salary\",\n\t *     render: $.fn.dataTable.render.number( '\\'', '.', 0, '$' )\n\t *   }\n\t *\n\t * @namespace\n\t */\n\tDataTable.render = {\n\t\tnumber: function ( thousands, decimal, precision, prefix, postfix ) {\n\t\t\treturn {\n\t\t\t\tdisplay: function ( d ) {\n\t\t\t\t\tif ( typeof d !== 'number' && typeof d !== 'string' ) {\n\t\t\t\t\t\treturn d;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar negative = d < 0 ? '-' : '';\n\t\t\t\t\tvar flo = parseFloat( d );\n\t\n\t\t\t\t\t// If NaN then there isn't much formatting that we can do - just\n\t\t\t\t\t// return immediately, escaping any HTML (this was supposed to\n\t\t\t\t\t// be a number after all)\n\t\t\t\t\tif ( isNaN( flo ) ) {\n\t\t\t\t\t\treturn __htmlEscapeEntities( d );\n\t\t\t\t\t}\n\t\n\t\t\t\t\tflo = flo.toFixed( precision );\n\t\t\t\t\td = Math.abs( flo );\n\t\n\t\t\t\t\tvar intPart = parseInt( d, 10 );\n\t\t\t\t\tvar floatPart = precision ?\n\t\t\t\t\t\tdecimal+(d - intPart).toFixed( precision ).substring( 2 ):\n\t\t\t\t\t\t'';\n\t\n\t\t\t\t\treturn negative + (prefix||'') +\n\t\t\t\t\t\tintPart.toString().replace(\n\t\t\t\t\t\t\t/\\B(?=(\\d{3})+(?!\\d))/g, thousands\n\t\t\t\t\t\t) +\n\t\t\t\t\t\tfloatPart +\n\t\t\t\t\t\t(postfix||'');\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\n\t\ttext: function () {\n\t\t\treturn {\n\t\t\t\tdisplay: __htmlEscapeEntities\n\t\t\t};\n\t\t}\n\t};\n\t\n\t\n\t/*\n\t * This is really a good bit rubbish this method of exposing the internal methods\n\t * publicly... - To be fixed in 2.0 using methods on the prototype\n\t */\n\t\n\t\n\t/**\n\t * Create a wrapper function for exporting an internal functions to an external API.\n\t *  @param {string} fn API function name\n\t *  @returns {function} wrapped function\n\t *  @memberof DataTable#internal\n\t */\n\tfunction _fnExternApiFunc (fn)\n\t{\n\t\treturn function() {\n\t\t\tvar args = [_fnSettingsFromNode( this[DataTable.ext.iApiIndex] )].concat(\n\t\t\t\tArray.prototype.slice.call(arguments)\n\t\t\t);\n\t\t\treturn DataTable.ext.internal[fn].apply( this, args );\n\t\t};\n\t}\n\t\n\t\n\t/**\n\t * Reference to internal functions for use by plug-in developers. Note that\n\t * these methods are references to internal functions and are considered to be\n\t * private. If you use these methods, be aware that they are liable to change\n\t * between versions.\n\t *  @namespace\n\t */\n\t$.extend( DataTable.ext.internal, {\n\t\t_fnExternApiFunc: _fnExternApiFunc,\n\t\t_fnBuildAjax: _fnBuildAjax,\n\t\t_fnAjaxUpdate: _fnAjaxUpdate,\n\t\t_fnAjaxParameters: _fnAjaxParameters,\n\t\t_fnAjaxUpdateDraw: _fnAjaxUpdateDraw,\n\t\t_fnAjaxDataSrc: _fnAjaxDataSrc,\n\t\t_fnAddColumn: _fnAddColumn,\n\t\t_fnColumnOptions: _fnColumnOptions,\n\t\t_fnAdjustColumnSizing: _fnAdjustColumnSizing,\n\t\t_fnVisibleToColumnIndex: _fnVisibleToColumnIndex,\n\t\t_fnColumnIndexToVisible: _fnColumnIndexToVisible,\n\t\t_fnVisbleColumns: _fnVisbleColumns,\n\t\t_fnGetColumns: _fnGetColumns,\n\t\t_fnColumnTypes: _fnColumnTypes,\n\t\t_fnApplyColumnDefs: _fnApplyColumnDefs,\n\t\t_fnHungarianMap: _fnHungarianMap,\n\t\t_fnCamelToHungarian: _fnCamelToHungarian,\n\t\t_fnLanguageCompat: _fnLanguageCompat,\n\t\t_fnBrowserDetect: _fnBrowserDetect,\n\t\t_fnAddData: _fnAddData,\n\t\t_fnAddTr: _fnAddTr,\n\t\t_fnNodeToDataIndex: _fnNodeToDataIndex,\n\t\t_fnNodeToColumnIndex: _fnNodeToColumnIndex,\n\t\t_fnGetCellData: _fnGetCellData,\n\t\t_fnSetCellData: _fnSetCellData,\n\t\t_fnSplitObjNotation: _fnSplitObjNotation,\n\t\t_fnGetObjectDataFn: _fnGetObjectDataFn,\n\t\t_fnSetObjectDataFn: _fnSetObjectDataFn,\n\t\t_fnGetDataMaster: _fnGetDataMaster,\n\t\t_fnClearTable: _fnClearTable,\n\t\t_fnDeleteIndex: _fnDeleteIndex,\n\t\t_fnInvalidate: _fnInvalidate,\n\t\t_fnGetRowElements: _fnGetRowElements,\n\t\t_fnCreateTr: _fnCreateTr,\n\t\t_fnBuildHead: _fnBuildHead,\n\t\t_fnDrawHead: _fnDrawHead,\n\t\t_fnDraw: _fnDraw,\n\t\t_fnReDraw: _fnReDraw,\n\t\t_fnAddOptionsHtml: _fnAddOptionsHtml,\n\t\t_fnDetectHeader: _fnDetectHeader,\n\t\t_fnGetUniqueThs: _fnGetUniqueThs,\n\t\t_fnFeatureHtmlFilter: _fnFeatureHtmlFilter,\n\t\t_fnFilterComplete: _fnFilterComplete,\n\t\t_fnFilterCustom: _fnFilterCustom,\n\t\t_fnFilterColumn: _fnFilterColumn,\n\t\t_fnFilter: _fnFilter,\n\t\t_fnFilterCreateSearch: _fnFilterCreateSearch,\n\t\t_fnEscapeRegex: _fnEscapeRegex,\n\t\t_fnFilterData: _fnFilterData,\n\t\t_fnFeatureHtmlInfo: _fnFeatureHtmlInfo,\n\t\t_fnUpdateInfo: _fnUpdateInfo,\n\t\t_fnInfoMacros: _fnInfoMacros,\n\t\t_fnInitialise: _fnInitialise,\n\t\t_fnInitComplete: _fnInitComplete,\n\t\t_fnLengthChange: _fnLengthChange,\n\t\t_fnFeatureHtmlLength: _fnFeatureHtmlLength,\n\t\t_fnFeatureHtmlPaginate: _fnFeatureHtmlPaginate,\n\t\t_fnPageChange: _fnPageChange,\n\t\t_fnFeatureHtmlProcessing: _fnFeatureHtmlProcessing,\n\t\t_fnProcessingDisplay: _fnProcessingDisplay,\n\t\t_fnFeatureHtmlTable: _fnFeatureHtmlTable,\n\t\t_fnScrollDraw: _fnScrollDraw,\n\t\t_fnApplyToChildren: _fnApplyToChildren,\n\t\t_fnCalculateColumnWidths: _fnCalculateColumnWidths,\n\t\t_fnThrottle: _fnThrottle,\n\t\t_fnConvertToWidth: _fnConvertToWidth,\n\t\t_fnGetWidestNode: _fnGetWidestNode,\n\t\t_fnGetMaxLenString: _fnGetMaxLenString,\n\t\t_fnStringToCss: _fnStringToCss,\n\t\t_fnSortFlatten: _fnSortFlatten,\n\t\t_fnSort: _fnSort,\n\t\t_fnSortAria: _fnSortAria,\n\t\t_fnSortListener: _fnSortListener,\n\t\t_fnSortAttachListener: _fnSortAttachListener,\n\t\t_fnSortingClasses: _fnSortingClasses,\n\t\t_fnSortData: _fnSortData,\n\t\t_fnSaveState: _fnSaveState,\n\t\t_fnLoadState: _fnLoadState,\n\t\t_fnSettingsFromNode: _fnSettingsFromNode,\n\t\t_fnLog: _fnLog,\n\t\t_fnMap: _fnMap,\n\t\t_fnBindAction: _fnBindAction,\n\t\t_fnCallbackReg: _fnCallbackReg,\n\t\t_fnCallbackFire: _fnCallbackFire,\n\t\t_fnLengthOverflow: _fnLengthOverflow,\n\t\t_fnRenderer: _fnRenderer,\n\t\t_fnDataSource: _fnDataSource,\n\t\t_fnRowAttributes: _fnRowAttributes,\n\t\t_fnExtend: _fnExtend,\n\t\t_fnCalculateEnd: function () {} // Used by a lot of plug-ins, but redundant\n\t\t                                // in 1.10, so this dead-end function is\n\t\t                                // added to prevent errors\n\t} );\n\t\n\n\t// jQuery access\n\t$.fn.dataTable = DataTable;\n\n\t// Provide access to the host jQuery object (circular reference)\n\tDataTable.$ = $;\n\n\t// Legacy aliases\n\t$.fn.dataTableSettings = DataTable.settings;\n\t$.fn.dataTableExt = DataTable.ext;\n\n\t// With a capital `D` we return a DataTables API instance rather than a\n\t// jQuery object\n\t$.fn.DataTable = function ( opts ) {\n\t\treturn $(this).dataTable( opts ).api();\n\t};\n\n\t// All properties that are available to $.fn.dataTable should also be\n\t// available on $.fn.DataTable\n\t$.each( DataTable, function ( prop, val ) {\n\t\t$.fn.DataTable[ prop ] = val;\n\t} );\n\n\n\t// Information about events fired by DataTables - for documentation.\n\t/**\n\t * Draw event, fired whenever the table is redrawn on the page, at the same\n\t * point as fnDrawCallback. This may be useful for binding events or\n\t * performing calculations when the table is altered at all.\n\t *  @name DataTable#draw.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t */\n\n\t/**\n\t * Search event, fired when the searching applied to the table (using the\n\t * built-in global search, or column filters) is altered.\n\t *  @name DataTable#search.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t */\n\n\t/**\n\t * Page change event, fired when the paging of the table is altered.\n\t *  @name DataTable#page.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t */\n\n\t/**\n\t * Order event, fired when the ordering applied to the table is altered.\n\t *  @name DataTable#order.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t */\n\n\t/**\n\t * DataTables initialisation complete event, fired when the table is fully\n\t * drawn, including Ajax data loaded, if Ajax data is required.\n\t *  @name DataTable#init.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} oSettings DataTables settings object\n\t *  @param {object} json The JSON object request from the server - only\n\t *    present if client-side Ajax sourced data is used</li></ol>\n\t */\n\n\t/**\n\t * State save event, fired when the table has changed state a new state save\n\t * is required. This event allows modification of the state saving object\n\t * prior to actually doing the save, including addition or other state\n\t * properties (for plug-ins) or modification of a DataTables core property.\n\t *  @name DataTable#stateSaveParams.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} oSettings DataTables settings object\n\t *  @param {object} json The state information to be saved\n\t */\n\n\t/**\n\t * State load event, fired when the table is loading state from the stored\n\t * data, but prior to the settings object being modified by the saved state\n\t * - allowing modification of the saved state is required or loading of\n\t * state for a plug-in.\n\t *  @name DataTable#stateLoadParams.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} oSettings DataTables settings object\n\t *  @param {object} json The saved state information\n\t */\n\n\t/**\n\t * State loaded event, fired when state has been loaded from stored data and\n\t * the settings object has been modified by the loaded data.\n\t *  @name DataTable#stateLoaded.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} oSettings DataTables settings object\n\t *  @param {object} json The saved state information\n\t */\n\n\t/**\n\t * Processing event, fired when DataTables is doing some kind of processing\n\t * (be it, order, searcg or anything else). It can be used to indicate to\n\t * the end user that there is something happening, or that something has\n\t * finished.\n\t *  @name DataTable#processing.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} oSettings DataTables settings object\n\t *  @param {boolean} bShow Flag for if DataTables is doing processing or not\n\t */\n\n\t/**\n\t * Ajax (XHR) event, fired whenever an Ajax request is completed from a\n\t * request to made to the server for new data. This event is called before\n\t * DataTables processed the returned data, so it can also be used to pre-\n\t * process the data returned from the server, if needed.\n\t *\n\t * Note that this trigger is called in `fnServerData`, if you override\n\t * `fnServerData` and which to use this event, you need to trigger it in you\n\t * success function.\n\t *  @name DataTable#xhr.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t *  @param {object} json JSON returned from the server\n\t *\n\t *  @example\n\t *     // Use a custom property returned from the server in another DOM element\n\t *     $('#table').dataTable().on('xhr.dt', function (e, settings, json) {\n\t *       $('#status').html( json.status );\n\t *     } );\n\t *\n\t *  @example\n\t *     // Pre-process the data returned from the server\n\t *     $('#table').dataTable().on('xhr.dt', function (e, settings, json) {\n\t *       for ( var i=0, ien=json.aaData.length ; i<ien ; i++ ) {\n\t *         json.aaData[i].sum = json.aaData[i].one + json.aaData[i].two;\n\t *       }\n\t *       // Note no return - manipulate the data directly in the JSON object.\n\t *     } );\n\t */\n\n\t/**\n\t * Destroy event, fired when the DataTable is destroyed by calling fnDestroy\n\t * or passing the bDestroy:true parameter in the initialisation object. This\n\t * can be used to remove bound events, added DOM nodes, etc.\n\t *  @name DataTable#destroy.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t */\n\n\t/**\n\t * Page length change event, fired when number of records to show on each\n\t * page (the length) is changed.\n\t *  @name DataTable#length.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t *  @param {integer} len New length\n\t */\n\n\t/**\n\t * Column sizing has changed.\n\t *  @name DataTable#column-sizing.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t */\n\n\t/**\n\t * Column visibility has changed.\n\t *  @name DataTable#column-visibility.dt\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t *  @param {int} column Column index\n\t *  @param {bool} vis `false` if column now hidden, or `true` if visible\n\t */\n\n\treturn $.fn.dataTable;\n}));\n\n\n/*! AutoFill 2.3.2\n * ©2008-2018 SpryMedia Ltd - datatables.net/license\n */\n\n/**\n * @summary     AutoFill\n * @description Add Excel like click and drag auto-fill options to DataTables\n * @version     2.3.2\n * @file        dataTables.autoFill.js\n * @author      SpryMedia Ltd (www.sprymedia.co.uk)\n * @contact     www.sprymedia.co.uk/contact\n * @copyright   Copyright 2010-2018 SpryMedia Ltd.\n *\n * This source file is free software, available under the following license:\n *   MIT license - http://datatables.net/license/mit\n *\n * This source file is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n *\n * For details please refer to: http://www.datatables.net\n */\n(function( factory ){\n\tif ( typeof define === 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( ['jquery', 'datatables.net'], function ( $ ) {\n\t\t\treturn factory( $, window, document );\n\t\t} );\n\t}\n\telse if ( typeof exports === 'object' ) {\n\t\t// CommonJS\n\t\tmodule.exports = function (root, $) {\n\t\t\tif ( ! root ) {\n\t\t\t\troot = window;\n\t\t\t}\n\n\t\t\tif ( ! $ || ! $.fn.dataTable ) {\n\t\t\t\t$ = require('datatables.net')(root, $).$;\n\t\t\t}\n\n\t\t\treturn factory( $, root, root.document );\n\t\t};\n\t}\n\telse {\n\t\t// Browser\n\t\tfactory( jQuery, window, document );\n\t}\n}(function( $, window, document, undefined ) {\n'use strict';\nvar DataTable = $.fn.dataTable;\n\n\nvar _instance = 0;\n\n/** \n * AutoFill provides Excel like auto-fill features for a DataTable\n *\n * @class AutoFill\n * @constructor\n * @param {object} oTD DataTables settings object\n * @param {object} oConfig Configuration object for AutoFill\n */\nvar AutoFill = function( dt, opts )\n{\n\tif ( ! DataTable.versionCheck || ! DataTable.versionCheck( '1.10.8' ) ) {\n\t\tthrow( \"Warning: AutoFill requires DataTables 1.10.8 or greater\");\n\t}\n\n\t// User and defaults configuration object\n\tthis.c = $.extend( true, {},\n\t\tDataTable.defaults.autoFill,\n\t\tAutoFill.defaults,\n\t\topts\n\t);\n\n\t/**\n\t * @namespace Settings object which contains customisable information for AutoFill instance\n\t */\n\tthis.s = {\n\t\t/** @type {DataTable.Api} DataTables' API instance */\n\t\tdt: new DataTable.Api( dt ),\n\n\t\t/** @type {String} Unique namespace for events attached to the document */\n\t\tnamespace: '.autoFill'+(_instance++),\n\n\t\t/** @type {Object} Cached dimension information for use in the mouse move event handler */\n\t\tscroll: {},\n\n\t\t/** @type {integer} Interval object used for smooth scrolling */\n\t\tscrollInterval: null,\n\n\t\thandle: {\n\t\t\theight: 0,\n\t\t\twidth: 0\n\t\t},\n\n\t\t/**\n\t\t * Enabled setting\n\t\t * @type {Boolean}\n\t\t */\n\t\tenabled: false\n\t};\n\n\n\t/**\n\t * @namespace Common and useful DOM elements for the class instance\n\t */\n\tthis.dom = {\n\t\t/** @type {jQuery} AutoFill handle */\n\t\thandle: $('<div class=\"dt-autofill-handle\"/>'),\n\n\t\t/**\n\t\t * @type {Object} Selected cells outline - Need to use 4 elements,\n\t\t *   otherwise the mouse over if you back into the selected rectangle\n\t\t *   will be over that element, rather than the cells!\n\t\t */\n\t\tselect: {\n\t\t\ttop:    $('<div class=\"dt-autofill-select top\"/>'),\n\t\t\tright:  $('<div class=\"dt-autofill-select right\"/>'),\n\t\t\tbottom: $('<div class=\"dt-autofill-select bottom\"/>'),\n\t\t\tleft:   $('<div class=\"dt-autofill-select left\"/>')\n\t\t},\n\n\t\t/** @type {jQuery} Fill type chooser background */\n\t\tbackground: $('<div class=\"dt-autofill-background\"/>'),\n\n\t\t/** @type {jQuery} Fill type chooser */\n\t\tlist: $('<div class=\"dt-autofill-list\">'+this.s.dt.i18n('autoFill.info', '')+'<ul/></div>'),\n\n\t\t/** @type {jQuery} DataTables scrolling container */\n\t\tdtScroll: null,\n\n\t\t/** @type {jQuery} Offset parent element */\n\t\toffsetParent: null\n\t};\n\n\n\t/* Constructor logic */\n\tthis._constructor();\n};\n\n\n\n$.extend( AutoFill.prototype, {\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Public methods (exposed via the DataTables API below)\n\t */\n\tenabled: function ()\n\t{\n\t\treturn this.s.enabled;\n\t},\n\n\n\tenable: function ( flag )\n\t{\n\t\tvar that = this;\n\n\t\tif ( flag === false ) {\n\t\t\treturn this.disable();\n\t\t}\n\n\t\tthis.s.enabled = true;\n\n\t\tthis._focusListener();\n\n\t\tthis.dom.handle.on( 'mousedown', function (e) {\n\t\t\tthat._mousedown( e );\n\t\t\treturn false;\n\t\t} );\n\n\t\treturn this;\n\t},\n\n\tdisable: function ()\n\t{\n\t\tthis.s.enabled = false;\n\n\t\tthis._focusListenerRemove();\n\n\t\treturn this;\n\t},\n\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Constructor\n\t */\n\n\t/**\n\t * Initialise the RowReorder instance\n\t *\n\t * @private\n\t */\n\t_constructor: function ()\n\t{\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar dtScroll = $('div.dataTables_scrollBody', this.s.dt.table().container());\n\n\t\t// Make the instance accessible to the API\n\t\tdt.settings()[0].autoFill = this;\n\n\t\tif ( dtScroll.length ) {\n\t\t\tthis.dom.dtScroll = dtScroll;\n\n\t\t\t// Need to scroll container to be the offset parent\n\t\t\tif ( dtScroll.css('position') === 'static' ) {\n\t\t\t\tdtScroll.css( 'position', 'relative' );\n\t\t\t}\n\t\t}\n\n\t\tif ( this.c.enable !== false ) {\n\t\t\tthis.enable();\n\t\t}\n\n\t\tdt.on( 'destroy.autoFill', function () {\n\t\t\tthat._focusListenerRemove();\n\t\t} );\n\t},\n\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Private methods\n\t */\n\n\t/**\n\t * Display the AutoFill drag handle by appending it to a table cell. This\n\t * is the opposite of the _detach method.\n\t *\n\t * @param  {node} node TD/TH cell to insert the handle into\n\t * @private\n\t */\n\t_attach: function ( node )\n\t{\n\t\tvar dt = this.s.dt;\n\t\tvar idx = dt.cell( node ).index();\n\t\tvar handle = this.dom.handle;\n\t\tvar handleDim = this.s.handle;\n\n\t\tif ( ! idx || dt.columns( this.c.columns ).indexes().indexOf( idx.column ) === -1 ) {\n\t\t\tthis._detach();\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! this.dom.offsetParent ) {\n\t\t\t// We attach to the table's offset parent\n\t\t\tthis.dom.offsetParent = $( dt.table().node() ).offsetParent();\n\t\t}\n\n\t\tif ( ! handleDim.height || ! handleDim.width ) {\n\t\t\t// Append to document so we can get its size. Not expecting it to\n\t\t\t// change during the life time of the page\n\t\t\thandle.appendTo( 'body' );\n\t\t\thandleDim.height = handle.outerHeight();\n\t\t\thandleDim.width = handle.outerWidth();\n\t\t}\n\n\t\t// Might need to go through multiple offset parents\n\t\tvar offset = this._getPosition( node, this.dom.offsetParent );\n\n\t\tthis.dom.attachedTo = node;\n\t\thandle\n\t\t\t.css( {\n\t\t\t\ttop: offset.top + node.offsetHeight - handleDim.height,\n\t\t\t\tleft: offset.left + node.offsetWidth - handleDim.width\n\t\t\t} )\n\t\t\t.appendTo( this.dom.offsetParent );\n\t},\n\n\n\t/**\n\t * Determine can the fill type should be. This can be automatic, or ask the\n\t * end user.\n\t *\n\t * @param {array} cells Information about the selected cells from the key\n\t *     up function\n\t * @private\n\t */\n\t_actionSelector: function ( cells )\n\t{\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar actions = AutoFill.actions;\n\t\tvar available = [];\n\n\t\t// \"Ask\" each plug-in if it wants to handle this data\n\t\t$.each( actions, function ( key, action ) {\n\t\t\tif ( action.available( dt, cells ) ) {\n\t\t\t\tavailable.push( key );\n\t\t\t}\n\t\t} );\n\n\t\tif ( available.length === 1 && this.c.alwaysAsk === false ) {\n\t\t\t// Only one action available - enact it immediately\n\t\t\tvar result = actions[ available[0] ].execute( dt, cells );\n\t\t\tthis._update( result, cells );\n\t\t}\n\t\telse {\n\t\t\t// Multiple actions available - ask the end user what they want to do\n\t\t\tvar list = this.dom.list.children('ul').empty();\n\n\t\t\t// Add a cancel option\n\t\t\tavailable.push( 'cancel' );\n\n\t\t\t$.each( available, function ( i, name ) {\n\t\t\t\tlist.append( $('<li/>')\n\t\t\t\t\t.append(\n\t\t\t\t\t\t'<div class=\"dt-autofill-question\">'+\n\t\t\t\t\t\t\tactions[ name ].option( dt, cells )+\n\t\t\t\t\t\t'<div>'\n\t\t\t\t\t)\n\t\t\t\t\t.append( $('<div class=\"dt-autofill-button\">' )\n\t\t\t\t\t\t.append( $('<button class=\"'+AutoFill.classes.btn+'\">'+dt.i18n('autoFill.button', '&gt;')+'</button>')\n\t\t\t\t\t\t\t.on( 'click', function () {\n\t\t\t\t\t\t\t\tvar result = actions[ name ].execute(\n\t\t\t\t\t\t\t\t\tdt, cells, $(this).closest('li')\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tthat._update( result, cells );\n\n\t\t\t\t\t\t\t\tthat.dom.background.remove();\n\t\t\t\t\t\t\t\tthat.dom.list.remove();\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} );\n\n\t\t\tthis.dom.background.appendTo( 'body' );\n\t\t\tthis.dom.list.appendTo( 'body' );\n\n\t\t\tthis.dom.list.css( 'margin-top', this.dom.list.outerHeight()/2 * -1 );\n\t\t}\n\t},\n\n\n\t/**\n\t * Remove the AutoFill handle from the document\n\t *\n\t * @private\n\t */\n\t_detach: function ()\n\t{\n\t\tthis.dom.attachedTo = null;\n\t\tthis.dom.handle.detach();\n\t},\n\n\n\t/**\n\t * Draw the selection outline by calculating the range between the start\n\t * and end cells, then placing the highlighting elements to draw a rectangle\n\t *\n\t * @param  {node}   target End cell\n\t * @param  {object} e      Originating event\n\t * @private\n\t */\n\t_drawSelection: function ( target, e )\n\t{\n\t\t// Calculate boundary for start cell to this one\n\t\tvar dt = this.s.dt;\n\t\tvar start = this.s.start;\n\t\tvar startCell = $(this.dom.start);\n\t\tvar end = {\n\t\t\trow: this.c.vertical ?\n\t\t\t\tdt.rows( { page: 'current' } ).nodes().indexOf( target.parentNode ) :\n\t\t\t\tstart.row,\n\t\t\tcolumn: this.c.horizontal ?\n\t\t\t\t$(target).index() :\n\t\t\t\tstart.column\n\t\t};\n\t\tvar colIndx = dt.column.index( 'toData', end.column );\n\t\tvar endRow =  dt.row( ':eq('+end.row+')', { page: 'current' } ); // Workaround for M581\n\t\tvar endCell = $( dt.cell( endRow.index(), colIndx ).node() );\n\n\t\t// Be sure that is a DataTables controlled cell\n\t\tif ( ! dt.cell( endCell ).any() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// if target is not in the columns available - do nothing\n\t\tif ( dt.columns( this.c.columns ).indexes().indexOf( colIndx ) === -1 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.s.end = end;\n\n\t\tvar top, bottom, left, right, height, width;\n\n\t\ttop    = start.row    < end.row    ? startCell : endCell;\n\t\tbottom = start.row    < end.row    ? endCell   : startCell;\n\t\tleft   = start.column < end.column ? startCell : endCell;\n\t\tright  = start.column < end.column ? endCell   : startCell;\n\n\t\ttop    = this._getPosition( top ).top;\n\t\tleft   = this._getPosition( left ).left;\n\t\theight = this._getPosition( bottom ).top + bottom.outerHeight() - top;\n\t\twidth  = this._getPosition( right ).left + right.outerWidth() - left;\n\n\t\tvar select = this.dom.select;\n\t\tselect.top.css( {\n\t\t\ttop: top,\n\t\t\tleft: left,\n\t\t\twidth: width\n\t\t} );\n\n\t\tselect.left.css( {\n\t\t\ttop: top,\n\t\t\tleft: left,\n\t\t\theight: height\n\t\t} );\n\n\t\tselect.bottom.css( {\n\t\t\ttop: top + height,\n\t\t\tleft: left,\n\t\t\twidth: width\n\t\t} );\n\n\t\tselect.right.css( {\n\t\t\ttop: top,\n\t\t\tleft: left + width,\n\t\t\theight: height\n\t\t} );\n\t},\n\n\n\t/**\n\t * Use the Editor API to perform an update based on the new data for the\n\t * cells\n\t *\n\t * @param {array} cells Information about the selected cells from the key\n\t *     up function\n\t * @private\n\t */\n\t_editor: function ( cells )\n\t{\n\t\tvar dt = this.s.dt;\n\t\tvar editor = this.c.editor;\n\n\t\tif ( ! editor ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Build the object structure for Editor's multi-row editing\n\t\tvar idValues = {};\n\t\tvar nodes = [];\n\t\tvar fields = editor.fields();\n\n\t\tfor ( var i=0, ien=cells.length ; i<ien ; i++ ) {\n\t\t\tfor ( var j=0, jen=cells[i].length ; j<jen ; j++ ) {\n\t\t\t\tvar cell = cells[i][j];\n\n\t\t\t\t// Determine the field name for the cell being edited\n\t\t\t\tvar col = dt.settings()[0].aoColumns[ cell.index.column ];\n\t\t\t\tvar fieldName = col.editField;\n\n\t\t\t\tif ( fieldName === undefined ) {\n\t\t\t\t\tvar dataSrc = col.mData;\n\n\t\t\t\t\t// dataSrc is the `field.data` property, but we need to set\n\t\t\t\t\t// using the field name, so we need to translate from the\n\t\t\t\t\t// data to the name\n\t\t\t\t\tfor ( var k=0, ken=fields.length ; k<ken ; k++ ) {\n\t\t\t\t\t\tvar field = editor.field( fields[k] );\n\n\t\t\t\t\t\tif ( field.dataSrc() === dataSrc ) {\n\t\t\t\t\t\t\tfieldName = field.name();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( ! fieldName ) {\n\t\t\t\t\tthrow 'Could not automatically determine field data. '+\n\t\t\t\t\t\t'Please see https://datatables.net/tn/11';\n\t\t\t\t}\n\n\t\t\t\tif ( ! idValues[ fieldName ] ) {\n\t\t\t\t\tidValues[ fieldName ] = {};\n\t\t\t\t}\n\n\t\t\t\tvar id = dt.row( cell.index.row ).id();\n\t\t\t\tidValues[ fieldName ][ id ] = cell.set;\n\n\t\t\t\t// Keep a list of cells so we can activate the bubble editing\n\t\t\t\t// with them\n\t\t\t\tnodes.push( cell.index );\n\t\t\t}\n\t\t}\n\n\t\t// Perform the edit using bubble editing as it allows us to specify\n\t\t// the cells to be edited, rather than using full rows\n\t\teditor\n\t\t\t.bubble( nodes, false )\n\t\t\t.multiSet( idValues )\n\t\t\t.submit();\n\t},\n\n\n\t/**\n\t * Emit an event on the DataTable for listeners\n\t *\n\t * @param  {string} name Event name\n\t * @param  {array} args Event arguments\n\t * @private\n\t */\n\t_emitEvent: function ( name, args )\n\t{\n\t\tthis.s.dt.iterator( 'table', function ( ctx, i ) {\n\t\t\t$(ctx.nTable).triggerHandler( name+'.dt', args );\n\t\t} );\n\t},\n\n\n\t/**\n\t * Attach suitable listeners (based on the configuration) that will attach\n\t * and detach the AutoFill handle in the document.\n\t *\n\t * @private\n\t */\n\t_focusListener: function ()\n\t{\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar namespace = this.s.namespace;\n\t\tvar focus = this.c.focus !== null ?\n\t\t\tthis.c.focus :\n\t\t\tdt.init().keys || dt.settings()[0].keytable ?\n\t\t\t\t'focus' :\n\t\t\t\t'hover';\n\n\t\t// All event listeners attached here are removed in the `destroy`\n\t\t// callback in the constructor\n\t\tif ( focus === 'focus' ) {\n\t\t\tdt\n\t\t\t\t.on( 'key-focus.autoFill', function ( e, dt, cell ) {\n\t\t\t\t\tthat._attach( cell.node() );\n\t\t\t\t} )\n\t\t\t\t.on( 'key-blur.autoFill', function ( e, dt, cell ) {\n\t\t\t\t\tthat._detach();\n\t\t\t\t} );\n\t\t}\n\t\telse if ( focus === 'click' ) {\n\t\t\t$(dt.table().body()).on( 'click'+namespace, 'td, th', function (e) {\n\t\t\t\tthat._attach( this );\n\t\t\t} );\n\n\t\t\t$(document.body).on( 'click'+namespace, function (e) {\n\t\t\t\tif ( ! $(e.target).parents().filter( dt.table().body() ).length ) {\n\t\t\t\t\tthat._detach();\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t\telse {\n\t\t\t$(dt.table().body())\n\t\t\t\t.on( 'mouseenter'+namespace, 'td, th', function (e) {\n\t\t\t\t\tthat._attach( this );\n\t\t\t\t} )\n\t\t\t\t.on( 'mouseleave'+namespace, function (e) {\n\t\t\t\t\tif ( $(e.relatedTarget).hasClass('dt-autofill-handle') ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthat._detach();\n\t\t\t\t} );\n\t\t}\n\t},\n\n\n\t_focusListenerRemove: function ()\n\t{\n\t\tvar dt = this.s.dt;\n\n\t\tdt.off( '.autoFill' );\n\t\t$(dt.table().body()).off( this.s.namespace );\n\t\t$(document.body).off( this.s.namespace );\n\t},\n\n\n\t/**\n\t * Get the position of a node, relative to another, including any scrolling\n\t * offsets.\n\t * @param  {Node}   node         Node to get the position of\n\t * @param  {jQuery} targetParent Node to use as the parent\n\t * @return {object}              Offset calculation\n\t * @private\n\t */\n\t_getPosition: function ( node, targetParent )\n\t{\n\t\tvar\n\t\t\tcurrNode = $(node),\n\t\t\tcurrOffsetParent,\n\t\t\tposition,\n\t\t\ttop = 0,\n\t\t\tleft = 0;\n\n\t\tif ( ! targetParent ) {\n\t\t\ttargetParent = $( $( this.s.dt.table().node() )[0].offsetParent );\n\t\t}\n\n\t\tdo {\n\t\t\tposition = currNode.position();\n\n\t\t\t// jQuery doesn't give a `table` as the offset parent oddly, so use DOM directly\n\t\t\tcurrOffsetParent = $( currNode[0].offsetParent );\n\n\t\t\ttop += position.top + currOffsetParent.scrollTop();\n\t\t\tleft += position.left + currOffsetParent.scrollLeft();\n\n\t\t\ttop += parseInt( currOffsetParent.css('margin-top') ) * 1;\n\t\t\ttop += parseInt( currOffsetParent.css('border-top-width') ) * 1;\n\n\t\t\t// Emergency fall back. Shouldn't happen, but just in case!\n\t\t\tif ( currNode.get(0).nodeName.toLowerCase() === 'body' ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcurrNode = currOffsetParent; // for next loop\n\t\t}\n\t\twhile ( currOffsetParent.get(0) !== targetParent.get(0) )\n\n\t\treturn {\n\t\t\ttop: top,\n\t\t\tleft: left\n\t\t};\n\t},\n\n\n\t/**\n\t * Start mouse drag - selects the start cell\n\t *\n\t * @param  {object} e Mouse down event\n\t * @private\n\t */\n\t_mousedown: function ( e )\n\t{\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\n\t\tthis.dom.start = this.dom.attachedTo;\n\t\tthis.s.start = {\n\t\t\trow: dt.rows( { page: 'current' } ).nodes().indexOf( $(this.dom.start).parent()[0] ),\n\t\t\tcolumn: $(this.dom.start).index()\n\t\t};\n\n\t\t$(document.body)\n\t\t\t.on( 'mousemove.autoFill', function (e) {\n\t\t\t\tthat._mousemove( e );\n\t\t\t} )\n\t\t\t.on( 'mouseup.autoFill', function (e) {\n\t\t\t\tthat._mouseup( e );\n\t\t\t} );\n\n\t\tvar select = this.dom.select;\n\t\tvar offsetParent = $( dt.table().node() ).offsetParent();\n\t\tselect.top.appendTo( offsetParent );\n\t\tselect.left.appendTo( offsetParent );\n\t\tselect.right.appendTo( offsetParent );\n\t\tselect.bottom.appendTo( offsetParent );\n\n\t\tthis._drawSelection( this.dom.start, e );\n\n\t\tthis.dom.handle.css( 'display', 'none' );\n\n\t\t// Cache scrolling information so mouse move doesn't need to read.\n\t\t// This assumes that the window and DT scroller will not change size\n\t\t// during an AutoFill drag, which I think is a fair assumption\n\t\tvar scrollWrapper = this.dom.dtScroll;\n\t\tthis.s.scroll = {\n\t\t\twindowHeight: $(window).height(),\n\t\t\twindowWidth:  $(window).width(),\n\t\t\tdtTop:        scrollWrapper ? scrollWrapper.offset().top : null,\n\t\t\tdtLeft:       scrollWrapper ? scrollWrapper.offset().left : null,\n\t\t\tdtHeight:     scrollWrapper ? scrollWrapper.outerHeight() : null,\n\t\t\tdtWidth:      scrollWrapper ? scrollWrapper.outerWidth() : null\n\t\t};\n\t},\n\n\n\t/**\n\t * Mouse drag - selects the end cell and update the selection display for\n\t * the end user\n\t *\n\t * @param  {object} e Mouse move event\n\t * @private\n\t */\n\t_mousemove: function ( e )\n\t{\t\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar name = e.target.nodeName.toLowerCase();\n\t\tif ( name !== 'td' && name !== 'th' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._drawSelection( e.target, e );\n\t\tthis._shiftScroll( e );\n\t},\n\n\n\t/**\n\t * End mouse drag - perform the update actions\n\t *\n\t * @param  {object} e Mouse up event\n\t * @private\n\t */\n\t_mouseup: function ( e )\n\t{\n\t\t$(document.body).off( '.autoFill' );\n\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar select = this.dom.select;\n\t\tselect.top.remove();\n\t\tselect.left.remove();\n\t\tselect.right.remove();\n\t\tselect.bottom.remove();\n\n\t\tthis.dom.handle.css( 'display', 'block' );\n\n\t\t// Display complete - now do something useful with the selection!\n\t\tvar start = this.s.start;\n\t\tvar end = this.s.end;\n\n\t\t// Haven't selected multiple cells, so nothing to do\n\t\tif ( start.row === end.row && start.column === end.column ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar startDt = dt.cell( ':eq('+start.row+')', start.column+':visible', {page:'current'} );\n\n\t\t// If Editor is active inside this cell (inline editing) we need to wait for Editor to\n\t\t// submit and then we can loop back and trigger the fill.\n\t\tif ( $('div.DTE', startDt.node()).length ) {\n\t\t\tvar editor = dt.editor();\n\n\t\t\teditor\n\t\t\t\t.on( 'submitSuccess.dtaf', function () {\n\t\t\t\t\teditor.off( '.dtaf');\n\n\t\t\t\t\tsetTimeout( function () {\n\t\t\t\t\t\tthat._mouseup( e );\n\t\t\t\t\t}, 100 );\n\t\t\t\t} )\n\t\t\t\t.on( 'submitComplete.dtaf preSubmitCancelled.dtaf', function () {\n\t\t\t\t\teditor.off( '.dtaf');\n\t\t\t\t} );\n\n\t\t\t// Make the current input submit\n\t\t\teditor.submit();\n\n\t\t\treturn;\n\t\t}\n\n\t\t// Build a matrix representation of the selected rows\n\t\tvar rows       = this._range( start.row, end.row );\n\t\tvar columns    = this._range( start.column, end.column );\n\t\tvar selected   = [];\n\t\tvar dtSettings = dt.settings()[0];\n\t\tvar dtColumns  = dtSettings.aoColumns;\n\n\t\t// Can't use Array.prototype.map as IE8 doesn't support it\n\t\t// Can't use $.map as jQuery flattens 2D arrays\n\t\t// Need to use a good old fashioned for loop\n\t\tfor ( var rowIdx=0 ; rowIdx<rows.length ; rowIdx++ ) {\n\t\t\tselected.push(\n\t\t\t\t$.map( columns, function (column) {\n\t\t\t\t\tvar row = dt.row( ':eq('+rows[rowIdx]+')', {page:'current'} ); // Workaround for M581\n\t\t\t\t\tvar cell = dt.cell( row.index(), column+':visible' );\n\t\t\t\t\tvar data = cell.data();\n\t\t\t\t\tvar cellIndex = cell.index();\n\t\t\t\t\tvar editField = dtColumns[ cellIndex.column ].editField;\n\n\t\t\t\t\tif ( editField !== undefined ) {\n\t\t\t\t\t\tdata = dtSettings.oApi._fnGetObjectDataFn( editField )( dt.row( cellIndex.row ).data() );\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcell:  cell,\n\t\t\t\t\t\tdata:  data,\n\t\t\t\t\t\tlabel: cell.data(),\n\t\t\t\t\t\tindex: cellIndex\n\t\t\t\t\t};\n\t\t\t\t} )\n\t\t\t);\n\t\t}\n\n\t\tthis._actionSelector( selected );\n\t\t\n\t\t// Stop shiftScroll\n\t\tclearInterval( this.s.scrollInterval );\n\t\tthis.s.scrollInterval = null;\n\t},\n\n\n\t/**\n\t * Create an array with a range of numbers defined by the start and end\n\t * parameters passed in (inclusive!).\n\t * \n\t * @param  {integer} start Start\n\t * @param  {integer} end   End\n\t * @private\n\t */\n\t_range: function ( start, end )\n\t{\n\t\tvar out = [];\n\t\tvar i;\n\n\t\tif ( start <= end ) {\n\t\t\tfor ( i=start ; i<=end ; i++ ) {\n\t\t\t\tout.push( i );\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tfor ( i=start ; i>=end ; i-- ) {\n\t\t\t\tout.push( i );\n\t\t\t}\n\t\t}\n\n\t\treturn out;\n\t},\n\n\n\t/**\n\t * Move the window and DataTables scrolling during a drag to scroll new\n\t * content into view. This is done by proximity to the edge of the scrolling\n\t * container of the mouse - for example near the top edge of the window\n\t * should scroll up. This is a little complicated as there are two elements\n\t * that can be scrolled - the window and the DataTables scrolling view port\n\t * (if scrollX and / or scrollY is enabled).\n\t *\n\t * @param  {object} e Mouse move event object\n\t * @private\n\t */\n\t_shiftScroll: function ( e )\n\t{\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar scroll = this.s.scroll;\n\t\tvar runInterval = false;\n\t\tvar scrollSpeed = 5;\n\t\tvar buffer = 65;\n\t\tvar\n\t\t\twindowY = e.pageY - document.body.scrollTop,\n\t\t\twindowX = e.pageX - document.body.scrollLeft,\n\t\t\twindowVert, windowHoriz,\n\t\t\tdtVert, dtHoriz;\n\n\t\t// Window calculations - based on the mouse position in the window,\n\t\t// regardless of scrolling\n\t\tif ( windowY < buffer ) {\n\t\t\twindowVert = scrollSpeed * -1;\n\t\t}\n\t\telse if ( windowY > scroll.windowHeight - buffer ) {\n\t\t\twindowVert = scrollSpeed;\n\t\t}\n\n\t\tif ( windowX < buffer ) {\n\t\t\twindowHoriz = scrollSpeed * -1;\n\t\t}\n\t\telse if ( windowX > scroll.windowWidth - buffer ) {\n\t\t\twindowHoriz = scrollSpeed;\n\t\t}\n\n\t\t// DataTables scrolling calculations - based on the table's position in\n\t\t// the document and the mouse position on the page\n\t\tif ( scroll.dtTop !== null && e.pageY < scroll.dtTop + buffer ) {\n\t\t\tdtVert = scrollSpeed * -1;\n\t\t}\n\t\telse if ( scroll.dtTop !== null && e.pageY > scroll.dtTop + scroll.dtHeight - buffer ) {\n\t\t\tdtVert = scrollSpeed;\n\t\t}\n\n\t\tif ( scroll.dtLeft !== null && e.pageX < scroll.dtLeft + buffer ) {\n\t\t\tdtHoriz = scrollSpeed * -1;\n\t\t}\n\t\telse if ( scroll.dtLeft !== null && e.pageX > scroll.dtLeft + scroll.dtWidth - buffer ) {\n\t\t\tdtHoriz = scrollSpeed;\n\t\t}\n\n\t\t// This is where it gets interesting. We want to continue scrolling\n\t\t// without requiring a mouse move, so we need an interval to be\n\t\t// triggered. The interval should continue until it is no longer needed,\n\t\t// but it must also use the latest scroll commands (for example consider\n\t\t// that the mouse might move from scrolling up to scrolling left, all\n\t\t// with the same interval running. We use the `scroll` object to \"pass\"\n\t\t// this information to the interval. Can't use local variables as they\n\t\t// wouldn't be the ones that are used by an already existing interval!\n\t\tif ( windowVert || windowHoriz || dtVert || dtHoriz ) {\n\t\t\tscroll.windowVert = windowVert;\n\t\t\tscroll.windowHoriz = windowHoriz;\n\t\t\tscroll.dtVert = dtVert;\n\t\t\tscroll.dtHoriz = dtHoriz;\n\t\t\trunInterval = true;\n\t\t}\n\t\telse if ( this.s.scrollInterval ) {\n\t\t\t// Don't need to scroll - remove any existing timer\n\t\t\tclearInterval( this.s.scrollInterval );\n\t\t\tthis.s.scrollInterval = null;\n\t\t}\n\n\t\t// If we need to run the interval to scroll and there is no existing\n\t\t// interval (if there is an existing one, it will continue to run)\n\t\tif ( ! this.s.scrollInterval && runInterval ) {\n\t\t\tthis.s.scrollInterval = setInterval( function () {\n\t\t\t\t// Don't need to worry about setting scroll <0 or beyond the\n\t\t\t\t// scroll bound as the browser will just reject that.\n\t\t\t\tif ( scroll.windowVert ) {\n\t\t\t\t\tdocument.body.scrollTop += scroll.windowVert;\n\t\t\t\t}\n\t\t\t\tif ( scroll.windowHoriz ) {\n\t\t\t\t\tdocument.body.scrollLeft += scroll.windowHoriz;\n\t\t\t\t}\n\n\t\t\t\t// DataTables scrolling\n\t\t\t\tif ( scroll.dtVert || scroll.dtHoriz ) {\n\t\t\t\t\tvar scroller = that.dom.dtScroll[0];\n\n\t\t\t\t\tif ( scroll.dtVert ) {\n\t\t\t\t\t\tscroller.scrollTop += scroll.dtVert;\n\t\t\t\t\t}\n\t\t\t\t\tif ( scroll.dtHoriz ) {\n\t\t\t\t\t\tscroller.scrollLeft += scroll.dtHoriz;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, 20 );\n\t\t}\n\t},\n\n\n\t/**\n\t * Update the DataTable after the user has selected what they want to do\n\t *\n\t * @param  {false|undefined} result Return from the `execute` method - can\n\t *   be false internally to do nothing. This is not documented for plug-ins\n\t *   and is used only by the cancel option.\n\t * @param {array} cells Information about the selected cells from the key\n\t *     up function, argumented with the set values\n\t * @private\n\t */\n\t_update: function ( result, cells )\n\t{\n\t\t// Do nothing on `false` return from an execute function\n\t\tif ( result === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar dt = this.s.dt;\n\t\tvar cell;\n\n\t\t// Potentially allow modifications to the cells matrix\n\t\tthis._emitEvent( 'preAutoFill', [ dt, cells ] );\n\n\t\tthis._editor( cells );\n\n\t\t// Automatic updates are not performed if `update` is null and the\n\t\t// `editor` parameter is passed in - the reason being that Editor will\n\t\t// update the data once submitted\n\t\tvar update = this.c.update !== null ?\n\t\t\tthis.c.update :\n\t\t\tthis.c.editor ?\n\t\t\t\tfalse :\n\t\t\t\ttrue;\n\n\t\tif ( update ) {\n\t\t\tfor ( var i=0, ien=cells.length ; i<ien ; i++ ) {\n\t\t\t\tfor ( var j=0, jen=cells[i].length ; j<jen ; j++ ) {\n\t\t\t\t\tcell = cells[i][j];\n\n\t\t\t\t\tcell.cell.data( cell.set );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdt.draw(false);\n\t\t}\n\n\t\tthis._emitEvent( 'autoFill', [ dt, cells ] );\n\t}\n} );\n\n\n/**\n * AutoFill actions. The options here determine how AutoFill will fill the data\n * in the table when the user has selected a range of cells. Please see the\n * documentation on the DataTables site for full details on how to create plug-\n * ins.\n *\n * @type {Object}\n */\nAutoFill.actions = {\n\tincrement: {\n\t\tavailable: function ( dt, cells ) {\n\t\t\tvar d = cells[0][0].label;\n\n\t\t\t// is numeric test based on jQuery's old `isNumeric` function\n\t\t\treturn !isNaN( d - parseFloat( d ) );\n\t\t},\n\n\t\toption: function ( dt, cells ) {\n\t\t\treturn dt.i18n(\n\t\t\t\t'autoFill.increment',\n\t\t\t\t'Increment / decrement each cell by: <input type=\"number\" value=\"1\">'\n\t\t\t);\n\t\t},\n\n\t\texecute: function ( dt, cells, node ) {\n\t\t\tvar value = cells[0][0].data * 1;\n\t\t\tvar increment = $('input', node).val() * 1;\n\n\t\t\tfor ( var i=0, ien=cells.length ; i<ien ; i++ ) {\n\t\t\t\tfor ( var j=0, jen=cells[i].length ; j<jen ; j++ ) {\n\t\t\t\t\tcells[i][j].set = value;\n\n\t\t\t\t\tvalue += increment;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tfill: {\n\t\tavailable: function ( dt, cells ) {\n\t\t\treturn true;\n\t\t},\n\n\t\toption: function ( dt, cells ) {\n\t\t\treturn dt.i18n('autoFill.fill', 'Fill all cells with <i>'+cells[0][0].label+'</i>' );\n\t\t},\n\n\t\texecute: function ( dt, cells, node ) {\n\t\t\tvar value = cells[0][0].data;\n\n\t\t\tfor ( var i=0, ien=cells.length ; i<ien ; i++ ) {\n\t\t\t\tfor ( var j=0, jen=cells[i].length ; j<jen ; j++ ) {\n\t\t\t\t\tcells[i][j].set = value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tfillHorizontal: {\n\t\tavailable: function ( dt, cells ) {\n\t\t\treturn cells.length > 1 && cells[0].length > 1;\n\t\t},\n\n\t\toption: function ( dt, cells ) {\n\t\t\treturn dt.i18n('autoFill.fillHorizontal', 'Fill cells horizontally' );\n\t\t},\n\n\t\texecute: function ( dt, cells, node ) {\n\t\t\tfor ( var i=0, ien=cells.length ; i<ien ; i++ ) {\n\t\t\t\tfor ( var j=0, jen=cells[i].length ; j<jen ; j++ ) {\n\t\t\t\t\tcells[i][j].set = cells[i][0].data;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tfillVertical: {\n\t\tavailable: function ( dt, cells ) {\n\t\t\treturn cells.length > 1 && cells[0].length > 1;\n\t\t},\n\n\t\toption: function ( dt, cells ) {\n\t\t\treturn dt.i18n('autoFill.fillVertical', 'Fill cells vertically' );\n\t\t},\n\n\t\texecute: function ( dt, cells, node ) {\n\t\t\tfor ( var i=0, ien=cells.length ; i<ien ; i++ ) {\n\t\t\t\tfor ( var j=0, jen=cells[i].length ; j<jen ; j++ ) {\n\t\t\t\t\tcells[i][j].set = cells[0][j].data;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// Special type that does not make itself available, but is added\n\t// automatically by AutoFill if a multi-choice list is shown. This allows\n\t// sensible code reuse\n\tcancel: {\n\t\tavailable: function () {\n\t\t\treturn false;\n\t\t},\n\n\t\toption: function ( dt ) {\n\t\t\treturn dt.i18n('autoFill.cancel', 'Cancel' );\n\t\t},\n\n\t\texecute: function () {\n\t\t\treturn false;\n\t\t}\n\t}\n};\n\n\n/**\n * AutoFill version\n * \n * @static\n * @type      String\n */\nAutoFill.version = '2.3.2';\n\n\n/**\n * AutoFill defaults\n * \n * @namespace\n */\nAutoFill.defaults = {\n\t/** @type {Boolean} Ask user what they want to do, even for a single option */\n\talwaysAsk: false,\n\n\t/** @type {string|null} What will trigger a focus */\n\tfocus: null, // focus, click, hover\n\n\t/** @type {column-selector} Columns to provide auto fill for */\n\tcolumns: '', // all\n\n\t/** @type {Boolean} Enable AutoFill on load */\n\tenable: true,\n\n\t/** @type {boolean|null} Update the cells after a drag */\n\tupdate: null, // false is editor given, true otherwise\n\n\t/** @type {DataTable.Editor} Editor instance for automatic submission */\n\teditor: null,\n\n\t/** @type {boolean} Enable vertical fill */\n\tvertical: true,\n\n\t/** @type {boolean} Enable horizontal fill */\n\thorizontal: true\n};\n\n\n/**\n * Classes used by AutoFill that are configurable\n * \n * @namespace\n */\nAutoFill.classes = {\n\t/** @type {String} Class used by the selection button */\n\tbtn: 'btn'\n};\n\n\n/*\n * API\n */\nvar Api = $.fn.dataTable.Api;\n\n// Doesn't do anything - Not documented\nApi.register( 'autoFill()', function () {\n\treturn this;\n} );\n\nApi.register( 'autoFill().enabled()', function () {\n\tvar ctx = this.context[0];\n\n\treturn ctx.autoFill ?\n\t\tctx.autoFill.enabled() :\n\t\tfalse;\n} );\n\nApi.register( 'autoFill().enable()', function ( flag ) {\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\tif ( ctx.autoFill ) {\n\t\t\tctx.autoFill.enable( flag );\n\t\t}\n\t} );\n} );\n\nApi.register( 'autoFill().disable()', function () {\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\tif ( ctx.autoFill ) {\n\t\t\tctx.autoFill.disable();\n\t\t}\n\t} );\n} );\n\n\n// Attach a listener to the document which listens for DataTables initialisation\n// events so we can automatically initialise\n$(document).on( 'preInit.dt.autofill', function (e, settings, json) {\n\tif ( e.namespace !== 'dt' ) {\n\t\treturn;\n\t}\n\n\tvar init = settings.oInit.autoFill;\n\tvar defaults = DataTable.defaults.autoFill;\n\n\tif ( init || defaults ) {\n\t\tvar opts = $.extend( {}, init, defaults );\n\n\t\tif ( init !== false ) {\n\t\t\tnew AutoFill( settings, opts  );\n\t\t}\n\t}\n} );\n\n\n// Alias for access\nDataTable.AutoFill = AutoFill;\nDataTable.AutoFill = AutoFill;\n\n\nreturn AutoFill;\n}));\n\n\n/*! Responsive 2.2.2\n * 2014-2018 SpryMedia Ltd - datatables.net/license\n */\n\n/**\n * @summary     Responsive\n * @description Responsive tables plug-in for DataTables\n * @version     2.2.2\n * @file        dataTables.responsive.js\n * @author      SpryMedia Ltd (www.sprymedia.co.uk)\n * @contact     www.sprymedia.co.uk/contact\n * @copyright   Copyright 2014-2018 SpryMedia Ltd.\n *\n * This source file is free software, available under the following license:\n *   MIT license - http://datatables.net/license/mit\n *\n * This source file is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n *\n * For details please refer to: http://www.datatables.net\n */\n(function( factory ){\n\tif ( typeof define === 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( ['jquery', 'datatables.net'], function ( $ ) {\n\t\t\treturn factory( $, window, document );\n\t\t} );\n\t}\n\telse if ( typeof exports === 'object' ) {\n\t\t// CommonJS\n\t\tmodule.exports = function (root, $) {\n\t\t\tif ( ! root ) {\n\t\t\t\troot = window;\n\t\t\t}\n\n\t\t\tif ( ! $ || ! $.fn.dataTable ) {\n\t\t\t\t$ = require('datatables.net')(root, $).$;\n\t\t\t}\n\n\t\t\treturn factory( $, root, root.document );\n\t\t};\n\t}\n\telse {\n\t\t// Browser\n\t\tfactory( jQuery, window, document );\n\t}\n}(function( $, window, document, undefined ) {\n'use strict';\nvar DataTable = $.fn.dataTable;\n\n\n/**\n * Responsive is a plug-in for the DataTables library that makes use of\n * DataTables' ability to change the visibility of columns, changing the\n * visibility of columns so the displayed columns fit into the table container.\n * The end result is that complex tables will be dynamically adjusted to fit\n * into the viewport, be it on a desktop, tablet or mobile browser.\n *\n * Responsive for DataTables has two modes of operation, which can used\n * individually or combined:\n *\n * * Class name based control - columns assigned class names that match the\n *   breakpoint logic can be shown / hidden as required for each breakpoint.\n * * Automatic control - columns are automatically hidden when there is no\n *   room left to display them. Columns removed from the right.\n *\n * In additional to column visibility control, Responsive also has built into\n * options to use DataTables' child row display to show / hide the information\n * from the table that has been hidden. There are also two modes of operation\n * for this child row display:\n *\n * * Inline - when the control element that the user can use to show / hide\n *   child rows is displayed inside the first column of the table.\n * * Column - where a whole column is dedicated to be the show / hide control.\n *\n * Initialisation of Responsive is performed by:\n *\n * * Adding the class `responsive` or `dt-responsive` to the table. In this case\n *   Responsive will automatically be initialised with the default configuration\n *   options when the DataTable is created.\n * * Using the `responsive` option in the DataTables configuration options. This\n *   can also be used to specify the configuration options, or simply set to\n *   `true` to use the defaults.\n *\n *  @class\n *  @param {object} settings DataTables settings object for the host table\n *  @param {object} [opts] Configuration options\n *  @requires jQuery 1.7+\n *  @requires DataTables 1.10.3+\n *\n *  @example\n *      $('#example').DataTable( {\n *        responsive: true\n *      } );\n *    } );\n */\nvar Responsive = function ( settings, opts ) {\n\t// Sanity check that we are using DataTables 1.10 or newer\n\tif ( ! DataTable.versionCheck || ! DataTable.versionCheck( '1.10.10' ) ) {\n\t\tthrow 'DataTables Responsive requires DataTables 1.10.10 or newer';\n\t}\n\n\tthis.s = {\n\t\tdt: new DataTable.Api( settings ),\n\t\tcolumns: [],\n\t\tcurrent: []\n\t};\n\n\t// Check if responsive has already been initialised on this table\n\tif ( this.s.dt.settings()[0].responsive ) {\n\t\treturn;\n\t}\n\n\t// details is an object, but for simplicity the user can give it as a string\n\t// or a boolean\n\tif ( opts && typeof opts.details === 'string' ) {\n\t\topts.details = { type: opts.details };\n\t}\n\telse if ( opts && opts.details === false ) {\n\t\topts.details = { type: false };\n\t}\n\telse if ( opts && opts.details === true ) {\n\t\topts.details = { type: 'inline' };\n\t}\n\n\tthis.c = $.extend( true, {}, Responsive.defaults, DataTable.defaults.responsive, opts );\n\tsettings.responsive = this;\n\tthis._constructor();\n};\n\n$.extend( Responsive.prototype, {\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Constructor\n\t */\n\n\t/**\n\t * Initialise the Responsive instance\n\t *\n\t * @private\n\t */\n\t_constructor: function ()\n\t{\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar dtPrivateSettings = dt.settings()[0];\n\t\tvar oldWindowWidth = $(window).width();\n\n\t\tdt.settings()[0]._responsive = this;\n\n\t\t// Use DataTables' throttle function to avoid processor thrashing on\n\t\t// resize\n\t\t$(window).on( 'resize.dtr orientationchange.dtr', DataTable.util.throttle( function () {\n\t\t\t// iOS has a bug whereby resize can fire when only scrolling\n\t\t\t// See: http://stackoverflow.com/questions/8898412\n\t\t\tvar width = $(window).width();\n\n\t\t\tif ( width !== oldWindowWidth ) {\n\t\t\t\tthat._resize();\n\t\t\t\toldWindowWidth = width;\n\t\t\t}\n\t\t} ) );\n\n\t\t// DataTables doesn't currently trigger an event when a row is added, so\n\t\t// we need to hook into its private API to enforce the hidden rows when\n\t\t// new data is added\n\t\tdtPrivateSettings.oApi._fnCallbackReg( dtPrivateSettings, 'aoRowCreatedCallback', function (tr, data, idx) {\n\t\t\tif ( $.inArray( false, that.s.current ) !== -1 ) {\n\t\t\t\t$('>td, >th', tr).each( function ( i ) {\n\t\t\t\t\tvar idx = dt.column.index( 'toData', i );\n\n\t\t\t\t\tif ( that.s.current[idx] === false ) {\n\t\t\t\t\t\t$(this).css('display', 'none');\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\n\t\t// Destroy event handler\n\t\tdt.on( 'destroy.dtr', function () {\n\t\t\tdt.off( '.dtr' );\n\t\t\t$( dt.table().body() ).off( '.dtr' );\n\t\t\t$(window).off( 'resize.dtr orientationchange.dtr' );\n\n\t\t\t// Restore the columns that we've hidden\n\t\t\t$.each( that.s.current, function ( i, val ) {\n\t\t\t\tif ( val === false ) {\n\t\t\t\t\tthat._setColumnVis( i, true );\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\n\t\t// Reorder the breakpoints array here in case they have been added out\n\t\t// of order\n\t\tthis.c.breakpoints.sort( function (a, b) {\n\t\t\treturn a.width < b.width ? 1 :\n\t\t\t\ta.width > b.width ? -1 : 0;\n\t\t} );\n\n\t\tthis._classLogic();\n\t\tthis._resizeAuto();\n\n\t\t// Details handler\n\t\tvar details = this.c.details;\n\n\t\tif ( details.type !== false ) {\n\t\t\tthat._detailsInit();\n\n\t\t\t// DataTables will trigger this event on every column it shows and\n\t\t\t// hides individually\n\t\t\tdt.on( 'column-visibility.dtr', function () {\n\t\t\t\t// Use a small debounce to allow multiple columns to be set together\n\t\t\t\tif ( that._timer ) {\n\t\t\t\t\tclearTimeout( that._timer );\n\t\t\t\t}\n\n\t\t\t\tthat._timer = setTimeout( function () {\n\t\t\t\t\tthat._timer = null;\n\n\t\t\t\t\tthat._classLogic();\n\t\t\t\t\tthat._resizeAuto();\n\t\t\t\t\tthat._resize();\n\n\t\t\t\t\tthat._redrawChildren();\n\t\t\t\t}, 100 );\n\t\t\t} );\n\n\t\t\t// Redraw the details box on each draw which will happen if the data\n\t\t\t// has changed. This is used until DataTables implements a native\n\t\t\t// `updated` event for rows\n\t\t\tdt.on( 'draw.dtr', function () {\n\t\t\t\tthat._redrawChildren();\n\t\t\t} );\n\n\t\t\t$(dt.table().node()).addClass( 'dtr-'+details.type );\n\t\t}\n\n\t\tdt.on( 'column-reorder.dtr', function (e, settings, details) {\n\t\t\tthat._classLogic();\n\t\t\tthat._resizeAuto();\n\t\t\tthat._resize();\n\t\t} );\n\n\t\t// Change in column sizes means we need to calc\n\t\tdt.on( 'column-sizing.dtr', function () {\n\t\t\tthat._resizeAuto();\n\t\t\tthat._resize();\n\t\t});\n\n\t\t// On Ajax reload we want to reopen any child rows which are displayed\n\t\t// by responsive\n\t\tdt.on( 'preXhr.dtr', function () {\n\t\t\tvar rowIds = [];\n\t\t\tdt.rows().every( function () {\n\t\t\t\tif ( this.child.isShown() ) {\n\t\t\t\t\trowIds.push( this.id(true) );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tdt.one( 'draw.dtr', function () {\n\t\t\t\tthat._resizeAuto();\n\t\t\t\tthat._resize();\n\n\t\t\t\tdt.rows( rowIds ).every( function () {\n\t\t\t\t\tthat._detailsDisplay( this, false );\n\t\t\t\t} );\n\t\t\t} );\n\t\t});\n\n\t\tdt.on( 'init.dtr', function (e, settings, details) {\n\t\t\tthat._resizeAuto();\n\t\t\tthat._resize();\n\n\t\t\t// If columns were hidden, then DataTables needs to adjust the\n\t\t\t// column sizing\n\t\t\tif ( $.inArray( false, that.s.current ) ) {\n\t\t\t\tdt.columns.adjust();\n\t\t\t}\n\t\t} );\n\n\t\t// First pass - draw the table for the current viewport size\n\t\tthis._resize();\n\t},\n\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Private methods\n\t */\n\n\t/**\n\t * Calculate the visibility for the columns in a table for a given\n\t * breakpoint. The result is pre-determined based on the class logic if\n\t * class names are used to control all columns, but the width of the table\n\t * is also used if there are columns which are to be automatically shown\n\t * and hidden.\n\t *\n\t * @param  {string} breakpoint Breakpoint name to use for the calculation\n\t * @return {array} Array of boolean values initiating the visibility of each\n\t *   column.\n\t *  @private\n\t */\n\t_columnsVisiblity: function ( breakpoint )\n\t{\n\t\tvar dt = this.s.dt;\n\t\tvar columns = this.s.columns;\n\t\tvar i, ien;\n\n\t\t// Create an array that defines the column ordering based first on the\n\t\t// column's priority, and secondly the column index. This allows the\n\t\t// columns to be removed from the right if the priority matches\n\t\tvar order = columns\n\t\t\t.map( function ( col, idx ) {\n\t\t\t\treturn {\n\t\t\t\t\tcolumnIdx: idx,\n\t\t\t\t\tpriority: col.priority\n\t\t\t\t};\n\t\t\t} )\n\t\t\t.sort( function ( a, b ) {\n\t\t\t\tif ( a.priority !== b.priority ) {\n\t\t\t\t\treturn a.priority - b.priority;\n\t\t\t\t}\n\t\t\t\treturn a.columnIdx - b.columnIdx;\n\t\t\t} );\n\n\t\t// Class logic - determine which columns are in this breakpoint based\n\t\t// on the classes. If no class control (i.e. `auto`) then `-` is used\n\t\t// to indicate this to the rest of the function\n\t\tvar display = $.map( columns, function ( col, i ) {\n\t\t\tif ( dt.column(i).visible() === false ) {\n\t\t\t\treturn 'not-visible';\n\t\t\t}\n\t\t\treturn col.auto && col.minWidth === null ?\n\t\t\t\tfalse :\n\t\t\t\tcol.auto === true ?\n\t\t\t\t\t'-' :\n\t\t\t\t\t$.inArray( breakpoint, col.includeIn ) !== -1;\n\t\t} );\n\n\t\t// Auto column control - first pass: how much width is taken by the\n\t\t// ones that must be included from the non-auto columns\n\t\tvar requiredWidth = 0;\n\t\tfor ( i=0, ien=display.length ; i<ien ; i++ ) {\n\t\t\tif ( display[i] === true ) {\n\t\t\t\trequiredWidth += columns[i].minWidth;\n\t\t\t}\n\t\t}\n\n\t\t// Second pass, use up any remaining width for other columns. For\n\t\t// scrolling tables we need to subtract the width of the scrollbar. It\n\t\t// may not be requires which makes this sub-optimal, but it would\n\t\t// require another full redraw to make complete use of those extra few\n\t\t// pixels\n\t\tvar scrolling = dt.settings()[0].oScroll;\n\t\tvar bar = scrolling.sY || scrolling.sX ? scrolling.iBarWidth : 0;\n\t\tvar widthAvailable = dt.table().container().offsetWidth - bar;\n\t\tvar usedWidth = widthAvailable - requiredWidth;\n\n\t\t// Control column needs to always be included. This makes it sub-\n\t\t// optimal in terms of using the available with, but to stop layout\n\t\t// thrashing or overflow. Also we need to account for the control column\n\t\t// width first so we know how much width is available for the other\n\t\t// columns, since the control column might not be the first one shown\n\t\tfor ( i=0, ien=display.length ; i<ien ; i++ ) {\n\t\t\tif ( columns[i].control ) {\n\t\t\t\tusedWidth -= columns[i].minWidth;\n\t\t\t}\n\t\t}\n\n\t\t// Allow columns to be shown (counting by priority and then right to\n\t\t// left) until we run out of room\n\t\tvar empty = false;\n\t\tfor ( i=0, ien=order.length ; i<ien ; i++ ) {\n\t\t\tvar colIdx = order[i].columnIdx;\n\n\t\t\tif ( display[colIdx] === '-' && ! columns[colIdx].control && columns[colIdx].minWidth ) {\n\t\t\t\t// Once we've found a column that won't fit we don't let any\n\t\t\t\t// others display either, or columns might disappear in the\n\t\t\t\t// middle of the table\n\t\t\t\tif ( empty || usedWidth - columns[colIdx].minWidth < 0 ) {\n\t\t\t\t\tempty = true;\n\t\t\t\t\tdisplay[colIdx] = false;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdisplay[colIdx] = true;\n\t\t\t\t}\n\n\t\t\t\tusedWidth -= columns[colIdx].minWidth;\n\t\t\t}\n\t\t}\n\n\t\t// Determine if the 'control' column should be shown (if there is one).\n\t\t// This is the case when there is a hidden column (that is not the\n\t\t// control column). The two loops look inefficient here, but they are\n\t\t// trivial and will fly through. We need to know the outcome from the\n\t\t// first , before the action in the second can be taken\n\t\tvar showControl = false;\n\n\t\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\t\tif ( ! columns[i].control && ! columns[i].never && display[i] === false ) {\n\t\t\t\tshowControl = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\t\tif ( columns[i].control ) {\n\t\t\t\tdisplay[i] = showControl;\n\t\t\t}\n\n\t\t\t// Replace not visible string with false from the control column detection above\n\t\t\tif ( display[i] === 'not-visible' ) {\n\t\t\t\tdisplay[i] = false;\n\t\t\t}\n\t\t}\n\n\t\t// Finally we need to make sure that there is at least one column that\n\t\t// is visible\n\t\tif ( $.inArray( true, display ) === -1 ) {\n\t\t\tdisplay[0] = true;\n\t\t}\n\n\t\treturn display;\n\t},\n\n\n\t/**\n\t * Create the internal `columns` array with information about the columns\n\t * for the table. This includes determining which breakpoints the column\n\t * will appear in, based upon class names in the column, which makes up the\n\t * vast majority of this method.\n\t *\n\t * @private\n\t */\n\t_classLogic: function ()\n\t{\n\t\tvar that = this;\n\t\tvar calc = {};\n\t\tvar breakpoints = this.c.breakpoints;\n\t\tvar dt = this.s.dt;\n\t\tvar columns = dt.columns().eq(0).map( function (i) {\n\t\t\tvar column = this.column(i);\n\t\t\tvar className = column.header().className;\n\t\t\tvar priority = dt.settings()[0].aoColumns[i].responsivePriority;\n\n\t\t\tif ( priority === undefined ) {\n\t\t\t\tvar dataPriority = $(column.header()).data('priority');\n\n\t\t\t\tpriority = dataPriority !== undefined ?\n\t\t\t\t\tdataPriority * 1 :\n\t\t\t\t\t10000;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tclassName: className,\n\t\t\t\tincludeIn: [],\n\t\t\t\tauto:      false,\n\t\t\t\tcontrol:   false,\n\t\t\t\tnever:     className.match(/\\bnever\\b/) ? true : false,\n\t\t\t\tpriority:  priority\n\t\t\t};\n\t\t} );\n\n\t\t// Simply add a breakpoint to `includeIn` array, ensuring that there are\n\t\t// no duplicates\n\t\tvar add = function ( colIdx, name ) {\n\t\t\tvar includeIn = columns[ colIdx ].includeIn;\n\n\t\t\tif ( $.inArray( name, includeIn ) === -1 ) {\n\t\t\t\tincludeIn.push( name );\n\t\t\t}\n\t\t};\n\n\t\tvar column = function ( colIdx, name, operator, matched ) {\n\t\t\tvar size, i, ien;\n\n\t\t\tif ( ! operator ) {\n\t\t\t\tcolumns[ colIdx ].includeIn.push( name );\n\t\t\t}\n\t\t\telse if ( operator === 'max-' ) {\n\t\t\t\t// Add this breakpoint and all smaller\n\t\t\t\tsize = that._find( name ).width;\n\n\t\t\t\tfor ( i=0, ien=breakpoints.length ; i<ien ; i++ ) {\n\t\t\t\t\tif ( breakpoints[i].width <= size ) {\n\t\t\t\t\t\tadd( colIdx, breakpoints[i].name );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( operator === 'min-' ) {\n\t\t\t\t// Add this breakpoint and all larger\n\t\t\t\tsize = that._find( name ).width;\n\n\t\t\t\tfor ( i=0, ien=breakpoints.length ; i<ien ; i++ ) {\n\t\t\t\t\tif ( breakpoints[i].width >= size ) {\n\t\t\t\t\t\tadd( colIdx, breakpoints[i].name );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( operator === 'not-' ) {\n\t\t\t\t// Add all but this breakpoint\n\t\t\t\tfor ( i=0, ien=breakpoints.length ; i<ien ; i++ ) {\n\t\t\t\t\tif ( breakpoints[i].name.indexOf( matched ) === -1 ) {\n\t\t\t\t\t\tadd( colIdx, breakpoints[i].name );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// Loop over each column and determine if it has a responsive control\n\t\t// class\n\t\tcolumns.each( function ( col, i ) {\n\t\t\tvar classNames = col.className.split(' ');\n\t\t\tvar hasClass = false;\n\n\t\t\t// Split the class name up so multiple rules can be applied if needed\n\t\t\tfor ( var k=0, ken=classNames.length ; k<ken ; k++ ) {\n\t\t\t\tvar className = $.trim( classNames[k] );\n\n\t\t\t\tif ( className === 'all' ) {\n\t\t\t\t\t// Include in all\n\t\t\t\t\thasClass = true;\n\t\t\t\t\tcol.includeIn = $.map( breakpoints, function (a) {\n\t\t\t\t\t\treturn a.name;\n\t\t\t\t\t} );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\telse if ( className === 'none' || col.never ) {\n\t\t\t\t\t// Include in none (default) and no auto\n\t\t\t\t\thasClass = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\telse if ( className === 'control' ) {\n\t\t\t\t\t// Special column that is only visible, when one of the other\n\t\t\t\t\t// columns is hidden. This is used for the details control\n\t\t\t\t\thasClass = true;\n\t\t\t\t\tcol.control = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t$.each( breakpoints, function ( j, breakpoint ) {\n\t\t\t\t\t// Does this column have a class that matches this breakpoint?\n\t\t\t\t\tvar brokenPoint = breakpoint.name.split('-');\n\t\t\t\t\tvar re = new RegExp( '(min\\\\-|max\\\\-|not\\\\-)?('+brokenPoint[0]+')(\\\\-[_a-zA-Z0-9])?' );\n\t\t\t\t\tvar match = className.match( re );\n\n\t\t\t\t\tif ( match ) {\n\t\t\t\t\t\thasClass = true;\n\n\t\t\t\t\t\tif ( match[2] === brokenPoint[0] && match[3] === '-'+brokenPoint[1] ) {\n\t\t\t\t\t\t\t// Class name matches breakpoint name fully\n\t\t\t\t\t\t\tcolumn( i, breakpoint.name, match[1], match[2]+match[3] );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( match[2] === brokenPoint[0] && ! match[3] ) {\n\t\t\t\t\t\t\t// Class name matched primary breakpoint name with no qualifier\n\t\t\t\t\t\t\tcolumn( i, breakpoint.name, match[1], match[2] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t// If there was no control class, then automatic sizing is used\n\t\t\tif ( ! hasClass ) {\n\t\t\t\tcol.auto = true;\n\t\t\t}\n\t\t} );\n\n\t\tthis.s.columns = columns;\n\t},\n\n\n\t/**\n\t * Show the details for the child row\n\t *\n\t * @param  {DataTables.Api} row    API instance for the row\n\t * @param  {boolean}        update Update flag\n\t * @private\n\t */\n\t_detailsDisplay: function ( row, update )\n\t{\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar details = this.c.details;\n\n\t\tif ( details && details.type !== false ) {\n\t\t\tvar res = details.display( row, update, function () {\n\t\t\t\treturn details.renderer(\n\t\t\t\t\tdt, row[0], that._detailsObj(row[0])\n\t\t\t\t);\n\t\t\t} );\n\n\t\t\tif ( res === true || res === false ) {\n\t\t\t\t$(dt.table().node()).triggerHandler( 'responsive-display.dt', [dt, row, res, update] );\n\t\t\t}\n\t\t}\n\t},\n\n\n\t/**\n\t * Initialisation for the details handler\n\t *\n\t * @private\n\t */\n\t_detailsInit: function ()\n\t{\n\t\tvar that    = this;\n\t\tvar dt      = this.s.dt;\n\t\tvar details = this.c.details;\n\n\t\t// The inline type always uses the first child as the target\n\t\tif ( details.type === 'inline' ) {\n\t\t\tdetails.target = 'td:first-child, th:first-child';\n\t\t}\n\n\t\t// Keyboard accessibility\n\t\tdt.on( 'draw.dtr', function () {\n\t\t\tthat._tabIndexes();\n\t\t} );\n\t\tthat._tabIndexes(); // Initial draw has already happened\n\n\t\t$( dt.table().body() ).on( 'keyup.dtr', 'td, th', function (e) {\n\t\t\tif ( e.keyCode === 13 && $(this).data('dtr-keyboard') ) {\n\t\t\t\t$(this).click();\n\t\t\t}\n\t\t} );\n\n\t\t// type.target can be a string jQuery selector or a column index\n\t\tvar target   = details.target;\n\t\tvar selector = typeof target === 'string' ? target : 'td, th';\n\n\t\t// Click handler to show / hide the details rows when they are available\n\t\t$( dt.table().body() )\n\t\t\t.on( 'click.dtr mousedown.dtr mouseup.dtr', selector, function (e) {\n\t\t\t\t// If the table is not collapsed (i.e. there is no hidden columns)\n\t\t\t\t// then take no action\n\t\t\t\tif ( ! $(dt.table().node()).hasClass('collapsed' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Check that the row is actually a DataTable's controlled node\n\t\t\t\tif ( $.inArray( $(this).closest('tr').get(0), dt.rows().nodes().toArray() ) === -1 ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// For column index, we determine if we should act or not in the\n\t\t\t\t// handler - otherwise it is already okay\n\t\t\t\tif ( typeof target === 'number' ) {\n\t\t\t\t\tvar targetIdx = target < 0 ?\n\t\t\t\t\t\tdt.columns().eq(0).length + target :\n\t\t\t\t\t\ttarget;\n\n\t\t\t\t\tif ( dt.cell( this ).index().column !== targetIdx ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// $().closest() includes itself in its check\n\t\t\t\tvar row = dt.row( $(this).closest('tr') );\n\n\t\t\t\t// Check event type to do an action\n\t\t\t\tif ( e.type === 'click' ) {\n\t\t\t\t\t// The renderer is given as a function so the caller can execute it\n\t\t\t\t\t// only when they need (i.e. if hiding there is no point is running\n\t\t\t\t\t// the renderer)\n\t\t\t\t\tthat._detailsDisplay( row, false );\n\t\t\t\t}\n\t\t\t\telse if ( e.type === 'mousedown' ) {\n\t\t\t\t\t// For mouse users, prevent the focus ring from showing\n\t\t\t\t\t$(this).css('outline', 'none');\n\t\t\t\t}\n\t\t\t\telse if ( e.type === 'mouseup' ) {\n\t\t\t\t\t// And then re-allow at the end of the click\n\t\t\t\t\t$(this).blur().css('outline', '');\n\t\t\t\t}\n\t\t\t} );\n\t},\n\n\n\t/**\n\t * Get the details to pass to a renderer for a row\n\t * @param  {int} rowIdx Row index\n\t * @private\n\t */\n\t_detailsObj: function ( rowIdx )\n\t{\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\n\t\treturn $.map( this.s.columns, function( col, i ) {\n\t\t\t// Never and control columns should not be passed to the renderer\n\t\t\tif ( col.never || col.control ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\ttitle:       dt.settings()[0].aoColumns[ i ].sTitle,\n\t\t\t\tdata:        dt.cell( rowIdx, i ).render( that.c.orthogonal ),\n\t\t\t\thidden:      dt.column( i ).visible() && !that.s.current[ i ],\n\t\t\t\tcolumnIndex: i,\n\t\t\t\trowIndex:    rowIdx\n\t\t\t};\n\t\t} );\n\t},\n\n\n\t/**\n\t * Find a breakpoint object from a name\n\t *\n\t * @param  {string} name Breakpoint name to find\n\t * @return {object}      Breakpoint description object\n\t * @private\n\t */\n\t_find: function ( name )\n\t{\n\t\tvar breakpoints = this.c.breakpoints;\n\n\t\tfor ( var i=0, ien=breakpoints.length ; i<ien ; i++ ) {\n\t\t\tif ( breakpoints[i].name === name ) {\n\t\t\t\treturn breakpoints[i];\n\t\t\t}\n\t\t}\n\t},\n\n\n\t/**\n\t * Re-create the contents of the child rows as the display has changed in\n\t * some way.\n\t *\n\t * @private\n\t */\n\t_redrawChildren: function ()\n\t{\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\n\t\tdt.rows( {page: 'current'} ).iterator( 'row', function ( settings, idx ) {\n\t\t\tvar row = dt.row( idx );\n\n\t\t\tthat._detailsDisplay( dt.row( idx ), true );\n\t\t} );\n\t},\n\n\n\t/**\n\t * Alter the table display for a resized viewport. This involves first\n\t * determining what breakpoint the window currently is in, getting the\n\t * column visibilities to apply and then setting them.\n\t *\n\t * @private\n\t */\n\t_resize: function ()\n\t{\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar width = $(window).width();\n\t\tvar breakpoints = this.c.breakpoints;\n\t\tvar breakpoint = breakpoints[0].name;\n\t\tvar columns = this.s.columns;\n\t\tvar i, ien;\n\t\tvar oldVis = this.s.current.slice();\n\n\t\t// Determine what breakpoint we are currently at\n\t\tfor ( i=breakpoints.length-1 ; i>=0 ; i-- ) {\n\t\t\tif ( width <= breakpoints[i].width ) {\n\t\t\t\tbreakpoint = breakpoints[i].name;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Show the columns for that break point\n\t\tvar columnsVis = this._columnsVisiblity( breakpoint );\n\t\tthis.s.current = columnsVis;\n\n\t\t// Set the class before the column visibility is changed so event\n\t\t// listeners know what the state is. Need to determine if there are\n\t\t// any columns that are not visible but can be shown\n\t\tvar collapsedClass = false;\n\t\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\t\tif ( columnsVis[i] === false && ! columns[i].never && ! columns[i].control && ! dt.column(i).visible() === false ) {\n\t\t\t\tcollapsedClass = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t$( dt.table().node() ).toggleClass( 'collapsed', collapsedClass );\n\n\t\tvar changed = false;\n\t\tvar visible = 0;\n\n\t\tdt.columns().eq(0).each( function ( colIdx, i ) {\n\t\t\tif ( columnsVis[i] === true ) {\n\t\t\t\tvisible++;\n\t\t\t}\n\n\t\t\tif ( columnsVis[i] !== oldVis[i] ) {\n\t\t\t\tchanged = true;\n\t\t\t\tthat._setColumnVis( colIdx, columnsVis[i] );\n\t\t\t}\n\t\t} );\n\n\t\tif ( changed ) {\n\t\t\tthis._redrawChildren();\n\n\t\t\t// Inform listeners of the change\n\t\t\t$(dt.table().node()).trigger( 'responsive-resize.dt', [dt, this.s.current] );\n\n\t\t\t// If no records, update the \"No records\" display element\n\t\t\tif ( dt.page.info().recordsDisplay === 0 ) {\n\t\t\t\t$('td', dt.table().body()).eq(0).attr('colspan', visible);\n\t\t\t}\n\t\t}\n\t},\n\n\n\t/**\n\t * Determine the width of each column in the table so the auto column hiding\n\t * has that information to work with. This method is never going to be 100%\n\t * perfect since column widths can change slightly per page, but without\n\t * seriously compromising performance this is quite effective.\n\t *\n\t * @private\n\t */\n\t_resizeAuto: function ()\n\t{\n\t\tvar dt = this.s.dt;\n\t\tvar columns = this.s.columns;\n\n\t\t// Are we allowed to do auto sizing?\n\t\tif ( ! this.c.auto ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Are there any columns that actually need auto-sizing, or do they all\n\t\t// have classes defined\n\t\tif ( $.inArray( true, $.map( columns, function (c) { return c.auto; } ) ) === -1 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Need to restore all children. They will be reinstated by a re-render\n\t\tif ( ! $.isEmptyObject( _childNodeStore ) ) {\n\t\t\t$.each( _childNodeStore, function ( key ) {\n\t\t\t\tvar idx = key.split('-');\n\n\t\t\t\t_childNodesRestore( dt, idx[0]*1, idx[1]*1 );\n\t\t\t} );\n\t\t}\n\n\t\t// Clone the table with the current data in it\n\t\tvar tableWidth   = dt.table().node().offsetWidth;\n\t\tvar columnWidths = dt.columns;\n\t\tvar clonedTable  = dt.table().node().cloneNode( false );\n\t\tvar clonedHeader = $( dt.table().header().cloneNode( false ) ).appendTo( clonedTable );\n\t\tvar clonedBody   = $( dt.table().body() ).clone( false, false ).empty().appendTo( clonedTable ); // use jQuery because of IE8\n\n\t\t// Header\n\t\tvar headerCells = dt.columns()\n\t\t\t.header()\n\t\t\t.filter( function (idx) {\n\t\t\t\treturn dt.column(idx).visible();\n\t\t\t} )\n\t\t\t.to$()\n\t\t\t.clone( false )\n\t\t\t.css( 'display', 'table-cell' )\n\t\t\t.css( 'min-width', 0 );\n\n\t\t// Body rows - we don't need to take account of DataTables' column\n\t\t// visibility since we implement our own here (hence the `display` set)\n\t\t$(clonedBody)\n\t\t\t.append( $(dt.rows( { page: 'current' } ).nodes()).clone( false ) )\n\t\t\t.find( 'th, td' ).css( 'display', '' );\n\n\t\t// Footer\n\t\tvar footer = dt.table().footer();\n\t\tif ( footer ) {\n\t\t\tvar clonedFooter = $( footer.cloneNode( false ) ).appendTo( clonedTable );\n\t\t\tvar footerCells = dt.columns()\n\t\t\t\t.footer()\n\t\t\t\t.filter( function (idx) {\n\t\t\t\t\treturn dt.column(idx).visible();\n\t\t\t\t} )\n\t\t\t\t.to$()\n\t\t\t\t.clone( false )\n\t\t\t\t.css( 'display', 'table-cell' );\n\n\t\t\t$('<tr/>')\n\t\t\t\t.append( footerCells )\n\t\t\t\t.appendTo( clonedFooter );\n\t\t}\n\n\t\t$('<tr/>')\n\t\t\t.append( headerCells )\n\t\t\t.appendTo( clonedHeader );\n\n\t\t// In the inline case extra padding is applied to the first column to\n\t\t// give space for the show / hide icon. We need to use this in the\n\t\t// calculation\n\t\tif ( this.c.details.type === 'inline' ) {\n\t\t\t$(clonedTable).addClass( 'dtr-inline collapsed' );\n\t\t}\n\t\t\n\t\t// It is unsafe to insert elements with the same name into the DOM\n\t\t// multiple times. For example, cloning and inserting a checked radio\n\t\t// clears the chcecked state of the original radio.\n\t\t$( clonedTable ).find( '[name]' ).removeAttr( 'name' );\n\n\t\t// A position absolute table would take the table out of the flow of\n\t\t// our container element, bypassing the height and width (Scroller)\n\t\t$( clonedTable ).css( 'position', 'relative' )\n\t\t\n\t\tvar inserted = $('<div/>')\n\t\t\t.css( {\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1,\n\t\t\t\toverflow: 'hidden',\n\t\t\t\tclear: 'both'\n\t\t\t} )\n\t\t\t.append( clonedTable );\n\n\t\tinserted.insertBefore( dt.table().node() );\n\n\t\t// The cloned header now contains the smallest that each column can be\n\t\theaderCells.each( function (i) {\n\t\t\tvar idx = dt.column.index( 'fromVisible', i );\n\t\t\tcolumns[ idx ].minWidth =  this.offsetWidth || 0;\n\t\t} );\n\n\t\tinserted.remove();\n\t},\n\n\t/**\n\t * Set a column's visibility.\n\t *\n\t * We don't use DataTables' column visibility controls in order to ensure\n\t * that column visibility can Responsive can no-exist. Since only IE8+ is\n\t * supported (and all evergreen browsers of course) the control of the\n\t * display attribute works well.\n\t *\n\t * @param {integer} col      Column index\n\t * @param {boolean} showHide Show or hide (true or false)\n\t * @private\n\t */\n\t_setColumnVis: function ( col, showHide )\n\t{\n\t\tvar dt = this.s.dt;\n\t\tvar display = showHide ? '' : 'none'; // empty string will remove the attr\n\n\t\t$( dt.column( col ).header() ).css( 'display', display );\n\t\t$( dt.column( col ).footer() ).css( 'display', display );\n\t\tdt.column( col ).nodes().to$().css( 'display', display );\n\n\t\t// If the are child nodes stored, we might need to reinsert them\n\t\tif ( ! $.isEmptyObject( _childNodeStore ) ) {\n\t\t\tdt.cells( null, col ).indexes().each( function (idx) {\n\t\t\t\t_childNodesRestore( dt, idx.row, idx.column );\n\t\t\t} );\n\t\t}\n\t},\n\n\n\t/**\n\t * Update the cell tab indexes for keyboard accessibility. This is called on\n\t * every table draw - that is potentially inefficient, but also the least\n\t * complex option given that column visibility can change on the fly. Its a\n\t * shame user-focus was removed from CSS 3 UI, as it would have solved this\n\t * issue with a single CSS statement.\n\t *\n\t * @private\n\t */\n\t_tabIndexes: function ()\n\t{\n\t\tvar dt = this.s.dt;\n\t\tvar cells = dt.cells( { page: 'current' } ).nodes().to$();\n\t\tvar ctx = dt.settings()[0];\n\t\tvar target = this.c.details.target;\n\n\t\tcells.filter( '[data-dtr-keyboard]' ).removeData( '[data-dtr-keyboard]' );\n\n\t\tif ( typeof target === 'number' ) {\n\t\t\tdt.cells( null, target, { page: 'current' } ).nodes().to$()\n\t\t\t\t.attr( 'tabIndex', ctx.iTabIndex )\n\t\t\t\t.data( 'dtr-keyboard', 1 );\n\t\t}\n\t\telse {\n\t\t\t// This is a bit of a hack - we need to limit the selected nodes to just\n\t\t\t// those of this table\n\t\t\tif ( target === 'td:first-child, th:first-child' ) {\n\t\t\t\ttarget = '>td:first-child, >th:first-child';\n\t\t\t}\n\n\t\t\t$( target, dt.rows( { page: 'current' } ).nodes() )\n\t\t\t\t.attr( 'tabIndex', ctx.iTabIndex )\n\t\t\t\t.data( 'dtr-keyboard', 1 );\n\t\t}\n\t}\n} );\n\n\n/**\n * List of default breakpoints. Each item in the array is an object with two\n * properties:\n *\n * * `name` - the breakpoint name.\n * * `width` - the breakpoint width\n *\n * @name Responsive.breakpoints\n * @static\n */\nResponsive.breakpoints = [\n\t{ name: 'desktop',  width: Infinity },\n\t{ name: 'tablet-l', width: 1024 },\n\t{ name: 'tablet-p', width: 768 },\n\t{ name: 'mobile-l', width: 480 },\n\t{ name: 'mobile-p', width: 320 }\n];\n\n\n/**\n * Display methods - functions which define how the hidden data should be shown\n * in the table.\n *\n * @namespace\n * @name Responsive.defaults\n * @static\n */\nResponsive.display = {\n\tchildRow: function ( row, update, render ) {\n\t\tif ( update ) {\n\t\t\tif ( $(row.node()).hasClass('parent') ) {\n\t\t\t\trow.child( render(), 'child' ).show();\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif ( ! row.child.isShown()  ) {\n\t\t\t\trow.child( render(), 'child' ).show();\n\t\t\t\t$( row.node() ).addClass( 'parent' );\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\trow.child( false );\n\t\t\t\t$( row.node() ).removeClass( 'parent' );\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t},\n\n\tchildRowImmediate: function ( row, update, render ) {\n\t\tif ( (! update && row.child.isShown()) || ! row.responsive.hasHidden() ) {\n\t\t\t// User interaction and the row is show, or nothing to show\n\t\t\trow.child( false );\n\t\t\t$( row.node() ).removeClass( 'parent' );\n\n\t\t\treturn false;\n\t\t}\n\t\telse {\n\t\t\t// Display\n\t\t\trow.child( render(), 'child' ).show();\n\t\t\t$( row.node() ).addClass( 'parent' );\n\n\t\t\treturn true;\n\t\t}\n\t},\n\n\t// This is a wrapper so the modal options for Bootstrap and jQuery UI can\n\t// have options passed into them. This specific one doesn't need to be a\n\t// function but it is for consistency in the `modal` name\n\tmodal: function ( options ) {\n\t\treturn function ( row, update, render ) {\n\t\t\tif ( ! update ) {\n\t\t\t\t// Show a modal\n\t\t\t\tvar close = function () {\n\t\t\t\t\tmodal.remove(); // will tidy events for us\n\t\t\t\t\t$(document).off( 'keypress.dtr' );\n\t\t\t\t};\n\n\t\t\t\tvar modal = $('<div class=\"dtr-modal\"/>')\n\t\t\t\t\t.append( $('<div class=\"dtr-modal-display\"/>')\n\t\t\t\t\t\t.append( $('<div class=\"dtr-modal-content\"/>')\n\t\t\t\t\t\t\t.append( render() )\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.append( $('<div class=\"dtr-modal-close\">&times;</div>' )\n\t\t\t\t\t\t\t.click( function () {\n\t\t\t\t\t\t\t\tclose();\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t\t.append( $('<div class=\"dtr-modal-background\"/>')\n\t\t\t\t\t\t.click( function () {\n\t\t\t\t\t\t\tclose();\n\t\t\t\t\t\t} )\n\t\t\t\t\t)\n\t\t\t\t\t.appendTo( 'body' );\n\n\t\t\t\t$(document).on( 'keyup.dtr', function (e) {\n\t\t\t\t\tif ( e.keyCode === 27 ) {\n\t\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\t\tclose();\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$('div.dtr-modal-content')\n\t\t\t\t\t.empty()\n\t\t\t\t\t.append( render() );\n\t\t\t}\n\n\t\t\tif ( options && options.header ) {\n\t\t\t\t$('div.dtr-modal-content').prepend(\n\t\t\t\t\t'<h2>'+options.header( row )+'</h2>'\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\t}\n};\n\n\nvar _childNodeStore = {};\n\nfunction _childNodes( dt, row, col ) {\n\tvar name = row+'-'+col;\n\n\tif ( _childNodeStore[ name ] ) {\n\t\treturn _childNodeStore[ name ];\n\t}\n\n\t// https://jsperf.com/childnodes-array-slice-vs-loop\n\tvar nodes = [];\n\tvar children = dt.cell( row, col ).node().childNodes;\n\tfor ( var i=0, ien=children.length ; i<ien ; i++ ) {\n\t\tnodes.push( children[i] );\n\t}\n\n\t_childNodeStore[ name ] = nodes;\n\n\treturn nodes;\n}\n\nfunction _childNodesRestore( dt, row, col ) {\n\tvar name = row+'-'+col;\n\n\tif ( ! _childNodeStore[ name ] ) {\n\t\treturn;\n\t}\n\n\tvar node = dt.cell( row, col ).node();\n\tvar store = _childNodeStore[ name ];\n\tvar parent = store[0].parentNode;\n\tvar parentChildren = parent.childNodes;\n\tvar a = [];\n\n\tfor ( var i=0, ien=parentChildren.length ; i<ien ; i++ ) {\n\t\ta.push( parentChildren[i] );\n\t}\n\n\tfor ( var j=0, jen=a.length ; j<jen ; j++ ) {\n\t\tnode.appendChild( a[j] );\n\t}\n\n\t_childNodeStore[ name ] = undefined;\n}\n\n\n/**\n * Display methods - functions which define how the hidden data should be shown\n * in the table.\n *\n * @namespace\n * @name Responsive.defaults\n * @static\n */\nResponsive.renderer = {\n\tlistHiddenNodes: function () {\n\t\treturn function ( api, rowIdx, columns ) {\n\t\t\tvar ul = $('<ul data-dtr-index=\"'+rowIdx+'\" class=\"dtr-details\"/>');\n\t\t\tvar found = false;\n\n\t\t\tvar data = $.each( columns, function ( i, col ) {\n\t\t\t\tif ( col.hidden ) {\n\t\t\t\t\t$(\n\t\t\t\t\t\t'<li data-dtr-index=\"'+col.columnIndex+'\" data-dt-row=\"'+col.rowIndex+'\" data-dt-column=\"'+col.columnIndex+'\">'+\n\t\t\t\t\t\t\t'<span class=\"dtr-title\">'+\n\t\t\t\t\t\t\t\tcol.title+\n\t\t\t\t\t\t\t'</span> '+\n\t\t\t\t\t\t'</li>'\n\t\t\t\t\t)\n\t\t\t\t\t\t.append( $('<span class=\"dtr-data\"/>').append( _childNodes( api, col.rowIndex, col.columnIndex ) ) )// api.cell( col.rowIndex, col.columnIndex ).node().childNodes ) )\n\t\t\t\t\t\t.appendTo( ul );\n\n\t\t\t\t\tfound = true;\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\treturn found ?\n\t\t\t\tul :\n\t\t\t\tfalse;\n\t\t};\n\t},\n\n\tlistHidden: function () {\n\t\treturn function ( api, rowIdx, columns ) {\n\t\t\tvar data = $.map( columns, function ( col ) {\n\t\t\t\treturn col.hidden ?\n\t\t\t\t\t'<li data-dtr-index=\"'+col.columnIndex+'\" data-dt-row=\"'+col.rowIndex+'\" data-dt-column=\"'+col.columnIndex+'\">'+\n\t\t\t\t\t\t'<span class=\"dtr-title\">'+\n\t\t\t\t\t\t\tcol.title+\n\t\t\t\t\t\t'</span> '+\n\t\t\t\t\t\t'<span class=\"dtr-data\">'+\n\t\t\t\t\t\t\tcol.data+\n\t\t\t\t\t\t'</span>'+\n\t\t\t\t\t'</li>' :\n\t\t\t\t\t'';\n\t\t\t} ).join('');\n\n\t\t\treturn data ?\n\t\t\t\t$('<ul data-dtr-index=\"'+rowIdx+'\" class=\"dtr-details\"/>').append( data ) :\n\t\t\t\tfalse;\n\t\t}\n\t},\n\n\ttableAll: function ( options ) {\n\t\toptions = $.extend( {\n\t\t\ttableClass: ''\n\t\t}, options );\n\n\t\treturn function ( api, rowIdx, columns ) {\n\t\t\tvar data = $.map( columns, function ( col ) {\n\t\t\t\treturn '<tr data-dt-row=\"'+col.rowIndex+'\" data-dt-column=\"'+col.columnIndex+'\">'+\n\t\t\t\t\t\t'<td>'+col.title+':'+'</td> '+\n\t\t\t\t\t\t'<td>'+col.data+'</td>'+\n\t\t\t\t\t'</tr>';\n\t\t\t} ).join('');\n\n\t\t\treturn $('<table class=\"'+options.tableClass+' dtr-details\" width=\"100%\"/>').append( data );\n\t\t}\n\t}\n};\n\n/**\n * Responsive default settings for initialisation\n *\n * @namespace\n * @name Responsive.defaults\n * @static\n */\nResponsive.defaults = {\n\t/**\n\t * List of breakpoints for the instance. Note that this means that each\n\t * instance can have its own breakpoints. Additionally, the breakpoints\n\t * cannot be changed once an instance has been creased.\n\t *\n\t * @type {Array}\n\t * @default Takes the value of `Responsive.breakpoints`\n\t */\n\tbreakpoints: Responsive.breakpoints,\n\n\t/**\n\t * Enable / disable auto hiding calculations. It can help to increase\n\t * performance slightly if you disable this option, but all columns would\n\t * need to have breakpoint classes assigned to them\n\t *\n\t * @type {Boolean}\n\t * @default  `true`\n\t */\n\tauto: true,\n\n\t/**\n\t * Details control. If given as a string value, the `type` property of the\n\t * default object is set to that value, and the defaults used for the rest\n\t * of the object - this is for ease of implementation.\n\t *\n\t * The object consists of the following properties:\n\t *\n\t * * `display` - A function that is used to show and hide the hidden details\n\t * * `renderer` - function that is called for display of the child row data.\n\t *   The default function will show the data from the hidden columns\n\t * * `target` - Used as the selector for what objects to attach the child\n\t *   open / close to\n\t * * `type` - `false` to disable the details display, `inline` or `column`\n\t *   for the two control types\n\t *\n\t * @type {Object|string}\n\t */\n\tdetails: {\n\t\tdisplay: Responsive.display.childRow,\n\n\t\trenderer: Responsive.renderer.listHidden(),\n\n\t\ttarget: 0,\n\n\t\ttype: 'inline'\n\t},\n\n\t/**\n\t * Orthogonal data request option. This is used to define the data type\n\t * requested when Responsive gets the data to show in the child row.\n\t *\n\t * @type {String}\n\t */\n\torthogonal: 'display'\n};\n\n\n/*\n * API\n */\nvar Api = $.fn.dataTable.Api;\n\n// Doesn't do anything - work around for a bug in DT... Not documented\nApi.register( 'responsive()', function () {\n\treturn this;\n} );\n\nApi.register( 'responsive.index()', function ( li ) {\n\tli = $(li);\n\n\treturn {\n\t\tcolumn: li.data('dtr-index'),\n\t\trow:    li.parent().data('dtr-index')\n\t};\n} );\n\nApi.register( 'responsive.rebuild()', function () {\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\tif ( ctx._responsive ) {\n\t\t\tctx._responsive._classLogic();\n\t\t}\n\t} );\n} );\n\nApi.register( 'responsive.recalc()', function () {\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\tif ( ctx._responsive ) {\n\t\t\tctx._responsive._resizeAuto();\n\t\t\tctx._responsive._resize();\n\t\t}\n\t} );\n} );\n\nApi.register( 'responsive.hasHidden()', function () {\n\tvar ctx = this.context[0];\n\n\treturn ctx._responsive ?\n\t\t$.inArray( false, ctx._responsive.s.current ) !== -1 :\n\t\tfalse;\n} );\n\nApi.registerPlural( 'columns().responsiveHidden()', 'column().responsiveHidden()', function () {\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\treturn settings._responsive ?\n\t\t\tsettings._responsive.s.current[ column ] :\n\t\t\tfalse;\n\t}, 1 );\n} );\n\n\n/**\n * Version information\n *\n * @name Responsive.version\n * @static\n */\nResponsive.version = '2.2.2';\n\n\n$.fn.dataTable.Responsive = Responsive;\n$.fn.DataTable.Responsive = Responsive;\n\n// Attach a listener to the document which listens for DataTables initialisation\n// events so we can automatically initialise\n$(document).on( 'preInit.dt.dtr', function (e, settings, json) {\n\tif ( e.namespace !== 'dt' ) {\n\t\treturn;\n\t}\n\n\tif ( $(settings.nTable).hasClass( 'responsive' ) ||\n\t\t $(settings.nTable).hasClass( 'dt-responsive' ) ||\n\t\t settings.oInit.responsive ||\n\t\t DataTable.defaults.responsive\n\t) {\n\t\tvar init = settings.oInit.responsive;\n\n\t\tif ( init !== false ) {\n\t\t\tnew Responsive( settings, $.isPlainObject( init ) ? init : {}  );\n\t\t}\n\t}\n} );\n\n\nreturn Responsive;\n}));\n\n\n","(function (factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        // AMD. Register as an anonymous module.\r\n        define(['jquery'], factory);\r\n    } else if (typeof exports === 'object') {\r\n        // Node/CommonJS\r\n        factory(require('jquery'));\r\n    } else {\r\n        // Browser globals\r\n        factory(jQuery);\r\n    }\r\n}(function ($) {\r\n\r\nvar ua = navigator.userAgent,\r\n\tiPhone = /iphone/i.test(ua),\r\n\tchrome = /chrome/i.test(ua),\r\n\tandroid = /android/i.test(ua),\r\n\tcaretTimeoutId;\r\n\r\n$.mask = {\r\n\t//Predefined character definitions\r\n\tdefinitions: {\r\n\t\t'9': \"[0-9]\",\r\n\t\t'a': \"[A-Za-z]\",\r\n\t\t'*': \"[A-Za-z0-9]\"\r\n\t},\r\n\tautoclear: true,\r\n\tdataName: \"rawMaskFn\",\r\n\tplaceholder: '_'\r\n};\r\n\r\n$.fn.extend({\r\n\t//Helper Function for Caret positioning\r\n\tcaret: function(begin, end) {\r\n\t\tvar range;\r\n\r\n\t\tif (this.length === 0 || this.is(\":hidden\") || this.get(0) !== document.activeElement) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (typeof begin == 'number') {\r\n\t\t\tend = (typeof end === 'number') ? end : begin;\r\n\t\t\treturn this.each(function() {\r\n\t\t\t\tif (this.setSelectionRange) {\r\n\t\t\t\t\tthis.setSelectionRange(begin, end);\r\n\t\t\t\t} else if (this.createTextRange) {\r\n\t\t\t\t\trange = this.createTextRange();\r\n\t\t\t\t\trange.collapse(true);\r\n\t\t\t\t\trange.moveEnd('character', end);\r\n\t\t\t\t\trange.moveStart('character', begin);\r\n\t\t\t\t\trange.select();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tif (this[0].setSelectionRange) {\r\n\t\t\t\tbegin = this[0].selectionStart;\r\n\t\t\t\tend = this[0].selectionEnd;\r\n\t\t\t} else if (document.selection && document.selection.createRange) {\r\n\t\t\t\trange = document.selection.createRange();\r\n\t\t\t\tbegin = 0 - range.duplicate().moveStart('character', -100000);\r\n\t\t\t\tend = begin + range.text.length;\r\n\t\t\t}\r\n\t\t\treturn { begin: begin, end: end };\r\n\t\t}\r\n\t},\r\n\tunmask: function() {\r\n\t\treturn this.trigger(\"unmask\");\r\n\t},\r\n\tmask: function(mask, settings) {\r\n\t\tvar input,\r\n\t\t\tdefs,\r\n\t\t\ttests,\r\n\t\t\tpartialPosition,\r\n\t\t\tfirstNonMaskPos,\r\n            lastRequiredNonMaskPos,\r\n            len,\r\n            oldVal;\r\n\r\n\t\tif (!mask && this.length > 0) {\r\n\t\t\tinput = $(this[0]);\r\n            var fn = input.data($.mask.dataName)\r\n\t\t\treturn fn?fn():undefined;\r\n\t\t}\r\n\r\n\t\tsettings = $.extend({\r\n\t\t\tautoclear: $.mask.autoclear,\r\n\t\t\tplaceholder: $.mask.placeholder, // Load default placeholder\r\n\t\t\tcompleted: null\r\n\t\t}, settings);\r\n\r\n\r\n\t\tdefs = $.mask.definitions;\r\n\t\ttests = [];\r\n\t\tpartialPosition = len = mask.length;\r\n\t\tfirstNonMaskPos = null;\r\n\r\n\t\tmask = String(mask);\r\n\r\n\t\t$.each(mask.split(\"\"), function(i, c) {\r\n\t\t\tif (c == '?') {\r\n\t\t\t\tlen--;\r\n\t\t\t\tpartialPosition = i;\r\n\t\t\t} else if (defs[c]) {\r\n\t\t\t\ttests.push(new RegExp(defs[c]));\r\n\t\t\t\tif (firstNonMaskPos === null) {\r\n\t\t\t\t\tfirstNonMaskPos = tests.length - 1;\r\n\t\t\t\t}\r\n                if(i < partialPosition){\r\n                    lastRequiredNonMaskPos = tests.length - 1;\r\n                }\r\n\t\t\t} else {\r\n\t\t\t\ttests.push(null);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn this.trigger(\"unmask\").each(function() {\r\n\t\t\tvar input = $(this),\r\n\t\t\t\tbuffer = $.map(\r\n    \t\t\t\tmask.split(\"\"),\r\n    \t\t\t\tfunction(c, i) {\r\n    \t\t\t\t\tif (c != '?') {\r\n    \t\t\t\t\t\treturn defs[c] ? getPlaceholder(i) : c;\r\n    \t\t\t\t\t}\r\n    \t\t\t\t}),\r\n\t\t\t\tdefaultBuffer = buffer.join(''),\r\n\t\t\t\tfocusText = input.val();\r\n\r\n            function tryFireCompleted(){\r\n                if (!settings.completed) {\r\n                    return;\r\n                }\r\n\r\n                for (var i = firstNonMaskPos; i <= lastRequiredNonMaskPos; i++) {\r\n                    if (tests[i] && buffer[i] === getPlaceholder(i)) {\r\n                        return;\r\n                    }\r\n                }\r\n                settings.completed.call(input);\r\n            }\r\n\r\n            function getPlaceholder(i){\r\n                if(i < settings.placeholder.length)\r\n                    return settings.placeholder.charAt(i);\r\n                return settings.placeholder.charAt(0);\r\n            }\r\n\r\n\t\t\tfunction seekNext(pos) {\r\n\t\t\t\twhile (++pos < len && !tests[pos]);\r\n\t\t\t\treturn pos;\r\n\t\t\t}\r\n\r\n\t\t\tfunction seekPrev(pos) {\r\n\t\t\t\twhile (--pos >= 0 && !tests[pos]);\r\n\t\t\t\treturn pos;\r\n\t\t\t}\r\n\r\n\t\t\tfunction shiftL(begin,end) {\r\n\t\t\t\tvar i,\r\n\t\t\t\t\tj;\r\n\r\n\t\t\t\tif (begin<0) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (i = begin, j = seekNext(end); i < len; i++) {\r\n\t\t\t\t\tif (tests[i]) {\r\n\t\t\t\t\t\tif (j < len && tests[i].test(buffer[j])) {\r\n\t\t\t\t\t\t\tbuffer[i] = buffer[j];\r\n\t\t\t\t\t\t\tbuffer[j] = getPlaceholder(j);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tj = seekNext(j);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\twriteBuffer();\r\n\t\t\t\tinput.caret(Math.max(firstNonMaskPos, begin));\r\n\t\t\t}\r\n\r\n\t\t\tfunction shiftR(pos) {\r\n\t\t\t\tvar i,\r\n\t\t\t\t\tc,\r\n\t\t\t\t\tj,\r\n\t\t\t\t\tt;\r\n\r\n\t\t\t\tfor (i = pos, c = getPlaceholder(pos); i < len; i++) {\r\n\t\t\t\t\tif (tests[i]) {\r\n\t\t\t\t\t\tj = seekNext(i);\r\n\t\t\t\t\t\tt = buffer[i];\r\n\t\t\t\t\t\tbuffer[i] = c;\r\n\t\t\t\t\t\tif (j < len && tests[j].test(t)) {\r\n\t\t\t\t\t\t\tc = t;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfunction androidInputEvent(e) {\r\n\t\t\t\tvar curVal = input.val();\r\n\t\t\t\tvar pos = input.caret();\r\n\t\t\t\tif (oldVal && oldVal.length && oldVal.length > curVal.length ) {\r\n\t\t\t\t\t// a deletion or backspace happened\r\n\t\t\t\t\tcheckVal(true);\r\n\t\t\t\t\twhile (pos.begin > 0 && !tests[pos.begin-1])\r\n\t\t\t\t\t\tpos.begin--;\r\n\t\t\t\t\tif (pos.begin === 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\twhile (pos.begin < firstNonMaskPos && !tests[pos.begin])\r\n\t\t\t\t\t\t\tpos.begin++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tinput.caret(pos.begin,pos.begin);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar pos2 = checkVal(true);\r\n\t\t\t\t\tvar lastEnteredValue = curVal.charAt(pos.begin);\r\n\t\t\t\t\tif (pos.begin < len){\r\n\t\t\t\t\t\tif(!tests[pos.begin]){\r\n\t\t\t\t\t\t\tpos.begin++;\r\n\t\t\t\t\t\t\tif(tests[pos.begin].test(lastEnteredValue)){\r\n\t\t\t\t\t\t\t\tpos.begin++;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tif(tests[pos.begin].test(lastEnteredValue)){\r\n\t\t\t\t\t\t\t\tpos.begin++;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tinput.caret(pos.begin,pos.begin);\r\n\t\t\t\t}\r\n\t\t\t\ttryFireCompleted();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfunction blurEvent(e) {\r\n                checkVal();\r\n\r\n                if (input.val() != focusText)\r\n                    input.change();\r\n            }\r\n\r\n\t\t\tfunction keydownEvent(e) {\r\n                if (input.prop(\"readonly\")){\r\n                    return;\r\n                }\r\n\r\n\t\t\t\tvar k = e.which || e.keyCode,\r\n\t\t\t\t\tpos,\r\n\t\t\t\t\tbegin,\r\n\t\t\t\t\tend;\r\n                    oldVal = input.val();\r\n\t\t\t\t//backspace, delete, and escape get special treatment\r\n\t\t\t\tif (k === 8 || k === 46 || (iPhone && k === 127)) {\r\n\t\t\t\t\tpos = input.caret();\r\n\t\t\t\t\tbegin = pos.begin;\r\n\t\t\t\t\tend = pos.end;\r\n\r\n\t\t\t\t\tif (end - begin === 0) {\r\n\t\t\t\t\t\tbegin=k!==46?seekPrev(begin):(end=seekNext(begin-1));\r\n\t\t\t\t\t\tend=k===46?seekNext(end):end;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tclearBuffer(begin, end);\r\n\t\t\t\t\tshiftL(begin, end - 1);\r\n\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t} else if( k === 13 ) { // enter\r\n\t\t\t\t\tblurEvent.call(this, e);\r\n\t\t\t\t} else if (k === 27) { // escape\r\n\t\t\t\t\tinput.val(focusText);\r\n\t\t\t\t\tinput.caret(0, checkVal());\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfunction keypressEvent(e) {\r\n                if (input.prop(\"readonly\")){\r\n                    return;\r\n                }\r\n\r\n\t\t\t\tvar k = e.which || e.keyCode,\r\n\t\t\t\t\tpos = input.caret(),\r\n\t\t\t\t\tp,\r\n\t\t\t\t\tc,\r\n\t\t\t\t\tnext;\r\n\r\n\t\t\t\tif (e.ctrlKey || e.altKey || e.metaKey || k < 32) {//Ignore\r\n\t\t\t\t\treturn;\r\n\t\t\t\t} else if ( k && k !== 13 ) {\r\n\t\t\t\t\tif (pos.end - pos.begin !== 0){\r\n\t\t\t\t\t\tclearBuffer(pos.begin, pos.end);\r\n\t\t\t\t\t\tshiftL(pos.begin, pos.end-1);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tp = seekNext(pos.begin - 1);\r\n\t\t\t\t\tif (p < len) {\r\n\t\t\t\t\t\tc = String.fromCharCode(k);\r\n\t\t\t\t\t\tif (tests[p].test(c)) {\r\n\t\t\t\t\t\t\tshiftR(p);\r\n\r\n\t\t\t\t\t\t\tbuffer[p] = c;\r\n\t\t\t\t\t\t\twriteBuffer();\r\n\t\t\t\t\t\t\tnext = seekNext(p);\r\n\r\n\t\t\t\t\t\t\tif(android){\r\n\t\t\t\t\t\t\t\t//Path for CSP Violation on FireFox OS 1.1\r\n\t\t\t\t\t\t\t\tvar proxy = function() {\r\n\t\t\t\t\t\t\t\t\t$.proxy($.fn.caret,input,next)();\r\n\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\tsetTimeout(proxy,0);\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tinput.caret(next);\r\n\t\t\t\t\t\t\t}\r\n                            if(pos.begin <= lastRequiredNonMaskPos){\r\n\t\t                         tryFireCompleted();\r\n                             }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfunction clearBuffer(start, end) {\r\n\t\t\t\tvar i;\r\n\t\t\t\tfor (i = start; i < end && i < len; i++) {\r\n\t\t\t\t\tif (tests[i]) {\r\n\t\t\t\t\t\tbuffer[i] = getPlaceholder(i);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfunction writeBuffer() { input.val(buffer.join('')); }\r\n\r\n\t\t\tfunction checkVal(allow) {\r\n\t\t\t\t//try to place characters where they belong\r\n\t\t\t\tvar test = input.val(),\r\n\t\t\t\t\tlastMatch = -1,\r\n\t\t\t\t\ti,\r\n\t\t\t\t\tc,\r\n\t\t\t\t\tpos;\r\n\r\n\t\t\t\tfor (i = 0, pos = 0; i < len; i++) {\r\n\t\t\t\t\tif (tests[i]) {\r\n\t\t\t\t\t\tbuffer[i] = getPlaceholder(i);\r\n\t\t\t\t\t\twhile (pos++ < test.length) {\r\n\t\t\t\t\t\t\tc = test.charAt(pos - 1);\r\n\t\t\t\t\t\t\tif (tests[i].test(c)) {\r\n\t\t\t\t\t\t\t\tbuffer[i] = c;\r\n\t\t\t\t\t\t\t\tlastMatch = i;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (pos > test.length) {\r\n\t\t\t\t\t\t\tclearBuffer(i + 1, len);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n                        if (buffer[i] === test.charAt(pos)) {\r\n                            pos++;\r\n                        }\r\n                        if( i < partialPosition){\r\n                            lastMatch = i;\r\n                        }\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (allow) {\r\n\t\t\t\t\twriteBuffer();\r\n\t\t\t\t} else if (lastMatch + 1 < partialPosition) {\r\n\t\t\t\t\tif (settings.autoclear || buffer.join('') === defaultBuffer) {\r\n\t\t\t\t\t\t// Invalid value. Remove it and replace it with the\r\n\t\t\t\t\t\t// mask, which is the default behavior.\r\n\t\t\t\t\t\tif(input.val()) input.val(\"\");\r\n\t\t\t\t\t\tclearBuffer(0, len);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Invalid value, but we opt to show the value to the\r\n\t\t\t\t\t\t// user and allow them to correct their mistake.\r\n\t\t\t\t\t\twriteBuffer();\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twriteBuffer();\r\n\t\t\t\t\tinput.val(input.val().substring(0, lastMatch + 1));\r\n\t\t\t\t}\r\n\t\t\t\treturn (partialPosition ? i : firstNonMaskPos);\r\n\t\t\t}\r\n\r\n\t\t\tinput.data($.mask.dataName,function(){\r\n\t\t\t\treturn $.map(buffer, function(c, i) {\r\n\t\t\t\t\treturn tests[i]&&c!=getPlaceholder(i) ? c : null;\r\n\t\t\t\t}).join('');\r\n\t\t\t});\r\n\r\n\r\n\t\t\tinput\r\n\t\t\t\t.one(\"unmask\", function() {\r\n\t\t\t\t\tinput\r\n\t\t\t\t\t\t.off(\".mask\")\r\n\t\t\t\t\t\t.removeData($.mask.dataName);\r\n\t\t\t\t})\r\n\t\t\t\t.on(\"focus.mask\", function() {\r\n                    if (input.prop(\"readonly\")){\r\n                        return;\r\n                    }\r\n\r\n\t\t\t\t\tclearTimeout(caretTimeoutId);\r\n\t\t\t\t\tvar pos;\r\n\r\n\t\t\t\t\tfocusText = input.val();\r\n\r\n\t\t\t\t\tpos = checkVal();\r\n\r\n\t\t\t\t\tcaretTimeoutId = setTimeout(function(){\r\n                        if(input.get(0) !== document.activeElement){\r\n                            return;\r\n                        }\r\n\t\t\t\t\t\twriteBuffer();\r\n\t\t\t\t\t\tif (pos == mask.replace(\"?\",\"\").length) {\r\n\t\t\t\t\t\t\tinput.caret(0, pos);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tinput.caret(pos);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, 10);\r\n\t\t\t\t})\r\n\t\t\t\t.on(\"blur.mask\", blurEvent)\r\n\t\t\t\t.on(\"keydown.mask\", keydownEvent)\r\n\t\t\t\t.on(\"keypress.mask\", keypressEvent)\r\n\t\t\t\t.on(\"input.mask paste.mask\", function() {\r\n                    if (input.prop(\"readonly\")){\r\n                        return;\r\n                    }\r\n\r\n\t\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\t\tvar pos=checkVal(true);\r\n\t\t\t\t\t\tinput.caret(pos);\r\n                        tryFireCompleted();\r\n\t\t\t\t\t}, 0);\r\n\t\t\t\t});\r\n                if (chrome && android)\r\n                {\r\n                    input\r\n                        .off('input.mask')\r\n                        .on('input.mask', androidInputEvent);\r\n                }\r\n\t\t\t\tcheckVal(); //Perform initial check for existing values\r\n\t\t});\r\n\t}\r\n});\r\n}));","jQuery(document).ready(function($) {\r\n    // Table and masks\r\n    $('#table__multi_tel').DataTable();\r\n    $('#wwb__tel_id').mask('(99) 9999-9999');\r\n    $('#wwb__mnumber_id').mask('(99) 9999-9999');\r\n\r\n    // Icons\r\n    if ($('#wwb__modes').val() == 'custom') {\r\n        $('.wwb__custom_icon').removeClass('hidden');\r\n        $('.wwb__icon_size').addClass('hidden', '');\r\n    }\r\n    if ($('#wwb__modes').val() == 'default' || $('#wwb__modes').val() == 'business') {\r\n        $(\".wwb__custom_icon\").addClass('hidden', '');\r\n        $('.wwb__icon_size').removeClass('hidden');\r\n    }\r\n    $('#wwb__modes').change(function() {\r\n        if ($(this).val() == 'custom') {\r\n            $('.wwb__custom_icon').removeClass('hidden');\r\n            $('.wwb__icon_size').addClass('hidden', '');\r\n        }\r\n        if ($(this).val() == 'default' || $('#wwb__modes').val() == 'business') {\r\n            $(\".wwb__custom_icon\").addClass('hidden', '');\r\n            $('.wwb__icon_size').removeClass('hidden');\r\n        }\r\n    });\r\n    $('.wwb__file_btn').click(function(e) {\r\n        e.preventDefault();\r\n        var custom_uploader = wp.media({\r\n            title: 'Ícone',\r\n            button: {\r\n                text: 'Enviar'\r\n            },\r\n            multiple: false  // Set this to true to allow multiple files to be selected\r\n        })\r\n        .on('select', function() {\r\n            var attachment = custom_uploader.state().get('selection').first().toJSON();\r\n            $('.wwb__file_input').val(attachment.url);\r\n        })\r\n        .open();\r\n    });\r\n\r\n    // Multiple Numbers\r\n    var multi_numbers = [];\r\n    $('#add__mnumbers_btn').click(function() {\r\n        var label = $('#wwb__mlabel_id').val().trim();\r\n        var number = $('#wwb__mnumber_id').val();\r\n        multi_numbers.forEach(verLabelExist);\r\n        function verLabelExist(item, index, arr) {\r\n            if (arr[index][0] == label) {\r\n                labelExist = true;\r\n            }\r\n        }\r\n        if (typeof labelExist == 'undefined' || labelExist == false) {\r\n            multi_numbers[multi_numbers.length] = [label, number];\r\n            $('.mnumbers-preview').html(function() {\r\n                html = '';\r\n                multi_numbers.forEach(function(item, index, arr) {\r\n                    html = html.concat('<p>'+ arr[index][0] + ' - ' + arr[index][1] +'</p>');\r\n                });\r\n                return html;\r\n            });\r\n        } else if (typeof labelExist !== 'undefined' && labelExist) {\r\n            $('#wwb__notices').html('<div class=\"notice notice-error\" id=\"message\"><p><strong>Este nome já está vinculado a outro numero, tente outro.<strong></p></div>');\r\n            $('html, body').animate({scrollTop: 0}, 'slow');\r\n            registerNumberFalse = false;\r\n        }\r\n        $('#wwb__mlabel_id').val('');\r\n        $('#wwb__mnumber_id').val('');\r\n    });\r\n    $('#save__mnumbers_btn').click(function() {\r\n        if (multi_numbers !== '') {\r\n            $.post(wwbtn_ajax_object.ajax_url, {\r\n                'action': 'save__multi_numbers',\r\n                'data': multi_numbers\r\n            }, function(response) {\r\n                if (response == 'success') {\r\n                    multi_numbers = [];\r\n                    $('#wwb__notices').html('<div class=\"updated\"><p><strong>Alterações salvas.</strong> <a href=\"'+ window.location.href +'\">Recarregar</a>.</p></div>');\r\n                } else if (response == 'fail') {\r\n                    $('#wwb__notices').html('<div class=\"error\"><p><strong>O nome definido já está vinculado a outro telefone, tente outro nome.<strong></p></div>');\r\n                }\r\n                multi_numbers = [];\r\n                $('.mnumbers-preview').html('<p>Não há números adicionados ainda.</p>');\r\n                $('html, body').animate({scrollTop: 0}, 'slow');\r\n            });\r\n        }\r\n    });\r\n    $('#clean__mnumbers_btn').click(function() {\r\n        multi_numbers = [];\r\n        $('.mnumbers-preview').html('<p>Não há números adicionados ainda.</p>');\r\n    });\r\n    $('.delete__number').click(function() {\r\n        label_del = $(this).attr('data-label');\r\n        $.post(wwbtn_ajax_object.ajax_url, {\r\n            'action': 'delete__number',\r\n            'data': label_del\r\n        }, function(response) {\r\n            if (response == 'success') {\r\n                multi_numbers = [];\r\n                $('#wwb__notices').html('<div class=\"updated\"><p><strong>Número deletado.</strong> <a href=\"'+ window.location.href +'\">Recarregar</a>.</p></div>');\r\n            } else {\r\n                $('#wwb__notices').html('<div class=\"error\"><p><strong><span class=\"dashicons dashicons-warning\"></span> Desculpe, um erro ocorreu. Se o erro persistir me informe através do <a href=\"https://github.com/flavisXavier\">GitHub</a>.<strong></p></div>');\r\n            }\r\n            $('html, body').animate({scrollTop: 0}, 'slow');\r\n        });\r\n    });\r\n});"]}